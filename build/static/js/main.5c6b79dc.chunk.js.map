{"version":3,"sources":["shared/constants.ts","networking.ts","shared/utilities.ts","components/SideDrawer.tsx","icons/src/brake-icon.svg","icons/BrakeIcon.tsx","components/TopBar.tsx","components/RobotConnectCard.tsx","pages/InitialSetup.tsx","components/PathRecorderPopUpCard.tsx","components/Joystick.tsx","pages/ManualControl.tsx","components/GeneralCard.tsx","components/GpsCard.tsx","components/MechanicalBrakeCard.tsx","components/MotorControllerCard.tsx","components/SubjectVehicleCard.tsx","pages/RobotStatus.tsx","components/path/PathRecoderTab.tsx","components/path/PathViewingTab.tsx","components/path/SharedPathTab.tsx","pages/Path.tsx","components/path_following/PrepareTab.tsx","components/path_following/TestTab.tsx","pages/PathFollowing.tsx","components/AutoDownhill.tsx","components/TestDataReadyPopUp.tsx","components/ResetMicroControllerModal.tsx","path-recorder.ts","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["DRAWER_WIDTH","OVERSEER_STATE_STRING","MC_STATE_STRING","NMT_STATE_STRING","GNSS_FIX_TYPE","MC_ERROR_WORD","Networking","id","isConnectedOnce","guiState","robotState","socket","senders","dataArrivalTime","intervalId1","intervalId2","receivedSharedPath","pathToFollow","lastConnectedId","isNewTestDataReady","testLogMessages","errorMessages","this","isConnected","type","robotVelocityCommand","v","w","robotTurningRadius","overseerState","websocketClientCount","doesBrakeWhenStopped","robotTemperature","batteryTemperature","batteryVoltage","portentaHeartbeat","motorControllers","leftFront","state","heartbeatNmt","isHeartbeatTimeout","motorCurrentDraw","wheelRpmActual","errorWord","windingTemperature","leftBack","rightFront","rightBack","gps","status","latitude","longitude","northVelocity","eastVelocity","zAngularVelocity","heading","pathFollower","pathName","scriptName","targetVehicle","velocity","gps_ready","gps_correction_type","mechanicalBrake","brakeStatus","fullyseated_L","fullyseated_R","timestamp","latitudes","longitudes","WebSocket","error","console","onopen","event","Date","now","setInterval","close","heartbeat","onmessage","data","JSON","parse","toLocaleTimeString","push","commandMessage","newline_separated","errorMessage","split","error_message","onclose","clearInterval","joystick","travel","angle","message","send","stringify","spin","angular_velocity","x","theta","moveForward","stop","enableManaul","releaseMechanicalBrake","idle","readyState","OPEN","toggleBrakeWhenStopped","setMagneticCalibration","method","sharePath","startPathFollowing","uploadPath","filename","fileContent","uploadScript","returnToStart","resetMicroController","hasErrors","EN_factors","lat_ref","e","R","pi","Math","PI","sin","cos","sqrt","LL2NE","long_ref","E_factor","N_factor","useStyles","makeStyles","theme","toolbar","mixins","drawerPaper","width","logo","paddingTop","list","padding","errorIcon","color","Component","networking","mobileOpen","setMobileOpen","classes","useTheme","history","useHistory","itemsLIst","text","onClick","canShowErrorIcon","drawer","className","Typography","variant","align","Divider","List","map","item","ListItem","button","ListItemText","primary","Tooltip","title","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","_style","_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBrakeIcon","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","y","viewBox","style","enableBackground","xmlSpace","ref","d","ForwardRef","SvgIcon","appBar","breakpoints","up","marginLeft","marginRight","menuButton","display","spacing","start","backgroundColor","background","connection","reconnect","brakeIcon","fontSize","topBarTitle","pathRecorder","handleRobotConnect","AppBar","position","Toolbar","IconButton","edge","noWrap","isRecording","xsDown","Button","green","red","margin","textField","handleRobotDisconnect","useState","setId","Card","CardContent","TextField","label","onChange","value","onKeyDown","Page","setTopBarTitle","useEffect","Grid","container","justify","alignItems","root","marginTop","boxShadow","zIndex","body","pathSwitch","numberOfPoints","FormControlLabel","control","Switch","checked","isRecordingLine","toggleLineRecording","Joystick","circleDiameter","sender_thottle_time","previousTime","handleJoystickStart","evt","handleJoystickEnd","setTimeout","handleJoystickMove","distance","radian","marginBottom","toFixed","options","mode","top","left","size","nippleSize","outline","height","overflow","onStart","onEnd","onMove","controlBox","moveButton","rotateRightButton","rotateIcon","isSpinning","isMovingForward","WebkitUserSelect","onPointerUp","Box","disabled","onPointerDown","onPointerOut","expand","paddingBottom","transform","transition","transitions","create","duration","shortest","expandOpen","cardContent","React","pow","verticalAlign","motorController","location","toString","copyButton","navigator","clipboard","writeText","mb","flexDirection","border","overflowY","overflowX","msg","notes","snackOpen","setSnackOpen","paddingLeft","requestRecording","stopRecording","pathString","concat","blob","Blob","saveAs","exportPath","Snackbar","autoHideDuration","elevation","severity","chartContainer","chartStyle","bottom","right","pathViewer","easts","norths","chartRef","pos_north","pos_east","current","createChartData","str","isNaN","Number","parseFloat","importFileRef","file","files","reader","FileReader","addEventListener","splitText","result","lineNumber","line","latLong","isNumeric","readAsText","chartData","ax","ay","aValue","x1","y1","x2","y2","desiredSpacing","useRef","useLayoutEffect","chart","am4core","am4charts","paddingRight","xAxis","xAxes","renderer","minGridDistance","baseGrid","strokeOpacity","strokeWidth","yAxis","yAxes","series1","series","dataFields","valueX","valueY","bullet1","bullets","circle","radius","numberFormatter","numberFormat","tooltipText","scrollbarX","scrollbarY","dispose","importFromRecorder","component","importFromFile","hidden","sharedPath","TabPanel","children","index","other","role","p","palette","tab","setValue","Tabs","scrollButtons","indicatorColor","textColor","newValue","Tab","snackbar","opacity","uploadPathRef","uploadScriptRef","wrongExtensionSnackbarOpen","setWrongExtensionSnackbarOpen","name","anchorOrigin","vertical","horizontal","pathDisplay","robot_east","robot_north","pathSeriesRef","xAxisRef","yAxisRef","forceRun","undefined","eastMin","min","eastMax","max","northMin","northMax","axisLength","createPathSeriesData","headingRadian","robotSeriesRef","addData","bx","by","pathSeriesData","messageBox","maxHeight","plotPathSeries","plotRobotSeries","strictMinMax","pathSeries","robotSeries","stroke","bullet2","propertyFields","rotation","arrow","createChild","horizontalCenter","verticalCenter","fill","link","document","createElement","href","click","downloadTestData","motorTempInfoButton","motorTempInfoCard","maxMotorTemp","setMaxMotorTemp","snackbarOpen","setSnackbarOpen","modalOpen","setModalOpen","mcs","max_t","Modal","justifyContent","getModalStyle","modalStyle","setOpen","PathRecorder","hasBeenRecordingLine","pointDistance","priorLatitude","priorLongitude","latRef","longRef","recorderId","haversineDistance","haversine","EN","northStart","eastStart","northEnd","eastEnd","lineDistance","divisions","floor","newLatitude","newLongitude","lat1","lat2","long1","long2","latRadian1","latRadian2","longRadian1","deltaLat","deltaLong","content","App","setForceRerender","id1","recordWhenRequested","CssBaseline","path","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5c6b79dc.chunk.js","sourcesContent":["export const DRAWER_WIDTH = 185\nexport const OVERSEER_STATE_STRING: { [char: string]: string } = {\n  0: \"Initial\",\n  1: \"Manual\",\n  2: \"Auto\",\n  3: \"E-Stopped\",\n  // 4: \"Error\",\n  5: \"Stopped\",\n  6: \"Decending\",\n  7: \"Idle\",\n}\n\nexport const MC_STATE_STRING: { [char: string]: string } = {\n  0: \"not ready to switch on\",\n  64: \"switch on disabled\",\n  33: \"ready to switch on\",\n  35: \"switched on\",\n  39: \"operation enabled\",\n  7: \"quick stop active\",\n  15: \"fault reaction active\",\n  8: \"fault\",\n}\n\nexport const NMT_STATE_STRING: { [key: string]: string } = {\n  0: \"boot up\",\n  4: \"stopped\",\n  5: \"operational\",\n  127: \"pre-operational\",\n}\n\nexport const GNSS_FIX_TYPE: { [key: string]: string } = {\n  0: \"No Solution\",\n  1: \"Unknown\",\n  2: \"Single\",\n  3: \"PSRDIFF\",\n  4: \"SBAS\",\n  5: \"Omnister\",\n  6: \"RTK Float\",\n  7: \"RTK Integer\",\n}\n\nexport const MC_ERROR_WORD: { [key: string]: string } = {\n  0: \"None\",\n  1: \"SpeedDeviationError\",\n  2: \"FollowingError\",\n  4: \"OverVoltageError\",\n  8: \"UnderVoltageError\",\n  16: \"TempWarning\",\n  32: \"TempError\",\n  64: \"Encoder error\",\n  128: \"Int HW error\",\n  512: \"Current Measurement Error\",\n  2048: \"Com error\",\n  4096: \"Calc error\",\n  8192: \"Dynamic Limit\",\n  16384: \"Safety monitor error\",\n}\n","import { GuiState, RobotState, Senders } from \"./shared/interfaces\"\n\nexport default class Networking {\n  guiState: GuiState\n  robotState: RobotState\n  socket: WebSocket\n  senders: Senders\n  dataArrivalTime: number\n  intervalId1!: NodeJS.Timeout\n  intervalId2!: NodeJS.Timeout\n  receivedSharedPath: { timestamp: string; latitudes: Array<number>; longitudes: Array<number> }\n  pathToFollow: { latitudes: Array<number>; longitudes: Array<number> }\n  lastConnectedId: string\n  isConnectedOnce: boolean\n  isNewTestDataReady: boolean\n  testLogMessages: Array<string>\n  errorMessages: Array<string>\n\n  constructor(id: string, isConnectedOnce: boolean) {\n    if (isConnectedOnce) {\n      this.lastConnectedId = id\n      this.isConnectedOnce = true\n    } else {\n      this.lastConnectedId = \"\"\n      this.isConnectedOnce = false\n    }\n\n    this.guiState = {\n      isConnected: false,\n      id: id,\n    }\n\n    // robotState:\n    //   -should have the same keys as the received JSON message from robot\n    //   -JSON message is received continuosly at certain rate\n    this.robotState = {\n      type: \"robotState\",\n      robotVelocityCommand: {\n        v: 0,\n        w: 0,\n      },\n      robotTurningRadius: 0,\n      overseerState: 0,\n      websocketClientCount: 0,\n      doesBrakeWhenStopped: false,\n      robotTemperature: 0,\n      batteryTemperature: 0,\n      batteryVoltage: 0,\n      portentaHeartbeat: true,\n      motorControllers: {\n        leftFront: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        leftBack: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightFront: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightBack: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n      },\n      gps: {\n        status: -1,\n        latitude: 0,\n        longitude: 0,\n        northVelocity: 0,\n        eastVelocity: 0,\n        zAngularVelocity: 0,\n        heading: 0,\n      },\n      pathFollower: {\n        pathName: \"\",\n        scriptName: \"\",\n      },\n      targetVehicle: {\n        latitude: 0,\n        longitude: 0,\n        heading: 0,\n        velocity: 0,\n        gps_ready: false,\n        gps_correction_type: 0,\n      },\n      mechanicalBrake: {\n        brakeStatus: 0,\n        fullyseated_L: 0,\n        fullyseated_R: 0,\n      },\n    }\n\n    // Here are the attributes that don't get updated continuously\n    this.receivedSharedPath = { timestamp: \"\", latitudes: [], longitudes: [] }\n    this.pathToFollow = { latitudes: [], longitudes: [] }\n    this.isNewTestDataReady = false\n    this.testLogMessages = []\n    this.errorMessages = []\n\n    // For disconnecting when no more incoming data\n    this.dataArrivalTime = 0\n\n    try {\n      if (id === \"localhost\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://localhost:9000\")\n      } else if (id === \"999\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://192.168.1.129:9000\")\n      } else {\n        this.socket = new WebSocket(\"ws://195.0.0.\" + id + \":9000\")\n      }\n    } catch (error) {\n      console.error(error)\n      this.socket = new WebSocket(\"ws://0.0.0.0\")\n    }\n\n    this.socket.onopen = (event) => {\n      this.guiState.isConnected = true\n      this.dataArrivalTime = Date.now()\n\n      this.lastConnectedId = this.guiState.id\n      this.isConnectedOnce = true\n\n      // disconnect if no messages are received for a period of time\n      this.intervalId1 = setInterval(() => {\n        if (Date.now() - this.dataArrivalTime > 4000) {\n          this.guiState.isConnected = false // needed when wifi gets disconnected\n          this.socket.close()\n        }\n      }, 250)\n\n      // send out heartbeat\n      this.intervalId2 = setInterval(() => {\n        this.senders.heartbeat()\n      }, 200)\n    }\n\n    this.socket.onmessage = (event) => {\n      this.dataArrivalTime = Date.now()\n\n      const data = JSON.parse(event.data)\n\n      if (data.type === \"robotState\") {\n        this.robotState = data\n      } else if (data.type === \"sharedPath\") {\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n\n        this.receivedSharedPath = {\n          timestamp: timestamp,\n          latitudes: data.latitudes,\n          longitudes: data.longitudes,\n        }\n      } else if (data.type === \"/path_follower/path_to_follow\") {\n        this.pathToFollow.latitudes = data.latitudes\n        this.pathToFollow.longitudes = data.longitudes\n      } else if (data.type === \"createdCSV\") {\n        this.isNewTestDataReady = true\n      } else if (data.type === \"commandMessage\") {\n        this.testLogMessages.push(data.commandMessage)\n      } else if (data.type === \"errorMessage\") {\n        // Attach a date to the error message\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n        this.errorMessages.push(timestamp)\n\n        // Attach the error messages to both test log and error log\n        const newline_separated = data.errorMessage.split(/\\r?\\n/)\n        for (const error_message of newline_separated) {\n          // \"2\" is Auto\n          if (this.robotState.overseerState === 2) {\n            this.testLogMessages.push(error_message)\n          }\n          this.errorMessages.push(error_message)\n        }\n      }\n    }\n\n    // the onclose callback will not run immediately when wifi gets disconnected\n    this.socket.onclose = (event) => {\n      this.guiState.isConnected = false\n      clearInterval(this.intervalId1)\n      clearInterval(this.intervalId2)\n    }\n\n    this.senders = {\n      joystick: (travel, angle) => {\n        const message = {\n          type: \"/joystick\",\n          travel: travel,\n          angle: angle,\n        }\n\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      spin: (angular_velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: 0,\n          theta: angular_velocity,\n        }\n\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      moveForward: (velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: velocity,\n          theta: 0,\n        }\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      stop: () => {\n        const message = {\n          type: \"/gui/stop_clicked\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      enableManaul: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/enable_manual_clicked\" }))\n        }\n      },\n\n      releaseMechanicalBrake: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/release_mechanical_brake_clicked\" }))\n        }\n      },\n\n      idle: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/idle_clicked\" }))\n        }\n      },\n\n      heartbeat: () => {\n        if (this.socket.readyState === WebSocket.OPEN) {\n          this.socket.send(JSON.stringify({ type: \"/gui/heartbeat\" }))\n        }\n      },\n\n      toggleBrakeWhenStopped: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/brake_when_stopped_toggled\" }))\n        }\n      },\n\n      setMagneticCalibration: (method) => {\n        const message = {\n          type: \"/an_device/magnetic_calibration/calibrate\",\n          method: method,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      sharePath: (latitudes, longitudes) => {\n        const message = {\n          type: \"sharedPath\",\n          latitudes: latitudes,\n          longitudes: longitudes,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      startPathFollowing: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/start_path_following_clicked\" }))\n        }\n      },\n\n      uploadPath: (filename, fileContent) => {\n        // return if file extension is not txt\n        if (filename.split(\".\")[1] !== \"txt\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_path_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      uploadScript: (filename, fileContent) => {\n        // return if file extension is not py\n        if (filename.split(\".\")[1] !== \"py\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_script_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      returnToStart: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/return_to_start_clicked\" }))\n        }\n      },\n\n      resetMicroController: () => {\n        const message = {\n          type: \"/gui/reset_micro_controller\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      }\n    }\n  }\n}\n","// abbreviations\n// lat: latitude\n// long: longitude\n// ref: reference\n// pos: position\n\nimport { RobotState } from \"./interfaces\"\n\nexport function hasErrors(robotState: RobotState) {\n  return (\n    (robotState.motorControllers.leftFront.errorWord !== 0 &&\n      robotState.motorControllers.leftFront.errorWord !== 64) ||\n    robotState.motorControllers.leftFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.leftBack.errorWord !== 0 &&\n      robotState.motorControllers.leftBack.errorWord !== 64) ||\n    robotState.motorControllers.leftBack.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightFront.errorWord !== 0 &&\n      robotState.motorControllers.rightFront.errorWord !== 64) ||\n    robotState.motorControllers.rightFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightBack.errorWord !== 0 &&\n      robotState.motorControllers.rightBack.errorWord !== 64) ||\n    robotState.motorControllers.rightBack.isHeartbeatTimeout\n  )\n}\n\nexport function EN_factors(lat_ref: number) {\n  const e = 0.0818191908426\n  const R = 6378137\n  const pi = Math.PI\n\n  const sin = Math.sin\n  const cos = Math.cos\n  const sqrt = Math.sqrt\n\n  const E_factor =\n    (((cos((lat_ref * pi) / 180) * R) / sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2)) * pi) / 180\n\n  const N_factor =\n    ((((1 - e ** 2) * R) /\n      ((1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2) * sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2))) *\n      pi) /\n    180\n  return [E_factor, N_factor]\n}\n\n// Latitude Longitude to North East\nexport function LL2NE(\n  latitude: number,\n  longitude: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const pos_east = (longitude - long_ref) * E_factor\n  const pos_north = (latitude - lat_ref) * N_factor\n  return [pos_north, pos_east]\n}\n\nexport function NE2LL(\n  pos_north: number,\n  pos_east: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const longitude = pos_east / E_factor + long_ref\n  const latitude = pos_north / N_factor + lat_ref\n  return [latitude, longitude]\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH } from \"../shared/constants\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Divider from \"@material-ui/core/Divider\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for pushing the SideDrawer below the TopBar\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  logo: {\n    paddingTop: 10,\n  },\n  list: {\n    padding: 0,\n  },\n  errorIcon: {\n    color: \"red\",\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  mobileOpen: boolean\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function Component({ networking, mobileOpen, setMobileOpen }: Props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const itemsLIst = [\n    {\n      text: \"Initial Setup\",\n      onClick: () => {\n        history.push(\"/initialsetup\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Manual Control\",\n      onClick: () => {\n        history.push(\"/manualcontrol\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Robot Status\",\n      onClick: () => {\n        history.push(\"/robotstatus\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: true,\n    },\n    {\n      text: \"Path\",\n      onClick: () => {\n        history.push(\"/path\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Path Following\",\n      onClick: () => {\n        history.push(\"/pathfollowing\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n  ]\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography variant=\"h4\" align=\"center\" color=\"primary\" className={classes.logo}>\n          STRIDE\n        </Typography>\n      </div>\n\n      <Divider />\n      <List className={classes.list}>\n        {itemsLIst.map((item) => {\n          const { text, onClick, canShowErrorIcon } = item\n          return (\n            <ListItem button key={text} onClick={onClick}>\n              <ListItemText primary={text} />\n              {canShowErrorIcon && hasErrors(networking.robotState) && networking.guiState.isConnected ? (\n                <Tooltip title=\"ERROR\">\n                  <ErrorOutlineIcon className={classes.errorIcon} />\n                </Tooltip>\n              ) : null}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav aria-label=\"mailbox folders\">\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={() => setMobileOpen(false)}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  )\n}\n","var _style, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBrakeIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.29\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.29\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".st0{fill-rule:evenodd;clip-rule:evenodd;}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M18.86,59.43l-4.25-1.19c-0.26,2.11-0.4,4.26-0.4,6.44c0,6.93,1.37,13.53,3.86,19.53v0.01 c2.59,6.24,6.38,11.86,11.09,16.56l0.01,0.01c4.7,4.71,10.32,8.5,16.56,11.09h0.01c6,2.49,12.6,3.86,19.53,3.86 c6.93,0,13.53-1.37,19.53-3.86c6.23-2.58,11.85-6.38,16.57-11.1h0.01c4.71-4.7,8.5-10.32,11.09-16.56V84.2 c2.49-6,3.86-12.6,3.86-19.53c0-6.93-1.37-13.53-3.86-19.53c-2.58-6.23-6.38-11.85-11.1-16.57v-0.01 c-4.7-4.71-10.32-8.5-16.56-11.09h-0.01c-4.19-1.74-8.67-2.93-13.36-3.49v5.62C46.4,19.6,25.3,36.45,18.86,59.43L18.86,59.43z M60.83,6.79c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1C56.74,8.63,58.57,6.79,60.83,6.79 L60.83,6.79z M13.43,42.53c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1 C9.33,44.36,11.17,42.53,13.43,42.53L13.43,42.53z M8.24,56.44L0,54.13C8.99,22.12,38.19,0,71.44,0v7.39 c5.56,0.59,10.89,1.98,15.87,4.04l0,0c7.05,2.92,13.39,7.2,18.69,12.51l0.01-0.01c5.3,5.3,9.58,11.65,12.51,18.72 c2.82,6.8,4.37,14.24,4.37,22.02c0,7.79-1.56,15.24-4.37,22.04l0,0c-2.92,7.05-7.2,13.39-12.51,18.69l0.01,0.01 c-5.3,5.3-11.65,9.58-18.72,12.51c-6.8,2.82-14.24,4.37-22.02,4.37c-7.79,0-15.24-1.56-22.04-4.37l0,0 c-7.05-2.92-13.39-7.2-18.69-12.5l-0.01-0.01c-5.3-5.3-9.58-11.64-12.5-18.69l0,0c-2.82-6.8-4.37-14.24-4.37-22.04 C7.65,61.88,7.85,59.13,8.24,56.44L8.24,56.44z M65.27,29.18c4.81,0,9.39,0.96,13.58,2.69c4.34,1.8,8.25,4.44,11.52,7.71 c3.27,3.27,5.91,7.18,7.71,11.53c1.73,4.18,2.69,8.77,2.69,13.57c0,4.81-0.96,9.39-2.69,13.58c-1.8,4.34-4.44,8.25-7.71,11.52 c-3.27,3.27-7.18,5.91-11.53,7.71c-4.18,1.73-8.77,2.69-13.57,2.69c-4.81,0-9.39-0.96-13.58-2.69c-4.34-1.8-8.25-4.44-11.52-7.71 c-3.27-3.27-5.91-7.18-7.71-11.53c-1.73-4.18-2.69-8.77-2.69-13.57c0-4.81,0.96-9.39,2.69-13.58c1.8-4.34,4.44-8.25,7.71-11.52 c3.27-3.27,7.18-5.91,11.53-7.71C55.88,30.14,60.46,29.18,65.27,29.18L65.27,29.18z M57.41,58.28c0.12-0.16,0.24-0.31,0.36-0.46 c0.18-0.22,0.38-0.43,0.59-0.64c0.49-0.48,1.02-0.91,1.6-1.29c0.49-0.32,1.01-0.59,1.55-0.82l0-18.27 c-3.02,0.4-5.88,1.28-8.52,2.56c-2.84,1.38-5.41,3.22-7.61,5.42c-1.21,1.21-2.31,2.52-3.28,3.93c-0.88,1.28-1.66,2.63-2.33,4.05 L57.41,58.28L57.41,58.28z M68.54,60.82c-0.42-0.42-0.93-0.77-1.5-1c-0.54-0.22-1.14-0.35-1.78-0.35c-0.63,0-1.23,0.12-1.78,0.35 c-0.56,0.23-1.07,0.57-1.5,1l-0.01,0.01c-0.43,0.43-0.77,0.93-1,1.5c-0.22,0.54-0.35,1.14-0.35,1.78c0,0.63,0.12,1.23,0.35,1.78 c0.23,0.57,0.57,1.07,1,1.5L62,67.38c0.42,0.43,0.93,0.77,1.5,1c0.54,0.22,1.14,0.35,1.78,0.35c0.63,0,1.23-0.12,1.78-0.35 c0.57-0.23,1.07-0.57,1.5-1l0.01-0.01c0.42-0.42,0.77-0.93,1-1.5c0.22-0.54,0.35-1.14,0.35-1.78c0-0.63-0.13-1.23-0.35-1.78 C69.31,61.76,68.96,61.25,68.54,60.82L68.54,60.82z M68.85,54.99c0.58,0.23,1.14,0.52,1.67,0.86c0.61,0.39,1.16,0.83,1.66,1.33 c0.16,0.16,0.33,0.34,0.49,0.53c0.1,0.12,0.2,0.24,0.29,0.36l17.99-4.82c-0.67-1.51-1.48-2.96-2.4-4.32 c-1.01-1.49-2.16-2.88-3.43-4.15c-2.23-2.23-4.83-4.08-7.69-5.47c-2.66-1.28-5.56-2.16-8.6-2.55V54.99L68.85,54.99z M75,65.15 c-0.08,0.69-0.22,1.37-0.43,2.01c-0.22,0.66-0.51,1.3-0.86,1.89l10.42,16.51l0.36-0.33c0.22-0.2,0.44-0.42,0.68-0.66 c2.59-2.59,4.68-5.69,6.11-9.13c1.37-3.31,2.13-6.95,2.13-10.76c0-0.81-0.03-1.62-0.1-2.41c-0.06-0.66-0.14-1.32-0.24-1.96 L75,65.15L75,65.15z M67.87,73.54c-0.37,0.1-0.75,0.18-1.13,0.24c-0.48,0.07-0.97,0.11-1.47,0.11c-0.44,0-0.88-0.03-1.32-0.09 c-0.34-0.05-0.68-0.11-1.01-0.19L52.89,89.95c1.84,0.9,3.78,1.61,5.81,2.09c2.1,0.5,4.3,0.77,6.57,0.77c2.35,0,4.62-0.29,6.8-0.83 c2.11-0.52,4.12-1.28,6.02-2.25L67.87,73.54L67.87,73.54z M56.96,69.27c-0.36-0.58-0.67-1.2-0.9-1.85 c-0.23-0.64-0.4-1.31-0.49-2.01l-18.01-5.64c-0.13,0.74-0.23,1.48-0.3,2.22c-0.08,0.87-0.13,1.77-0.13,2.68 c0,3.81,0.76,7.45,2.13,10.76c1.42,3.44,3.51,6.54,6.11,9.13c0.28,0.28,0.57,0.55,0.84,0.81l0.54,0.49L56.96,69.27L56.96,69.27z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrakeIcon);\nexport default __webpack_public_path__ + \"static/media/brake-icon.97838cea.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\"\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\"\nimport { ReactComponent as Logo } from \"./src/brake-icon.svg\"\n\nexport default function Component(props: SvgIconProps) {\n  return (\n    <div>\n      <SvgIcon {...props}>\n        <Logo />\n      </SvgIcon>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH, OVERSEER_STATE_STRING } from \"../shared/constants\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { green, red } from \"@material-ui/core/colors\"\nimport PathRecorder from \"../path-recorder\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  stop: {\n    marginLeft: theme.spacing(1.5),\n  },\n  start: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    marginLeft: theme.spacing(1.5),\n    \"&:hover\": {\n      background: \"darkgreen\",\n    },\n  },\n  connection: {\n    color: \"lightgray\",\n  },\n  state: {\n    marginLeft: theme.spacing(1.5),\n    color: \"lightgray\",\n  },\n  errorIcon: {\n    marginLeft: theme.spacing(1.5),\n    color: \"red\",\n  },\n  reconnect: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1.5),\n    fontSize: 30,\n  },\n  idle: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n  topBarTitle: string\n  pathRecorder: PathRecorder\n  handleRobotConnect: (id: string) => void\n}\n\nexport default function Component({\n  networking,\n  setMobileOpen,\n  topBarTitle,\n  pathRecorder,\n  handleRobotConnect,\n}: Props) {\n  const classes = useStyles()\n\n  const guiState = networking.guiState\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleStopButton() {\n    senders.stop()\n  }\n\n  function handleIdle() {\n    senders.idle()\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => setMobileOpen(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          {topBarTitle}\n        </Typography>\n\n        {pathRecorder.isRecording ? (\n          <Tooltip title=\"Recording\">\n            <FiberManualRecordIcon style={{ color: \"red\", marginRight: \"6px\" }} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected ? (\n          <>\n            <Hidden xsDown>\n              <Typography variant=\"body2\" className={classes.connection}>\n                {`ID: ${guiState.id}`}\n              </Typography>\n            </Hidden>\n\n            <Typography variant=\"body2\" className={classes.state}>\n              {OVERSEER_STATE_STRING[robotState.overseerState]}\n            </Typography>\n          </>\n        ) : (\n          <Typography variant=\"body2\" className={classes.connection}>\n            not connected\n          </Typography>\n        )}\n\n        {!guiState.isConnected && networking.lastConnectedId !== \"\" && (\n          <Button\n            className={classes.reconnect}\n            variant=\"contained\"\n            onClick={() => handleRobotConnect(\"useRecentId\")}\n          >\n            reconnect\n          </Button>\n        )}\n\n        {guiState.isConnected && hasErrors(robotState) ? (\n          <Tooltip title=\"ERROR\">\n            <ErrorOutlineIcon fontSize=\"large\" className={classes.errorIcon} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 2 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: green[500] }} />\n        )}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 3 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: red[500] }} />\n        )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 1 ||\n            robotState.overseerState === 2 ||\n            robotState.overseerState === 7 ||\n            robotState.overseerState === 4) && ( // if in manual, auto, idle, or return_to_start\n            <Button className={classes.stop} variant=\"contained\" color=\"secondary\" onClick={handleStopButton}>\n              stop\n            </Button>\n          )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 5 || robotState.overseerState === 6) && ( // if in stopped or decending\n            <Button className={classes.idle} variant=\"contained\" onClick={handleIdle}>\n              idle\n            </Button>\n          )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  status: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: \"15.5rem\",\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n}\n\nexport default function Component({ networking, handleRobotConnect, handleRobotDisconnect }: Props) {\n  const classes = useStyles()\n\n  const [id, setId] = useState(\"\")\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Robot Connection\n        </Typography>\n\n        <Typography variant=\"caption\" display=\"block\" className={classes.status}>\n          {networking.guiState.isConnected ? `conntected (ID: ${networking.guiState.id})` : \"not connected\"}\n        </Typography>\n\n        <TextField\n          label=\"Robot ID\"\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => {\n            setId(e.target.value)\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleRobotConnect(id)\n            }\n          }}\n        />\n        <br />\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleRobotConnect(id)}\n        >\n          Connect\n        </Button>\n\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleRobotDisconnect()}\n        >\n          Disconnect\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport RobotConnectCard from \"../components/RobotConnectCard\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({\n  networking,\n  handleRobotConnect,\n  handleRobotDisconnect,\n  setTopBarTitle,\n}: Props) {\n  useEffect(() => {\n    setTopBarTitle(\"Initial Setup\")\n  }, [])\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n      <Grid item>\n        <RobotConnectCard\n          networking={networking}\n          handleRobotConnect={handleRobotConnect}\n          handleRobotDisconnect={handleRobotDisconnect}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\n// ws://192.168.1.129:9090\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    marginLeft: theme.spacing(1.5),\n    marginTop: theme.spacing(1.5),\n    // boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    boxShadow: \"3px 3px 5px rgba(0,0,0,0.2)\",\n    zIndex: 1,\n  },\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  pathSwitch: {\n    marginLeft: 0,\n  },\n}))\n\ninterface Props {\n  pathRecorder: PathRecorder\n  networking: Networking\n}\n\nexport default function Component({ pathRecorder, networking }: Props) {\n  const classes = useStyles()\n  const date = new Date()\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Typography variant=\"h6\" className={classes.title}>\n        Recording Path\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        GPS Status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <FormControlLabel\n        className={classes.pathSwitch}\n        control={\n          <Switch\n            checked={pathRecorder.isRecordingLine}\n            onChange={() => pathRecorder.toggleLineRecording()}\n            color=\"primary\"\n          />\n        }\n        label=\"Record a line\"\n      />\n    </Card>\n  )\n}\n","import React, { Component } from \"react\"\n\nimport ReactNipple from \"react-nipple\"\nimport \"react-nipple/lib/styles.css\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport PathRecorderPopUpCard from \"./PathRecorderPopUpCard\"\nimport PathRecorder from \"../path-recorder\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Networking from \"../networking\"\n\n// Abbreviations:\n// ICR = instantaneous center of rotation\n// v,V = linear velocity\n// w,W = angular velocity\n// r,R = turning radius of robot geometric center\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default class Joystick extends Component<Props> {\n  circleDiameter = 400 // pixels\n  sender_thottle_time = 100 //ms\n  previousTime = Date.now()\n\n  render() {\n    return (\n      <div>\n        <h3 style={{ marginTop: 0, marginBottom: 5 }}>Press and drag below to move the robot</h3>\n\n        <Tooltip title=\"Linear Velocity\">\n          <span style={{ fontSize: 16 }}>\n            v: {this.props.networking.robotState.robotVelocityCommand.v.toFixed(2)} m/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Measured Linear Velocity\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            vm:{\" \"}\n            {Math.sqrt(\n              this.props.networking.robotState.gps.eastVelocity ** 2 +\n                this.props.networking.robotState.gps.northVelocity ** 2\n            ).toFixed(2)}{\" \"}\n            m/s\n          </span>\n        </Tooltip>\n\n        <br />\n\n        <Tooltip title=\"Angular Velocity\">\n          <span style={{ fontSize: 16 }}>\n            w: {((this.props.networking.robotState.robotVelocityCommand.w / Math.PI) * 180).toFixed(0)} deg/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Turning Radius\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            r: {this.props.networking.robotState.robotTurningRadius.toFixed(0)} m\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Heading\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            h: {((this.props.networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n          </span>\n        </Tooltip>\n\n        <br />\n        {this.props.pathRecorder.isRecording ? (\n          <PathRecorderPopUpCard pathRecorder={this.props.pathRecorder} networking={this.props.networking} />\n        ) : null}\n\n        <ReactNipple\n          className=\"nipple\"\n          options={{\n            mode: \"dynamic\",\n            color: \"blue\",\n            position: { top: \"50%\", left: \"50%\" },\n            size: this.circleDiameter,\n            nippleSize: 90,\n          }}\n          style={{\n            zIndex: 0,\n            outline: `1px dashed blue`,\n            width: \"100%\",\n            height: \"max( 100vh - 325px, 120px)\", // calc() not needed inside max()\n            // display: \"table\",\n            overflow: \"hidden\",\n          }}\n          onStart={this.handleJoystickStart}\n          onEnd={this.handleJoystickEnd}\n          onMove={this.handleJoystickMove}\n        />\n        {/* <DebugView data={this.state.data} /> */}\n      </div>\n    )\n  }\n\n  handleJoystickStart = (evt: any, data: any) => {}\n\n  handleJoystickEnd = (evt: any, data: any) => {\n    setTimeout(() => {\n      this.props.networking.senders.joystick(0, 0)\n    }, 100) // needed, otherwise the subscriber callback for /robot_velocity_command won't get triggered\n  }\n  handleJoystickMove = (evt: any, data: any) => {\n    if (Date.now() - this.previousTime < this.sender_thottle_time) {\n      return\n    }\n    this.previousTime = Date.now()\n\n    const travel = data.distance / (this.circleDiameter * 0.5)\n    const angle = data.angle.radian - Math.PI / 2 // the angle when pushing the joystick forwards is now 0\n\n    this.props.networking.senders.joystick(travel, angle)\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport Joystick from \"../components/Joystick\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\"\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Box from \"@material-ui/core/Box\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  controlBox: {\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n  moveButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateRightButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1),\n    marginTop: 5,\n    fontSize: 20,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\nlet isSpinning = false\nlet isMovingForward = false\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleManualSwitch(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.checked) {\n      senders.enableManaul()\n    } else {\n      senders.stop()\n    }\n  }\n\n  function handleBrakeWhenStoppedSwitch() {\n    senders.toggleBrakeWhenStopped()\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Manual Control\")\n  }, [])\n\n  return (\n    // WebkitUserSelect is used to prevent random text selection when using the joystick\n    <div style={{ WebkitUserSelect: \"none\" }}>\n      {robotState.mechanicalBrake.brakeStatus != 0 && robotState.mechanicalBrake.brakeStatus != 1 && robotState.overseerState !== 2 && (\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerUp={() => {\n            senders.releaseMechanicalBrake()\n          }}\n        >\n          Release Mechanical Brake <BrakeIcon className={classes.brakeIcon} />\n        </Button>\n      )}\n\n      <Box>\n        <FormControlLabel\n          control={\n            <Switch checked={robotState.overseerState === 1} onChange={handleManualSwitch} color=\"primary\" />\n          }\n          label=\"Enable Manual Control\"\n          disabled={\n            robotState.overseerState === 2 || robotState.overseerState === 3 || robotState.overseerState === 6\n          }\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={robotState.doesBrakeWhenStopped === true}\n              onChange={handleBrakeWhenStoppedSwitch}\n              color=\"primary\"\n            />\n          }\n          label=\"Hold Motors When Not Moving\"\n        />\n      </Box>\n\n      <Box className={classes.controlBox}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateLeftIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.rotateRightButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(-0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateRightIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.moveButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isMovingForward = true\n            senders.moveForward(0.75)\n          }}\n          onPointerUp={() => {\n            isMovingForward = false\n            senders.moveForward(0)\n          }}\n          onPointerOut={() => {\n            if (isMovingForward) {\n              senders.moveForward(0)\n            }\n          }}\n        >\n          move <ArrowUpwardIcon className={classes.rotateIcon} />\n        </Button>\n      </Box>\n\n      <Joystick networking={networking} pathRecorder={pathRecorder} />\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          General\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Voltage: {robotState.batteryVoltage.toFixed(2)}V\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Robot Internal Temperature: {robotState.robotTemperature}F\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Clients Connected to Robot: {robotState.websocketClientCount}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          GPS\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitdue (deg): {robotState.gps.latitude.toFixed(9)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.gps.longitude.toFixed(9)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          North Velocity (m/s): {robotState.gps.northVelocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          East Velocity (m/s): {robotState.gps.eastVelocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Linear Speed (m/s):{\" \"}\n          {Math.sqrt(\n            Math.pow(robotState.gps.eastVelocity, 2) + Math.pow(robotState.gps.northVelocity, 2)\n          ).toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Angular Velocity (deg/s): {((robotState.gps.zAngularVelocity / Math.PI) * 180).toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          Mechanical Brake\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Brake Status: {robotState.mechanicalBrake.brakeStatus}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Left Brake Fully Seated: {robotState.mechanicalBrake.fullyseated_L}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Right Brake Fully Seated: {robotState.mechanicalBrake.fullyseated_R}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState, MotorController } from \"../shared/interfaces\"\nimport { MC_STATE_STRING, NMT_STATE_STRING, MC_ERROR_WORD } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  errorIcon: {\n    // marginLeft: theme.spacing(1.5),\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\ninterface Props {\n  motorController: MotorController\n  id: number\n  location: string\n}\n\nexport default function Component({ motorController, id, location }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Motor Controller {id}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.title}>\n          Motor Location: {location}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Error: {MC_ERROR_WORD[motorController.errorWord]}{\" \"}\n          {motorController.errorWord !== 0 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heartbeat Timeout: {motorController.isHeartbeatTimeout.toString()}{\" \"}\n          {motorController.isHeartbeatTimeout ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          State: {MC_STATE_STRING[motorController.state]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          NMT State: {NMT_STATE_STRING[motorController.heartbeatNmt]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Motor Current (A): {motorController.motorCurrentDraw.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Actual Wheel RPM: {motorController.wheelRpmActual.toFixed(0)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Winding Temperature (C): {motorController.windingTemperature.toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  copyButton: {\n    paddingTop: 0,\n    marginLeft: theme.spacing(0.5),\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          Subject Vehicle\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitude (deg): {robotState.targetVehicle.latitude.toFixed(7)}\n          <IconButton\n            className={classes.copyButton}\n            size=\"small\"\n            onClick={() =>\n              navigator.clipboard.writeText(robotState.targetVehicle.latitude.toFixed(7).toString())\n            }\n          >\n            <FileCopyOutlinedIcon style={{ fontSize: 16 }} />\n          </IconButton>\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.targetVehicle.longitude.toFixed(7)}\n          <IconButton\n            className={classes.copyButton}\n            size=\"small\"\n            onClick={() =>\n              navigator.clipboard.writeText(robotState.targetVehicle.longitude.toFixed(7).toString())\n            }\n          >\n            <FileCopyOutlinedIcon style={{ fontSize: 16 }} />\n          </IconButton>\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {robotState.targetVehicle.heading.toFixed(2)}\n          <IconButton\n            className={classes.copyButton}\n            size=\"small\"\n            onClick={() =>\n              navigator.clipboard.writeText(robotState.targetVehicle.heading.toFixed(2).toString())\n            }\n          >\n            <FileCopyOutlinedIcon style={{ fontSize: 16 }} />\n          </IconButton>\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Velocity (m/s): {robotState.targetVehicle.velocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Ready: {robotState.targetVehicle.gps_ready.toString()}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Correction Type: {robotState.targetVehicle.gps_correction_type}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport GeneralCard from \"../components/GeneralCard\"\nimport GpsCard from \"../components/GpsCard\"\nimport MechanicalBrakeCard from \"../components/MechanicalBrakeCard\"\nimport MotorControllerCard from \"../components/MotorControllerCard\"\nimport SubjectVehicleCard from \"../components/SubjectVehicleCard\"\nimport Networking from \"../networking\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({ networking, setTopBarTitle }: Props) {\n  const robotState = networking.robotState\n\n  useEffect(() => {\n    setTopBarTitle(\"Robot Status\")\n  }, [])\n  return (\n    <div>\n      <Grid container spacing={2} alignItems=\"flex-start\">\n        <Grid item>\n          <GeneralCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <GpsCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftFront}\n            id={1}\n            location=\"left_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftBack}\n            id={2}\n            location=\"left_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightFront}\n            id={3}\n            location=\"right_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightBack}\n            id={4}\n            location=\"right_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MechanicalBrakeCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <SubjectVehicleCard robotState={robotState} />\n        </Grid>\n      </Grid>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Error Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.errorMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../../path-recorder\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default function Component({ networking, pathRecorder }: Props) {\n  const classes = useStyles()\n  const date = new Date()\n  const [snackOpen, setSnackOpen] = useState(false)\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < pathRecorder.numberOfPoints; i++) {\n      pathString = pathString.concat(\n        pathRecorder.latitudes[i].toFixed(17).toString(),\n        \" \",\n        pathRecorder.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\n          <li>The GPS cordinates of the robot can be recorded here.</li>\n          <li>Move the robot to create a path when recording starts.</li>\n          <li>Tips for recording:</li>\n          <ul>\n            <li>Since speed is not recorded, move robot slowly to accurately capture path.</li>\n            <li>\n              You may record path that has sharp corners. Robot can be programmed later to stop at the corner\n              and rotate to the specified heading before moving again.\n            </li>\n          </ul>\n        </ul>\n      </Typography>\n      <Divider />\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Status: {pathRecorder.isRecording ? \"Recording...\" : \"Not Recording\"}\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.requestRecording()\n        }}\n      >\n        record\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.stopRecording()\n        }}\n      >\n        stop\n      </Button>\n\n      <br />\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n\n      <br />\n\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={8000}\n        onClose={() => {\n          setSnackOpen(false)\n        }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Go to the SHARED tab above in another connected device.\n        </MuiAlert>\n      </Snackbar>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          setSnackOpen(true)\n          networking.senders.sharePath(pathRecorder.latitudes, pathRecorder.longitudes)\n        }}\n      >\n        share with other devices\n      </Button>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { EN_factors, LL2NE, NE2LL } from \"../../shared/utilities\"\nimport PathRecorder from \"../../path-recorder\"\n\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 90vh))\",\n  paddingTop: \"calc((min(100%, 90vh)) - 15px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathViewer {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n  }\n\n  importFromRecorder(latitudes: number[], longitudes: number[], chartRef: React.MutableRefObject<any>) {\n    this.latitudes = latitudes\n    this.longitudes = longitudes\n\n    this.easts = []\n    this.norths = []\n\n    const [E_factor, N_factor] = EN_factors(latitudes[0])\n    this.E_factor = E_factor\n    this.N_factor = N_factor\n\n    this.lat_ref = latitudes[0]\n    this.long_ref = longitudes[0]\n\n    for (let i = 0; i < latitudes.length; i++) {\n      const [pos_north, pos_east] = LL2NE(\n        latitudes[i],\n        longitudes[i],\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      this.easts.push(pos_east)\n      this.norths.push(pos_north)\n    }\n\n    chartRef.current.data = this.createChartData()\n  }\n\n  isNumeric(str: string) {\n    return (\n      !isNaN(Number(str)) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n      !isNaN(parseFloat(str))\n    ) // ...and ensure strings of whitespace fail\n  }\n\n  importFromFile(importFileRef: React.MutableRefObject<any>, chartRef: React.MutableRefObject<any>) {\n    this.easts = []\n    this.norths = []\n    this.latitudes = []\n    this.longitudes = []\n\n    const file = importFileRef.current.files[0]\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const text = event.target.result\n      const splitText = text.split(\"\\n\")\n\n      let lineNumber = 1\n      for (const line of splitText) {\n        // omit the first line in file\n        if (lineNumber === 1) {\n          lineNumber++\n          continue\n        }\n\n        const latLong = line.split(/ |\\t/)\n        if (latLong.length === 2) {\n          if (this.isNumeric(latLong[0]) && this.isNumeric(latLong[1])) {\n            this.latitudes.push(Number(latLong[0]))\n            this.longitudes.push(Number(latLong[1]))\n          }\n        }\n      }\n\n      const [E_factor, N_factor] = EN_factors(this.latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = this.latitudes[0]\n      this.long_ref = this.longitudes[0]\n\n      for (let i = 0; i < this.latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          this.latitudes[i],\n          this.longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      importFileRef.current.value = \"\" // this is needed for importing the same file that has been saved over\n\n      chartRef.current.data = this.createChartData()\n    })\n    reader.readAsText(file)\n  }\n\n  createChartData() {\n    const chartData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      chartData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return chartData\n  }\n\n  twoPointDistance(x1: number, y1: number, x2: number, y2: number) {\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n  }\n\n  // spacing is in meters\n  correctPointSpacing(desiredSpacing: number) {\n    // const s = desiredSpacing\n    // const newEasts = [this.easts[0]]\n    // const newNorths = [this.norths[0]]\n    // let Cx = newEasts[0]\n    // let Cy = newNorths[0]\n    // let Tx = 0\n    // let Ty = 0\n    // let i = 1\n    // let g = this.twoPointDistance(Cx, Cy, this.easts[1], this.norths[1])\n    // const totalPoints = pathViewer.easts.length\n    // while (i <= totalPoints) {\n    //   if (g > s) {\n    //     while (g > s) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //       newEasts.push(Tx)\n    //       newNorths.push(Ty)\n    //       Cx = Tx\n    //       Cy = Ty\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   } else if (g < s) {\n    //     while (g < s) {\n    //       i += 1\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   }\n    //   if (g === s) {\n    //     // ????\n    //   }\n    //   Cx = newEasts[newEasts.length - 1]\n    //   Cy = newNorths[newNorths.length - 1]\n    //   g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //   if (g > s) {\n    //     if (k = i -1) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //     } else {\n    //       k = i - 1\n    //     }\n    //   }\n    //   if (distance >= desiredSpacing) {\n    //     const newEast = newEasts[newEasts.length - 1] + (tail / distance) * (this.easts[i + 1] - this.easts[i])\n    //     const newNorth = this.norths[i] + (tail / distance) * (this.norths[i + 1] - this.norths[i])\n    // }\n  }\n}\n\ninterface Props {\n  pathRecorder: PathRecorder\n}\n\nconst pathViewer = new PathViewer()\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nexport default function Component({ pathRecorder }: Props) {\n  const classes = useStyles()\n  const importFileRef: React.MutableRefObject<any> = useRef()\n\n  // XY Chart\n  const chartRef: React.MutableRefObject<any> = useRef()\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    chart.data = pathViewer.createChartData()\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.3\n    xAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.3\n    yAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create series\n    let series1 = chart.series.push(new am4charts.LineSeries())\n    series1.dataFields.valueX = \"ax\"\n    series1.dataFields.valueY = \"ay\"\n    series1.dataFields.value = \"aValue\"\n    series1.strokeWidth = 2\n\n    let bullet1 = series1.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    //scrollbars\n    chart.scrollbarX = new am4core.Scrollbar()\n    chart.scrollbarY = new am4core.Scrollbar()\n\n    chartRef.current = chart\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathViewer.importFromRecorder(pathRecorder.latitudes, pathRecorder.longitudes, chartRef)\n        }}\n      >\n        import from recorder\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        import from file\n        <input\n          type=\"file\"\n          ref={importFileRef}\n          onChange={() => pathViewer.importFromFile(importFileRef, chartRef)}\n          hidden\n        />\n      </Button>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const sharedPath = networking.receivedSharedPath\n  const date = new Date()\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < sharedPath.latitudes.length; i++) {\n      pathString = pathString.concat(\n        sharedPath.latitudes[i].toFixed(17).toString(),\n        \" \",\n        sharedPath.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Shared path from another device will appear here.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Time Received: {sharedPath.timestamp} <br />\n        Number of Points: {sharedPath.latitudes.length}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorderTab from \"../components/path/PathRecoderTab\"\nimport PathViewingTab from \"../components/path/PathViewingTab\"\nimport SharedPathTab from \"../components/path/SharedPathTab\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path\")\n  }, [])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"Record\" className={classes.tab} />\n          <Tab label=\"View\" className={classes.tab} />\n          <Tab label=\"Shared\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PathRecorderTab networking={networking} pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PathViewingTab pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <SharedPathTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useRef } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  snackbar: {\n    opacity: 0.9,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const uploadPathRef: React.MutableRefObject<any> = useRef()\n  const uploadScriptRef: React.MutableRefObject<any> = useRef()\n\n  const [wrongExtensionSnackbarOpen, setWrongExtensionSnackbarOpen] = useState(false)\n\n  function uploadPath() {\n    const file = uploadPathRef.current.files[0]\n    uploadPathRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"txt\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadPath(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  function uploadScript() {\n    const file = uploadScriptRef.current.files[0]\n    uploadScriptRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"py\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadScript(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Note that the robot only stores the most recently uploaded path and script files.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Path (.txt file): {networking.robotState.pathFollower.pathName} <br />\n        Script (.py file): {networking.robotState.pathFollower.scriptName}\n      </Typography>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload path\n        <input\n          type=\"file\"\n          ref={uploadPathRef}\n          onChange={() => {\n            uploadPath()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload script\n        <input\n          type=\"file\"\n          ref={uploadScriptRef}\n          onChange={() => {\n            uploadScript()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Snackbar\n        className={classes.snackbar}\n        open={wrongExtensionSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setWrongExtensionSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Incorrect file extension\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useState, useRef, useEffect, useLayoutEffect } from \"react\"\n\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { EN_factors, LL2NE, NE2LL } from \"../../shared/utilities\"\nimport { GNSS_FIX_TYPE } from \"../../shared/constants\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 70vh))\",\n  paddingTop: \"calc((min(100%, 70vh)) - 0px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathDisplay {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n  robot_east: number\n  robot_north: number\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n    this.robot_east = 0\n    this.robot_north = 0\n  }\n\n  plotPathSeries(\n    latitudes: number[],\n    longitudes: number[],\n    pathSeriesRef: React.MutableRefObject<any>,\n    xAxisRef: React.MutableRefObject<any>,\n    yAxisRef: React.MutableRefObject<any>,\n    forceRun: boolean\n  ) {\n    if (forceRun === true || (this.latitudes !== latitudes && pathSeriesRef.current !== undefined)) {\n      this.latitudes = latitudes\n      this.longitudes = longitudes\n\n      this.easts = []\n      this.norths = []\n\n      const [E_factor, N_factor] = EN_factors(latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = latitudes[0]\n      this.long_ref = longitudes[0]\n\n      for (let i = 0; i < latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          latitudes[i],\n          longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      const eastMin = Math.min(...this.easts)\n      const eastMax = Math.max(...this.easts)\n      const northMin = Math.min(...this.norths)\n      const northMax = Math.max(...this.norths)\n\n      const axisLength = Math.max(eastMax - eastMin, northMax - northMin)\n\n      xAxisRef.current.min = eastMin - 3\n      xAxisRef.current.max = eastMin + axisLength + 3\n      yAxisRef.current.min = northMin - 3\n      yAxisRef.current.max = northMin + axisLength + 3\n\n      pathSeriesRef.current.data = this.createPathSeriesData()\n    }\n  }\n\n  plotRobotSeries(\n    latitude: number,\n    longitude: number,\n    headingRadian: number,\n    robotSeriesRef: React.MutableRefObject<any>\n  ) {\n    if (robotSeriesRef.current !== undefined) {\n      const [pos_north, pos_east] = LL2NE(\n        latitude,\n        longitude,\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      robotSeriesRef.current.addData(\n        { bx: pos_east, by: pos_north, angle: (headingRadian / Math.PI) * 180 },\n        1\n      )\n\n      // For displaying the numerical values of robot location\n      this.robot_east = pos_east\n      this.robot_north = pos_north\n    }\n  }\n\n  createPathSeriesData() {\n    const pathSeriesData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      pathSeriesData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return pathSeriesData\n  }\n}\n\nconst pathDisplay = new PathDisplay()\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(1),\n    fontSize: 11,\n  },\n  messageBox: {\n    maxHeight: 10,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const downloadTestData = () => {\n    const link = document.createElement(\"a\")\n    link.href = `http://195.0.0.${networking.guiState.id}:3001/test-data.csv`\n    link.click()\n  }\n\n  const pathSeriesRef: React.MutableRefObject<any> = useRef()\n  const robotSeriesRef: React.MutableRefObject<any> = useRef()\n  const xAxisRef: React.MutableRefObject<any> = useRef()\n  const yAxisRef: React.MutableRefObject<any> = useRef()\n\n  pathDisplay.plotPathSeries(\n    networking.pathToFollow.latitudes,\n    networking.pathToFollow.longitudes,\n    pathSeriesRef,\n    xAxisRef,\n    yAxisRef,\n    false\n  )\n\n  pathDisplay.plotRobotSeries(\n    networking.robotState.gps.latitude,\n    networking.robotState.gps.longitude,\n    networking.robotState.gps.heading,\n    robotSeriesRef\n  )\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.5\n    xAxis.renderer.baseGrid.strokeWidth = 1\n    xAxis.strictMinMax = true\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.renderer.minGridDistance = 40\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.5\n    yAxis.renderer.baseGrid.strokeWidth = 1\n    yAxis.strictMinMax = true\n\n    // Path series\n    let pathSeries = chart.series.push(new am4charts.LineSeries())\n    pathSeries.dataFields.valueX = \"ax\"\n    pathSeries.dataFields.valueY = \"ay\"\n    pathSeries.dataFields.value = \"aValue\"\n    pathSeries.strokeWidth = 2\n\n    let bullet1 = pathSeries.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    // Robot series\n    let robotSeries = chart.series.push(new am4charts.LineSeries())\n    robotSeries.dataFields.valueX = \"bx\"\n    robotSeries.dataFields.valueY = \"by\"\n    robotSeries.strokeWidth = 2\n    robotSeries.stroke = am4core.color(\"#ff0000\")\n\n    // It must be initialized with two data points to prevent blinking\n    robotSeries.data = [\n      { bx: 0, by: 0, angle: 0 },\n      { bx: 0, by: 0, angle: 0 },\n    ]\n\n    let bullet2 = robotSeries.bullets.push(new am4charts.Bullet())\n    bullet2.propertyFields.rotation = \"angle\"\n\n    // Add a triangle to act as am arrow\n    let arrow = bullet2.createChild(am4core.Triangle)\n    arrow.horizontalCenter = \"middle\"\n    arrow.verticalCenter = \"middle\"\n    arrow.direction = \"top\"\n    arrow.width = 10\n    arrow.height = 25\n    arrow.fill = am4core.color(\"#ffffff00\")\n    arrow.strokeWidth = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    pathSeriesRef.current = pathSeries\n    robotSeriesRef.current = robotSeries\n    xAxisRef.current = xAxis\n    yAxisRef.current = yAxis\n\n    pathDisplay.plotPathSeries(\n      networking.pathToFollow.latitudes,\n      networking.pathToFollow.longitudes,\n      pathSeriesRef,\n      xAxisRef,\n      yAxisRef,\n      true\n    )\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      {/* <Typography variant=\"body1\" className={classes.notes}>\n        Start path following, and visualize robot location and other status like speed\n      </Typography> */}\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.startPathFollowing()\n        }}\n      >\n        start test\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.returnToStart()\n        }}\n      >\n        return to start position\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          downloadTestData()\n        }}\n      >\n        download test data\n      </Button>\n\n      <Typography variant=\"body2\" className={classes.body}>\n        GPS status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Robot Location: ({pathDisplay.robot_east.toFixed(2)}, {pathDisplay.robot_north.toFixed(2)})\n        <br />\n        Heading: {((networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n        <br />\n        Speed:{\" \"}\n        {Math.sqrt(\n          networking.robotState.gps.eastVelocity ** 2 + networking.robotState.gps.northVelocity ** 2\n        ).toFixed(2)}{\" \"}\n        m/s\n      </Typography>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Test Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.testLogMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport PrepareTab from \"../components/path_following/PrepareTab\"\nimport TestTab from \"../components/path_following/TestTab\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path Following\")\n  }, [])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"prepare\" className={classes.tab} />\n          <Tab label=\"test\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PrepareTab networking={networking} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TestTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  motorTempInfoButton: {\n    paddingBottom: 1,\n    paddingTop: 0,\n    marginLeft: theme.spacing(1),\n    color: \"white\",\n  },\n  motorTempInfoCard: {\n    width: 400,\n  },\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [maxMotorTemp, setMaxMotorTemp] = useState(0)\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n\n  // handleMotorTemperature()\n  useEffect(() => {\n    const temperature_threshold = 85\n\n    const mcs = networking.robotState.motorControllers\n    const max_t = Math.max(\n      mcs.leftBack.windingTemperature,\n      mcs.leftFront.windingTemperature,\n      mcs.rightBack.windingTemperature,\n      mcs.rightFront.windingTemperature\n    )\n    setMaxMotorTemp(max_t)\n\n    if (max_t > temperature_threshold) {\n      setSnackbarOpen(true)\n    } else {\n      setSnackbarOpen(false)\n    }\n  })\n\n  return (\n    <div>\n      <Modal\n        style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n        open={modalOpen}\n        onClose={() => setModalOpen(false)}\n      >\n        <Card className={classes.motorTempInfoCard} variant=\"outlined\">\n          <CardContent>\n            <Typography variant=\"body1\">\n              Upon reaching the temperature threshold, if Stride is on a slope, it will move downhill until\n              flat ground. <br />\n              This feature is omitted in the \"E-stopped\" state, in which Stride will attempt to stay still\n              until the motors give out.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Modal>\n\n      <Snackbar className={classes.snackbar} open={snackbarOpen}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Motor Temp: {maxMotorTemp} / 105C\n          <IconButton\n            className={classes.motorTempInfoButton}\n            size=\"small\"\n            onClick={() => {\n              setModalOpen(true)\n            }}\n          >\n            <InfoIcon />\n          </IconButton>\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n  useEffect(() => {\n    if (networking.isNewTestDataReady === true) {\n      setSnackbarOpen(true)\n      networking.isNewTestDataReady = false\n    }\n  })\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.snackbar}\n        open={snackbarOpen}\n        autoHideDuration={5000}\n        onClose={() => {\n          setSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Test Data Ready for Download\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Button from \"@material-ui/core/Button\"\n\nimport Networking from \"../networking\"\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nexport default function Component({ networking }: { networking: Networking }) {\n  const classes = useStyles()\n  const [modalStyle] = React.useState(getModalStyle)\n  const [open, setOpen] = useState(false)\n\n  function reset() {\n    networking.senders.resetMicroController()\n  }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h3>The micro-controller requires a reset. Please power cycle the robot.</h3>\n      {/* <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={reset}>\n        reset\n      </Button> */}\n    </div>\n  )\n\n  useEffect(() => {\n    setOpen(!networking.robotState.portentaHeartbeat)\n  })\n\n  return (\n    <div>\n      <Modal open={open}>{body}</Modal>\n    </div>\n  )\n}\n","// abbreviations:\n// refLat: reference latitude\n// refLong: reference longitude\n// EN: East North\n\nimport { EN_factors, LL2NE, NE2LL } from \"./shared/utilities\"\n\nexport default class PathRecorder {\n  isRecording: boolean\n  isRecordingLine: boolean\n  hasBeenRecordingLine: boolean\n  pointDistance: number\n  latitudes: number[]\n  longitudes: number[]\n  priorLatitude: number\n  priorLongitude: number\n  latRef: number\n  longRef: number\n  E_factor: number\n  N_factor: number\n  recorderId: number\n  numberOfPoints: number\n\n  constructor() {\n    this.isRecording = false\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.pointDistance = 0.3 // meters\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.latRef = -1\n    this.longRef = -1\n    this.E_factor = 0\n    this.N_factor = 0\n    this.recorderId = 0\n    this.numberOfPoints = 0\n  }\n\n  requestRecording() {\n    this.isRecording = true\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.numberOfPoints = 0\n  }\n\n  stopRecording() {\n    this.isRecording = false\n    this.isRecordingLine = false\n\n    //DO NOT ADD THIS HERE: this.hasBeenRecordingLine = false\n  }\n\n  toggleLineRecording() {\n    this.isRecordingLine = !this.isRecordingLine\n  }\n\n  recordWhenRequested(latitude: number, longitude: number) {\n    if (this.isRecording) {\n      const haversineDistance = this.haversine(this.priorLatitude, latitude, this.priorLongitude, longitude)\n\n      if (this.priorLatitude === -1 || this.priorLongitude === -1) {\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.latRef = latitude\n        this.longRef = longitude\n\n        const EN = EN_factors(this.latRef)\n        this.E_factor = EN[0]\n        this.N_factor = EN[1]\n      } else if (this.isRecordingLine) {\n        this.hasBeenRecordingLine = true\n      } else if (this.hasBeenRecordingLine) {\n        this.hasBeenRecordingLine = false\n        const [northStart, eastStart] = LL2NE(\n          this.priorLatitude,\n          this.priorLongitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const [northEnd, eastEnd] = LL2NE(\n          latitude,\n          longitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const lineDistance = ((northStart - northEnd) ** 2 + (eastStart - eastEnd) ** 2) ** 0.5\n        const divisions = Math.floor(lineDistance / this.pointDistance)\n\n        // good that the FOR loop won't run if divisions is < 1\n        for (let i = 1; i <= divisions; i++) {\n          const newNorth = northStart + (i / divisions) * (northEnd - northStart)\n          const newEast = eastStart + (i / divisions) * (eastEnd - eastStart)\n          const [newLatitude, newLongitude] = NE2LL(\n            newNorth,\n            newEast,\n            this.latRef,\n            this.longRef,\n            this.E_factor,\n            this.N_factor\n          )\n          this.latitudes.push(newLatitude)\n          this.longitudes.push(newLongitude)\n          this.numberOfPoints += 1\n\n          this.priorLatitude = newLatitude\n          this.priorLongitude = newLongitude\n        }\n      } else if (haversineDistance > this.pointDistance) {\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n      }\n    }\n  }\n\n  // transformToRobotCenter(latRadian2: number, longRadian2: number, headingRadian: number) {\n  //   const R = 6371008 // Earth mean radisu in meters\n  //   const r = R * Math.cos(latRadian2) // radius of the earth circular slice at latitude2 in meters\n  //   const d = 0.2736 // distance between gps and robot center in meters\n  //   const theta = 0.11 // the radian angle between the gps and the robot center\n\n  //   const latRadian1 = (R * latRadian2 - d * Math.cos(headingRadian + theta)) / R\n  //   const longRadian1 = (r * longRadian2 - d * Math.sin(headingRadian + theta)) / r\n\n  //   const latCentered = (latRadian1 / Math.PI) * 180\n  //   const longCentered = (longRadian1 / Math.PI) * 180\n\n  //   return [latCentered, longCentered]\n  // }\n\n  // Haversine Distance in meters between two latlong points\n  haversine(lat1: number, lat2: number, long1: number, long2: number) {\n    const latRadian1 = (lat1 / 180) * Math.PI\n    const latRadian2 = (lat2 / 180) * Math.PI\n    const longRadian1 = (long1 / 180) * Math.PI\n    const longRadian2 = (long2 / 180) * Math.PI\n\n    const R = 6371008 // Earth mean radisu in meters\n    const deltaLat = latRadian2 - latRadian1\n    const deltaLong = longRadian2 - longRadian1\n\n    // Small angle approximation is used\n    const distance =\n      R * Math.sqrt(deltaLat ** 2 + Math.cos(latRadian1) * Math.cos(latRadian2) * deltaLong ** 2)\n\n    return distance // in meters\n  }\n}\n","import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { DRAWER_WIDTH } from \"./shared/constants\"\n\nimport Networking from \"./networking\"\n\nimport SideDrawer from \"./components/SideDrawer\"\nimport TopBar from \"./components/TopBar\"\nimport InitialSetup from \"./pages/InitialSetup\"\nimport ManualControl from \"./pages/ManualControl\"\nimport RobotStatus from \"./pages/RobotStatus\"\nimport Path from \"./pages/Path\"\nimport PathFollowing from \"./pages/PathFollowing\"\nimport AutoDownhill from \"./components/AutoDownhill\"\nimport TestDataReadyPopUp from \"./components/TestDataReadyPopUp\"\nimport ResetMicroControllerModal from \"./components/ResetMicroControllerModal\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PathRecorder from \"./path-recorder\"\n\nlet networking = new Networking(\"\", false)\n\nconst pathRecorder = new PathRecorder() // initialized in App.tsx because components like TopBar needs its data\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for content to be below app bar\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n    padding: theme.spacing(3),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n\n  const [forceRerender, setForceRerender] = useState({})\n  const [topBarTitle, setTopBarTitle] = useState(\"\")\n  const [mobileOpen, setMobileOpen] = useState(false) // open status of the side menu in mobile screen\n\n  function handleRobotConnect(id: string) {\n    if (id === \"useRecentId\") {\n      networking.socket.close()\n      networking = new Networking(networking.lastConnectedId, networking.isConnectedOnce)\n    } else {\n      networking.socket.close()\n      networking = new Networking(id, false)\n    }\n  }\n  function handleRobotDisconnect() {\n    networking.socket.close()\n  }\n\n  useEffect(() => {\n    const id1 = setInterval(() => {\n      setForceRerender({})\n\n      // record path when requested\n      const latitude = networking.robotState.gps.latitude\n      const longitude = networking.robotState.gps.longitude\n      pathRecorder.recordWhenRequested(latitude, longitude)\n    }, 100)\n\n    return () => {\n      clearInterval(id1)\n    }\n  }, [])\n\n  // console.log(\"rendered\")\n\n  return (\n    <Router>\n      <CssBaseline />\n      <ResetMicroControllerModal networking={networking} />\n      <AutoDownhill networking={networking} />\n      <TestDataReadyPopUp networking={networking} />\n      <TopBar\n        networking={networking}\n        setMobileOpen={setMobileOpen}\n        topBarTitle={topBarTitle}\n        pathRecorder={pathRecorder}\n        handleRobotConnect={handleRobotConnect}\n      />\n      <SideDrawer networking={networking} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/initialsetup\" />\n          </Route>\n\n          <Route path=\"/initialsetup\">\n            <InitialSetup\n              networking={networking}\n              handleRobotConnect={handleRobotConnect}\n              handleRobotDisconnect={handleRobotDisconnect}\n              setTopBarTitle={setTopBarTitle}\n            />\n          </Route>\n\n          <Route path=\"/manualcontrol\">\n            <ManualControl\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n\n          <Route path=\"/robotstatus\">\n            <RobotStatus networking={networking} setTopBarTitle={setTopBarTitle} />\n          </Route>\n\n          <Route path=\"/path\">\n            <Path networking={networking} setTopBarTitle={setTopBarTitle} pathRecorder={pathRecorder} />\n          </Route>\n\n          <Route path=\"/pathfollowing\">\n            <PathFollowing\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}