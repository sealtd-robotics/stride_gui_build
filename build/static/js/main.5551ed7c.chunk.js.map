{"version":3,"sources":["shared/constants.ts","networking.ts","shared/utilities.ts","components/SideDrawer.tsx","icons/src/brake-icon.svg","icons/BrakeIcon.tsx","components/TopBar.tsx","components/RobotConnectCard.tsx","pages/InitialSetup.tsx","components/PathRecorderPopUpCard.tsx","components/Joystick.tsx","pages/ManualControl.tsx","components/GeneralCard.tsx","components/GpsCard.tsx","components/MechanicalBrakeCard.tsx","components/MotorControllerCard.tsx","components/SubjectVehicleCard.tsx","pages/RobotStatus.tsx","components/path/PathRecoderTab.tsx","components/path/PathViewingTab.tsx","components/path/SharedPathTab.tsx","pages/Path.tsx","components/path_following/PrepareTab.tsx","components/path_following/TestTab.tsx","pages/PathFollowing.tsx","components/AutoDownhill.tsx","components/TestDataReadyPopUp.tsx","components/ResetMicroControllerModal.tsx","path-recorder.ts","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["DRAWER_WIDTH","OVERSEER_STATE_STRING","MC_STATE_STRING","NMT_STATE_STRING","GNSS_FIX_TYPE","MC_ERROR_WORD","Networking","_createClass","id","isConnectedOnce","_this","_classCallCheck","guiState","robotState","socket","senders","dataArrivalTime","intervalId1","intervalId2","receivedSharedPath","pathToFollow","lastConnectedId","isNewTestDataReady","testLogMessages","errorMessages","this","isConnected","type","robotVelocityCommand","v","w","robotTurningRadius","overseerState","websocketClientCount","doesBrakeWhenStopped","robotTemperature","batteryTemperature","batteryVoltage","portentaHeartbeat","tempErrorWord","motorControllers","leftFront","state","heartbeatNmt","isHeartbeatTimeout","motorCurrentDraw","wheelRpmActual","errorWord","windingTemperature","leftBack","rightFront","rightBack","gps","status","latitude","longitude","northVelocity","eastVelocity","zAngularVelocity","heading","pathFollower","pathName","scriptName","targetVehicle","velocity","gps_ready","gps_correction_type","mechanicalBrake","hasBrake","brakeStatus","fullyseated_L","fullyseated_R","timestamp","latitudes","longitudes","WebSocket","error","console","onopen","event","Date","now","setInterval","close","heartbeat","onmessage","data","JSON","parse","toLocaleTimeString","push","commandMessage","_step","newline_separated","errorMessage","split","_iterator","_createForOfIteratorHelper","s","n","done","error_message","value","err","e","f","onclose","clearInterval","joystick","travel","angle","message","send","stringify","spin","angular_velocity","x","theta","moveForward","stop","enableManaul","releaseMechanicalBrake","idle","readyState","OPEN","toggleBrakeWhenStopped","setMagneticCalibration","method","sharePath","startPathFollowing","uploadPath","filename","fileContent","uploadScript","returnToStart","resetMicroController","hasErrors","EN_factors","lat_ref","R","pi","Math","PI","sin","cos","sqrt","pow","LL2NE","long_ref","E_factor","N_factor","useStyles","makeStyles","theme","toolbar","mixins","drawerPaper","width","logo","paddingTop","list","padding","errorIcon","color","Component","_ref","networking","mobileOpen","setMobileOpen","classes","useTheme","history","useHistory","itemsLIst","text","onClick","canShowErrorIcon","drawer","_jsxs","children","_jsx","className","Typography","variant","align","Divider","List","map","item","ListItem","button","ListItemText","primary","Tooltip","title","ErrorOutlineIcon","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","_style","_g","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBrakeIcon","svgRef","titleId","props","xmlns","xmlnsXlink","y","viewBox","style","enableBackground","xmlSpace","ref","d","ForwardRef","SvgIcon","_objectSpread","Logo","appBar","_defineProperty","breakpoints","up","concat","marginLeft","marginRight","menuButton","display","spacing","start","backgroundColor","background","connection","reconnect","brakeIcon","fontSize","topBarTitle","pathRecorder","handleRobotConnect","AppBar","position","Toolbar","IconButton","edge","MenuIcon","noWrap","isRecording","FiberManualRecordIcon","_Fragment","xsDown","Button","BrakeIcon","green","red","margin","textField","handleRobotDisconnect","_useState","useState","_useState2","_slicedToArray","setId","Card","CardContent","TextField","label","onChange","onKeyDown","Page","setTopBarTitle","useEffect","Grid","container","justify","alignItems","RobotConnectCard","root","marginTop","boxShadow","zIndex","body","pathSwitch","numberOfPoints","FormControlLabel","control","Switch","checked","isRecordingLine","toggleLineRecording","Joystick","_Component","_inherits","_super","_createSuper","_len","args","Array","_key","circleDiameter","sender_thottle_time","previousTime","handleJoystickStart","evt","handleJoystickEnd","setTimeout","handleJoystickMove","distance","radian","marginBottom","toFixed","PathRecorderPopUpCard","ReactNipple","options","mode","top","left","size","nippleSize","outline","height","overflow","onStart","onEnd","onMove","controlBox","moveButton","rotateRightButton","rotateIcon","isSpinning","isMovingForward","WebkitUserSelect","onPointerUp","Box","disabled","onPointerDown","onPointerOut","RotateLeftIcon","RotateRightIcon","ArrowUpwardIcon","expand","paddingBottom","transform","transition","transitions","create","duration","shortest","expandOpen","cardContent","verticalAlign","toString","motorController","location","copyButton","GeneralCard","GpsCard","MotorControllerCard","MechanicalBrakeCard","SubjectVehicleCard","mb","flexDirection","border","overflowY","overflowX","msg","notes","snackOpen","setSnackOpen","paddingLeft","requestRecording","stopRecording","pathString","blob","Blob","saveAs","exportPath","Snackbar","autoHideDuration","MuiAlert","elevation","severity","chartContainer","chartStyle","bottom","right","pathViewer","PathViewer","easts","norths","chartRef","_EN_factors","_EN_factors2","_LL2NE","_LL2NE2","pos_north","pos_east","current","createChartData","str","isNaN","Number","parseFloat","importFileRef","file","files","reader","FileReader","addEventListener","splitText","result","lineNumber","line","latLong","isNumeric","_EN_factors3","_EN_factors4","_LL2NE3","_LL2NE4","readAsText","chartData","ax","ay","aValue","x1","y1","x2","y2","desiredSpacing","useRef","useLayoutEffect","chart","am4core","am4charts","paddingRight","xAxis","xAxes","renderer","minGridDistance","baseGrid","strokeOpacity","strokeWidth","yAxis","yAxes","series1","series","dataFields","valueX","valueY","bullet1","bullets","circle","radius","numberFormatter","numberFormat","tooltipText","scrollbarX","scrollbarY","dispose","importFromRecorder","component","importFromFile","hidden","sharedPath","TabPanel","index","other","role","p","palette","tab","_React$useState","React","_React$useState2","setValue","Tabs","scrollButtons","indicatorColor","textColor","newValue","Tab","PathRecorderTab","PathViewingTab","SharedPathTab","snackbar","opacity","uploadPathRef","uploadScriptRef","wrongExtensionSnackbarOpen","setWrongExtensionSnackbarOpen","name","anchorOrigin","vertical","horizontal","pathDisplay","PathDisplay","robot_east","robot_north","pathSeriesRef","xAxisRef","yAxisRef","forceRun","undefined","eastMin","min","_toConsumableArray","eastMax","max","northMin","northMax","axisLength","createPathSeriesData","headingRadian","robotSeriesRef","addData","bx","by","pathSeriesData","messageBox","maxHeight","plotPathSeries","plotRobotSeries","strictMinMax","pathSeries","robotSeries","stroke","bullet2","propertyFields","rotation","arrow","createChild","horizontalCenter","verticalCenter","fill","link","document","createElement","href","click","downloadTestData","PrepareTab","TestTab","TempInfoButton","TempInfoCard","maxMotorTemp","setMaxMotorTemp","_useState3","_useState4","snackbarOpen","setSnackbarOpen","_useState5","_useState6","modalOpen","setModalOpen","_useState7","_useState8","maxRobotTemp","setMaxRobotTemp","mcs","robot","max_t","max_robot_t","Modal","justifyContent","InfoIcon","getModalStyle","modalStyle","setOpen","PathRecorder","hasBeenRecordingLine","pointDistance","priorLatitude","priorLongitude","latRef","longRef","recorderId","haversineDistance","haversine","EN","northStart","eastStart","northEnd","eastEnd","lineDistance","divisions","floor","_NE2LL","_NE2LL2","newLatitude","newLongitude","lat1","lat2","long1","long2","latRadian1","latRadian2","longRadian1","deltaLat","deltaLong","_content","content","App","setForceRerender","id1","recordWhenRequested","Router","CssBaseline","ResetMicroControllerModal","AutoDownhill","TestDataReadyPopUp","TopBar","SideDrawer","Route","path","exact","Redirect","to","InitialSetup","ManualControl","RobotStatus","Path","PathFollowing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5551ed7c.chunk.js","sourcesContent":["export const DRAWER_WIDTH = 185\nexport const OVERSEER_STATE_STRING: { [char: string]: string } = {\n  0: \"Initial\",\n  1: \"Manual\",\n  2: \"Auto\",\n  3: \"E-Stopped\",\n  // 4: \"Error\",\n  5: \"Stopped\",\n  6: \"Decending\",\n  7: \"Idle\",\n}\n\nexport const MC_STATE_STRING: { [char: string]: string } = {\n  0: \"not ready to switch on\",\n  64: \"switch on disabled\",\n  33: \"ready to switch on\",\n  35: \"switched on\",\n  39: \"operation enabled\",\n  7: \"quick stop active\",\n  15: \"fault reaction active\",\n  8: \"fault\",\n}\n\nexport const NMT_STATE_STRING: { [key: string]: string } = {\n  0: \"boot up\",\n  4: \"stopped\",\n  5: \"operational\",\n  127: \"pre-operational\",\n}\n\nexport const GNSS_FIX_TYPE: { [key: string]: string } = {\n  0: \"No Solution\",\n  1: \"Unknown\",\n  2: \"Single\",\n  3: \"PSRDIFF\",\n  4: \"SBAS\",\n  5: \"Omnister\",\n  6: \"RTK Float\",\n  7: \"RTK Integer\",\n}\n\nexport const MC_ERROR_WORD: { [key: string]: string } = {\n  0: \"None\",\n  1: \"SpeedDeviationError\",\n  2: \"FollowingError\",\n  4: \"OverVoltageError\",\n  8: \"UnderVoltageError\",\n  16: \"TempWarning\",\n  32: \"TempError\",\n  64: \"Encoder error\",\n  128: \"Int HW error\",\n  512: \"Current Measurement Error\",\n  2048: \"Com error\",\n  4096: \"Calc error\",\n  8192: \"Dynamic Limit\",\n  16384: \"Safety monitor error\",\n}\n","import { GuiState, RobotState, Senders } from \"./shared/interfaces\"\n\nexport default class Networking {\n  guiState: GuiState\n  robotState: RobotState\n  socket: WebSocket\n  senders: Senders\n  dataArrivalTime: number\n  intervalId1!: NodeJS.Timeout\n  intervalId2!: NodeJS.Timeout\n  receivedSharedPath: { timestamp: string; latitudes: Array<number>; longitudes: Array<number> }\n  pathToFollow: { latitudes: Array<number>; longitudes: Array<number> }\n  lastConnectedId: string\n  isConnectedOnce: boolean\n  isNewTestDataReady: boolean\n  testLogMessages: Array<string>\n  errorMessages: Array<string>\n\n  constructor(id: string, isConnectedOnce: boolean) {\n    if (isConnectedOnce) {\n      this.lastConnectedId = id\n      this.isConnectedOnce = true\n    } else {\n      this.lastConnectedId = \"\"\n      this.isConnectedOnce = false\n    }\n\n    this.guiState = {\n      isConnected: false,\n      id: id,\n    }\n\n    // robotState:\n    //   -should have the same keys as the received JSON message from robot\n    //   -JSON message is received continuosly at certain rate\n    this.robotState = {\n      type: \"robotState\",\n      robotVelocityCommand: {\n        v: 0,\n        w: 0,\n      },\n      robotTurningRadius: 0,\n      overseerState: 0,\n      websocketClientCount: 0,\n      doesBrakeWhenStopped: false,\n      robotTemperature: 0,\n      batteryTemperature: 0,\n      batteryVoltage: 0,\n      portentaHeartbeat: true,\n      tempErrorWord: 0,\n      motorControllers: {\n        leftFront: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        leftBack: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightFront: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightBack: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n      },\n      gps: {\n        status: -1,\n        latitude: 0,\n        longitude: 0,\n        northVelocity: 0,\n        eastVelocity: 0,\n        zAngularVelocity: 0,\n        heading: 0,\n      },\n      pathFollower: {\n        pathName: \"\",\n        scriptName: \"\",\n      },\n      targetVehicle: {\n        latitude: 0,\n        longitude: 0,\n        heading: 0,\n        velocity: 0,\n        gps_ready: false,\n        gps_correction_type: 0,\n      },\n      mechanicalBrake: {\n        hasBrake: false,\n        brakeStatus: 0,\n        fullyseated_L: 0,\n        fullyseated_R: 0,\n      },\n    }\n\n    // Here are the attributes that don't get updated continuously\n    this.receivedSharedPath = { timestamp: \"\", latitudes: [], longitudes: [] }\n    this.pathToFollow = { latitudes: [], longitudes: [] }\n    this.isNewTestDataReady = false\n    this.testLogMessages = []\n    this.errorMessages = []\n\n    // For disconnecting when no more incoming data\n    this.dataArrivalTime = 0\n\n    try {\n      if (id === \"localhost\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://localhost:9000\")\n      } else if (id === \"999\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://192.168.1.129:9000\")\n      } else {\n        this.socket = new WebSocket(\"ws://195.0.0.\" + id + \":9000\")\n      }\n    } catch (error) {\n      console.error(error)\n      this.socket = new WebSocket(\"ws://0.0.0.0\")\n    }\n\n    this.socket.onopen = (event) => {\n      this.guiState.isConnected = true\n      this.dataArrivalTime = Date.now()\n\n      this.lastConnectedId = this.guiState.id\n      this.isConnectedOnce = true\n\n      // disconnect if no messages are received for a period of time\n      this.intervalId1 = setInterval(() => {\n        if (Date.now() - this.dataArrivalTime > 4000) {\n          this.guiState.isConnected = false // needed when wifi gets disconnected\n          this.socket.close()\n        }\n      }, 250)\n\n      // send out heartbeat\n      this.intervalId2 = setInterval(() => {\n        this.senders.heartbeat()\n      }, 200)\n    }\n\n    this.socket.onmessage = (event) => {\n      this.dataArrivalTime = Date.now()\n\n      const data = JSON.parse(event.data)\n\n      if (data.type === \"robotState\") {\n        this.robotState = data\n      } else if (data.type === \"sharedPath\") {\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n\n        this.receivedSharedPath = {\n          timestamp: timestamp,\n          latitudes: data.latitudes,\n          longitudes: data.longitudes,\n        }\n      } else if (data.type === \"/path_follower/path_to_follow\") {\n        this.pathToFollow.latitudes = data.latitudes\n        this.pathToFollow.longitudes = data.longitudes\n      } else if (data.type === \"createdCSV\") {\n        this.isNewTestDataReady = true\n      } else if (data.type === \"commandMessage\") {\n        this.testLogMessages.push(data.commandMessage)\n      } else if (data.type === \"errorMessage\") {\n        // Attach a date to the error message\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n        this.errorMessages.push(timestamp)\n\n        // Attach the error messages to both test log and error log\n        const newline_separated = data.errorMessage.split(/\\r?\\n/)\n        for (const error_message of newline_separated) {\n          // \"2\" is Auto\n          if (this.robotState.overseerState === 2) {\n            this.testLogMessages.push(error_message)\n          }\n          this.errorMessages.push(error_message)\n        }\n      }\n    }\n\n    // the onclose callback will not run immediately when wifi gets disconnected\n    this.socket.onclose = (event) => {\n      this.guiState.isConnected = false\n      clearInterval(this.intervalId1)\n      clearInterval(this.intervalId2)\n    }\n\n    this.senders = {\n      joystick: (travel, angle) => {\n        const message = {\n          type: \"/joystick\",\n          travel: travel,\n          angle: angle,\n        }\n\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      spin: (angular_velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: 0,\n          theta: angular_velocity,\n        }\n\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      moveForward: (velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: velocity,\n          theta: 0,\n        }\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      stop: () => {\n        const message = {\n          type: \"/gui/stop_clicked\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      enableManaul: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/enable_manual_clicked\" }))\n        }\n      },\n\n      releaseMechanicalBrake: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/release_mechanical_brake_clicked\" }))\n        }\n      },\n\n      idle: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/idle_clicked\" }))\n        }\n      },\n\n      heartbeat: () => {\n        if (this.socket.readyState === WebSocket.OPEN) {\n          this.socket.send(JSON.stringify({ type: \"/gui/heartbeat\" }))\n        }\n      },\n\n      toggleBrakeWhenStopped: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/brake_when_stopped_toggled\" }))\n        }\n      },\n\n      setMagneticCalibration: (method) => {\n        const message = {\n          type: \"/an_device/magnetic_calibration/calibrate\",\n          method: method,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      sharePath: (latitudes, longitudes) => {\n        const message = {\n          type: \"sharedPath\",\n          latitudes: latitudes,\n          longitudes: longitudes,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      startPathFollowing: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/start_path_following_clicked\" }))\n        }\n      },\n\n      uploadPath: (filename, fileContent) => {\n        // return if file extension is not txt\n        if (filename.split(\".\")[1] !== \"txt\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_path_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      uploadScript: (filename, fileContent) => {\n        // return if file extension is not py\n        if (filename.split(\".\")[1] !== \"py\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_script_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      returnToStart: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/return_to_start_clicked\" }))\n        }\n      },\n\n      resetMicroController: () => {\n        const message = {\n          type: \"/gui/reset_micro_controller\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      }\n    }\n  }\n}\n","// abbreviations\n// lat: latitude\n// long: longitude\n// ref: reference\n// pos: position\n\nimport { RobotState } from \"./interfaces\"\n\nexport function hasErrors(robotState: RobotState) {\n  return (\n    (robotState.motorControllers.leftFront.errorWord !== 0 &&\n      robotState.motorControllers.leftFront.errorWord !== 64) ||\n    robotState.motorControllers.leftFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.leftBack.errorWord !== 0 &&\n      robotState.motorControllers.leftBack.errorWord !== 64) ||\n    robotState.motorControllers.leftBack.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightFront.errorWord !== 0 &&\n      robotState.motorControllers.rightFront.errorWord !== 64) ||\n    robotState.motorControllers.rightFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightBack.errorWord !== 0 &&\n      robotState.motorControllers.rightBack.errorWord !== 64) ||\n    robotState.motorControllers.rightBack.isHeartbeatTimeout ||\n    robotState.tempErrorWord !== 0\n  )\n}\n\nexport function EN_factors(lat_ref: number) {\n  const e = 0.0818191908426\n  const R = 6378137\n  const pi = Math.PI\n\n  const sin = Math.sin\n  const cos = Math.cos\n  const sqrt = Math.sqrt\n\n  const E_factor =\n    (((cos((lat_ref * pi) / 180) * R) / sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2)) * pi) / 180\n\n  const N_factor =\n    ((((1 - e ** 2) * R) /\n      ((1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2) * sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2))) *\n      pi) /\n    180\n  return [E_factor, N_factor]\n}\n\n// Latitude Longitude to North East\nexport function LL2NE(\n  latitude: number,\n  longitude: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const pos_east = (longitude - long_ref) * E_factor\n  const pos_north = (latitude - lat_ref) * N_factor\n  return [pos_north, pos_east]\n}\n\nexport function NE2LL(\n  pos_north: number,\n  pos_east: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const longitude = pos_east / E_factor + long_ref\n  const latitude = pos_north / N_factor + lat_ref\n  return [latitude, longitude]\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH } from \"../shared/constants\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Divider from \"@material-ui/core/Divider\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for pushing the SideDrawer below the TopBar\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  logo: {\n    paddingTop: 10,\n  },\n  list: {\n    padding: 0,\n  },\n  errorIcon: {\n    color: \"red\",\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  mobileOpen: boolean\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function Component({ networking, mobileOpen, setMobileOpen }: Props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const itemsLIst = [\n    {\n      text: \"Initial Setup\",\n      onClick: () => {\n        history.push(\"/initialsetup\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Manual Control\",\n      onClick: () => {\n        history.push(\"/manualcontrol\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Robot Status\",\n      onClick: () => {\n        history.push(\"/robotstatus\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: true,\n    },\n    {\n      text: \"Path\",\n      onClick: () => {\n        history.push(\"/path\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Path Following\",\n      onClick: () => {\n        history.push(\"/pathfollowing\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n  ]\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography variant=\"h4\" align=\"center\" color=\"primary\" className={classes.logo}>\n          STRIDE\n        </Typography>\n      </div>\n\n      <Divider />\n      <List className={classes.list}>\n        {itemsLIst.map((item) => {\n          const { text, onClick, canShowErrorIcon } = item\n          return (\n            <ListItem button key={text} onClick={onClick}>\n              <ListItemText primary={text} />\n              {canShowErrorIcon && hasErrors(networking.robotState) && networking.guiState.isConnected ? (\n                <Tooltip title=\"ERROR\">\n                  <ErrorOutlineIcon className={classes.errorIcon} />\n                </Tooltip>\n              ) : null}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav aria-label=\"mailbox folders\">\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={() => setMobileOpen(false)}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  )\n}\n","var _style, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBrakeIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.29\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.29\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".st0{fill-rule:evenodd;clip-rule:evenodd;}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M18.86,59.43l-4.25-1.19c-0.26,2.11-0.4,4.26-0.4,6.44c0,6.93,1.37,13.53,3.86,19.53v0.01 c2.59,6.24,6.38,11.86,11.09,16.56l0.01,0.01c4.7,4.71,10.32,8.5,16.56,11.09h0.01c6,2.49,12.6,3.86,19.53,3.86 c6.93,0,13.53-1.37,19.53-3.86c6.23-2.58,11.85-6.38,16.57-11.1h0.01c4.71-4.7,8.5-10.32,11.09-16.56V84.2 c2.49-6,3.86-12.6,3.86-19.53c0-6.93-1.37-13.53-3.86-19.53c-2.58-6.23-6.38-11.85-11.1-16.57v-0.01 c-4.7-4.71-10.32-8.5-16.56-11.09h-0.01c-4.19-1.74-8.67-2.93-13.36-3.49v5.62C46.4,19.6,25.3,36.45,18.86,59.43L18.86,59.43z M60.83,6.79c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1C56.74,8.63,58.57,6.79,60.83,6.79 L60.83,6.79z M13.43,42.53c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1 C9.33,44.36,11.17,42.53,13.43,42.53L13.43,42.53z M8.24,56.44L0,54.13C8.99,22.12,38.19,0,71.44,0v7.39 c5.56,0.59,10.89,1.98,15.87,4.04l0,0c7.05,2.92,13.39,7.2,18.69,12.51l0.01-0.01c5.3,5.3,9.58,11.65,12.51,18.72 c2.82,6.8,4.37,14.24,4.37,22.02c0,7.79-1.56,15.24-4.37,22.04l0,0c-2.92,7.05-7.2,13.39-12.51,18.69l0.01,0.01 c-5.3,5.3-11.65,9.58-18.72,12.51c-6.8,2.82-14.24,4.37-22.02,4.37c-7.79,0-15.24-1.56-22.04-4.37l0,0 c-7.05-2.92-13.39-7.2-18.69-12.5l-0.01-0.01c-5.3-5.3-9.58-11.64-12.5-18.69l0,0c-2.82-6.8-4.37-14.24-4.37-22.04 C7.65,61.88,7.85,59.13,8.24,56.44L8.24,56.44z M65.27,29.18c4.81,0,9.39,0.96,13.58,2.69c4.34,1.8,8.25,4.44,11.52,7.71 c3.27,3.27,5.91,7.18,7.71,11.53c1.73,4.18,2.69,8.77,2.69,13.57c0,4.81-0.96,9.39-2.69,13.58c-1.8,4.34-4.44,8.25-7.71,11.52 c-3.27,3.27-7.18,5.91-11.53,7.71c-4.18,1.73-8.77,2.69-13.57,2.69c-4.81,0-9.39-0.96-13.58-2.69c-4.34-1.8-8.25-4.44-11.52-7.71 c-3.27-3.27-5.91-7.18-7.71-11.53c-1.73-4.18-2.69-8.77-2.69-13.57c0-4.81,0.96-9.39,2.69-13.58c1.8-4.34,4.44-8.25,7.71-11.52 c3.27-3.27,7.18-5.91,11.53-7.71C55.88,30.14,60.46,29.18,65.27,29.18L65.27,29.18z M57.41,58.28c0.12-0.16,0.24-0.31,0.36-0.46 c0.18-0.22,0.38-0.43,0.59-0.64c0.49-0.48,1.02-0.91,1.6-1.29c0.49-0.32,1.01-0.59,1.55-0.82l0-18.27 c-3.02,0.4-5.88,1.28-8.52,2.56c-2.84,1.38-5.41,3.22-7.61,5.42c-1.21,1.21-2.31,2.52-3.28,3.93c-0.88,1.28-1.66,2.63-2.33,4.05 L57.41,58.28L57.41,58.28z M68.54,60.82c-0.42-0.42-0.93-0.77-1.5-1c-0.54-0.22-1.14-0.35-1.78-0.35c-0.63,0-1.23,0.12-1.78,0.35 c-0.56,0.23-1.07,0.57-1.5,1l-0.01,0.01c-0.43,0.43-0.77,0.93-1,1.5c-0.22,0.54-0.35,1.14-0.35,1.78c0,0.63,0.12,1.23,0.35,1.78 c0.23,0.57,0.57,1.07,1,1.5L62,67.38c0.42,0.43,0.93,0.77,1.5,1c0.54,0.22,1.14,0.35,1.78,0.35c0.63,0,1.23-0.12,1.78-0.35 c0.57-0.23,1.07-0.57,1.5-1l0.01-0.01c0.42-0.42,0.77-0.93,1-1.5c0.22-0.54,0.35-1.14,0.35-1.78c0-0.63-0.13-1.23-0.35-1.78 C69.31,61.76,68.96,61.25,68.54,60.82L68.54,60.82z M68.85,54.99c0.58,0.23,1.14,0.52,1.67,0.86c0.61,0.39,1.16,0.83,1.66,1.33 c0.16,0.16,0.33,0.34,0.49,0.53c0.1,0.12,0.2,0.24,0.29,0.36l17.99-4.82c-0.67-1.51-1.48-2.96-2.4-4.32 c-1.01-1.49-2.16-2.88-3.43-4.15c-2.23-2.23-4.83-4.08-7.69-5.47c-2.66-1.28-5.56-2.16-8.6-2.55V54.99L68.85,54.99z M75,65.15 c-0.08,0.69-0.22,1.37-0.43,2.01c-0.22,0.66-0.51,1.3-0.86,1.89l10.42,16.51l0.36-0.33c0.22-0.2,0.44-0.42,0.68-0.66 c2.59-2.59,4.68-5.69,6.11-9.13c1.37-3.31,2.13-6.95,2.13-10.76c0-0.81-0.03-1.62-0.1-2.41c-0.06-0.66-0.14-1.32-0.24-1.96 L75,65.15L75,65.15z M67.87,73.54c-0.37,0.1-0.75,0.18-1.13,0.24c-0.48,0.07-0.97,0.11-1.47,0.11c-0.44,0-0.88-0.03-1.32-0.09 c-0.34-0.05-0.68-0.11-1.01-0.19L52.89,89.95c1.84,0.9,3.78,1.61,5.81,2.09c2.1,0.5,4.3,0.77,6.57,0.77c2.35,0,4.62-0.29,6.8-0.83 c2.11-0.52,4.12-1.28,6.02-2.25L67.87,73.54L67.87,73.54z M56.96,69.27c-0.36-0.58-0.67-1.2-0.9-1.85 c-0.23-0.64-0.4-1.31-0.49-2.01l-18.01-5.64c-0.13,0.74-0.23,1.48-0.3,2.22c-0.08,0.87-0.13,1.77-0.13,2.68 c0,3.81,0.76,7.45,2.13,10.76c1.42,3.44,3.51,6.54,6.11,9.13c0.28,0.28,0.57,0.55,0.84,0.81l0.54,0.49L56.96,69.27L56.96,69.27z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrakeIcon);\nexport default __webpack_public_path__ + \"static/media/brake-icon.97838cea.svg\";\nexport { ForwardRef as ReactComponent };","import SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\"\nimport { ReactComponent as Logo } from \"./src/brake-icon.svg\"\n\nexport default function Component(props: SvgIconProps) {\n  return (\n    <div>\n      <SvgIcon {...props}>\n        <Logo />\n      </SvgIcon>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH, OVERSEER_STATE_STRING } from \"../shared/constants\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { green, red } from \"@material-ui/core/colors\"\nimport PathRecorder from \"../path-recorder\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  stop: {\n    marginLeft: theme.spacing(1.5),\n  },\n  start: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    marginLeft: theme.spacing(1.5),\n    \"&:hover\": {\n      background: \"darkgreen\",\n    },\n  },\n  connection: {\n    color: \"lightgray\",\n  },\n  state: {\n    marginLeft: theme.spacing(1.5),\n    color: \"lightgray\",\n  },\n  errorIcon: {\n    marginLeft: theme.spacing(1.5),\n    color: \"red\",\n  },\n  reconnect: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1.5),\n    fontSize: 30,\n  },\n  idle: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n  topBarTitle: string\n  pathRecorder: PathRecorder\n  handleRobotConnect: (id: string) => void\n}\n\nexport default function Component({\n  networking,\n  setMobileOpen,\n  topBarTitle,\n  pathRecorder,\n  handleRobotConnect,\n}: Props) {\n  const classes = useStyles()\n\n  const guiState = networking.guiState\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleStopButton() {\n    senders.stop()\n  }\n\n  function handleIdle() {\n    senders.idle()\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => setMobileOpen(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          {topBarTitle}\n        </Typography>\n\n        {pathRecorder.isRecording ? (\n          <Tooltip title=\"Recording\">\n            <FiberManualRecordIcon style={{ color: \"red\", marginRight: \"6px\" }} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected ? (\n          <>\n            <Hidden xsDown>\n              <Typography variant=\"body2\" className={classes.connection}>\n                {`ID: ${guiState.id}`}\n              </Typography>\n            </Hidden>\n\n            <Typography variant=\"body2\" className={classes.state}>\n              {OVERSEER_STATE_STRING[robotState.overseerState]}\n            </Typography>\n          </>\n        ) : (\n          <Typography variant=\"body2\" className={classes.connection}>\n            not connected\n          </Typography>\n        )}\n\n        {!guiState.isConnected && networking.lastConnectedId !== \"\" && (\n          <Button\n            className={classes.reconnect}\n            variant=\"contained\"\n            onClick={() => handleRobotConnect(\"useRecentId\")}\n          >\n            reconnect\n          </Button>\n        )}\n\n        {guiState.isConnected && hasErrors(robotState) ? (\n          <Tooltip title=\"ERROR\">\n            <ErrorOutlineIcon fontSize=\"large\" className={classes.errorIcon} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 2 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: green[500] }} />\n        )}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 3 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: red[500] }} />\n        )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 1 ||\n            robotState.overseerState === 2 ||\n            robotState.overseerState === 7 ||\n            robotState.overseerState === 4) && ( // if in manual, auto, idle, or return_to_start\n            <Button className={classes.stop} variant=\"contained\" color=\"secondary\" onClick={handleStopButton}>\n              stop\n            </Button>\n          )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 5 || robotState.overseerState === 6) && ( // if in stopped or decending\n            <Button className={classes.idle} variant=\"contained\" onClick={handleIdle}>\n              idle\n            </Button>\n          )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  status: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: \"15.5rem\",\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n}\n\nexport default function Component({ networking, handleRobotConnect, handleRobotDisconnect }: Props) {\n  const classes = useStyles()\n\n  const [id, setId] = useState(\"\")\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Robot Connection\n        </Typography>\n\n        <Typography variant=\"caption\" display=\"block\" className={classes.status}>\n          {networking.guiState.isConnected ? `connected (ID: ${networking.guiState.id})` : \"not connected\"}\n        </Typography>\n\n        <TextField\n          label=\"Robot ID\"\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => {\n            setId(e.target.value)\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleRobotConnect(id)\n            }\n          }}\n        />\n        <br />\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleRobotConnect(id)}\n        >\n          Connect\n        </Button>\n\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleRobotDisconnect()}\n        >\n          Disconnect\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport RobotConnectCard from \"../components/RobotConnectCard\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({\n  networking,\n  handleRobotConnect,\n  handleRobotDisconnect,\n  setTopBarTitle,\n}: Props) {\n  useEffect(() => {\n    setTopBarTitle(\"Initial Setup\")\n  }, [setTopBarTitle])\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n      <Grid item>\n        <RobotConnectCard\n          networking={networking}\n          handleRobotConnect={handleRobotConnect}\n          handleRobotDisconnect={handleRobotDisconnect}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\n// ws://192.168.1.129:9090\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    marginLeft: theme.spacing(1.5),\n    marginTop: theme.spacing(1.5),\n    // boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    boxShadow: \"3px 3px 5px rgba(0,0,0,0.2)\",\n    zIndex: 1,\n  },\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  pathSwitch: {\n    marginLeft: 0,\n  },\n}))\n\ninterface Props {\n  pathRecorder: PathRecorder\n  networking: Networking\n}\n\nexport default function Component({ pathRecorder, networking }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Typography variant=\"h6\" className={classes.title}>\n        Recording Path\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        GPS Status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <FormControlLabel\n        className={classes.pathSwitch}\n        control={\n          <Switch\n            checked={pathRecorder.isRecordingLine}\n            onChange={() => pathRecorder.toggleLineRecording()}\n            color=\"primary\"\n          />\n        }\n        label=\"Record a line\"\n      />\n    </Card>\n  )\n}\n","import React, { Component } from \"react\"\n\nimport ReactNipple from \"react-nipple\"\nimport \"react-nipple/lib/styles.css\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport PathRecorderPopUpCard from \"./PathRecorderPopUpCard\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\n// Abbreviations:\n// ICR = instantaneous center of rotation\n// v,V = linear velocity\n// w,W = angular velocity\n// r,R = turning radius of robot geometric center\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default class Joystick extends Component<Props> {\n  circleDiameter = 400 // pixels\n  sender_thottle_time = 100 //ms\n  previousTime = Date.now()\n\n  render() {\n    return (\n      <div>\n        <h3 style={{ marginTop: 0, marginBottom: 5 }}>Press and drag below to move the robot</h3>\n\n        <Tooltip title=\"Linear Velocity\">\n          <span style={{ fontSize: 16 }}>\n            v: {this.props.networking.robotState.robotVelocityCommand.v.toFixed(2)} m/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Angular Velocity\">\n          <span style={{ fontSize: 16, marginLeft: 16}}>\n            w: {((this.props.networking.robotState.robotVelocityCommand.w / Math.PI) * 180).toFixed(0)} deg/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Heading\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            h: {((this.props.networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n          </span>\n        </Tooltip>\n\n        <br />\n        {this.props.pathRecorder.isRecording ? (\n          <PathRecorderPopUpCard pathRecorder={this.props.pathRecorder} networking={this.props.networking} />\n        ) : null}\n\n        <ReactNipple\n          className=\"nipple\"\n          options={{\n            mode: \"dynamic\",\n            color: \"blue\",\n            position: { top: \"50%\", left: \"50%\" },\n            size: this.circleDiameter,\n            nippleSize: 90,\n          }}\n          style={{\n            zIndex: 0,\n            outline: `1px dashed blue`,\n            width: \"100%\",\n            height: \"max( 100vh - 325px, 120px)\", // calc() not needed inside max()\n            // display: \"table\",\n            overflow: \"hidden\",\n          }}\n          onStart={this.handleJoystickStart}\n          onEnd={this.handleJoystickEnd}\n          onMove={this.handleJoystickMove}\n        />\n        {/* <DebugView data={this.state.data} /> */}\n      </div>\n    )\n  }\n\n  handleJoystickStart = (evt: any, data: any) => {}\n\n  handleJoystickEnd = (evt: any, data: any) => {\n    setTimeout(() => {\n      this.props.networking.senders.joystick(0, 0)\n    }, 100) // needed, otherwise the subscriber callback for /robot_velocity_command won't get triggered\n  }\n  handleJoystickMove = (evt: any, data: any) => {\n    if (Date.now() - this.previousTime < this.sender_thottle_time) {\n      return\n    }\n    this.previousTime = Date.now()\n\n    const travel = data.distance / (this.circleDiameter * 0.5)\n    const angle = data.angle.radian - Math.PI / 2 // the angle when pushing the joystick forwards is now 0\n\n    this.props.networking.senders.joystick(travel, angle)\n  }\n}\n","import React, { useEffect } from \"react\"\nimport Joystick from \"../components/Joystick\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\"\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\"\nimport Box from \"@material-ui/core/Box\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  controlBox: {\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n  moveButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateRightButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1),\n    marginTop: 5,\n    fontSize: 20,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\nlet isSpinning = false\nlet isMovingForward = false\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleManualSwitch(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.checked) {\n      senders.enableManaul()\n    } else {\n      senders.stop()\n    }\n  }\n\n  function handleBrakeWhenStoppedSwitch() {\n    senders.toggleBrakeWhenStopped()\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Manual Control\")\n  }, [setTopBarTitle])\n\n  return (\n    // WebkitUserSelect is used to prevent random text selection when using the joystick\n    <div style={{ WebkitUserSelect: \"none\" }}>\n      {robotState.mechanicalBrake.brakeStatus !== 0 && robotState.mechanicalBrake.brakeStatus !== 1 && robotState.overseerState !== 2 && (\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerUp={() => {\n            senders.releaseMechanicalBrake()\n          }}\n        >\n          Release Mechanical Brake <BrakeIcon className={classes.brakeIcon} />\n        </Button>\n      )}\n\n      <Box>\n        <FormControlLabel\n          control={\n            <Switch checked={robotState.overseerState === 1} onChange={handleManualSwitch} color=\"primary\" />\n          }\n          label=\"Enable Manual Control\"\n          disabled={\n            robotState.overseerState === 2 || robotState.overseerState === 3 || robotState.overseerState === 6\n          }\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={robotState.doesBrakeWhenStopped === true}\n              onChange={handleBrakeWhenStoppedSwitch}\n              color=\"primary\"\n            />\n          }\n          label=\"Hold Motors When Not Moving\"\n        />\n      </Box>\n\n      <Box className={classes.controlBox}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateLeftIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.rotateRightButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(-0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateRightIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.moveButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isMovingForward = true\n            senders.moveForward(0.75)\n          }}\n          onPointerUp={() => {\n            isMovingForward = false\n            senders.moveForward(0)\n          }}\n          onPointerOut={() => {\n            if (isMovingForward) {\n              senders.moveForward(0)\n            }\n          }}\n        >\n          move <ArrowUpwardIcon className={classes.rotateIcon} />\n        </Button>\n      </Box>\n\n      <Joystick networking={networking} pathRecorder={pathRecorder} />\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  errorIcon: {\n    // marginLeft: theme.spacing(1.5),\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          General\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Voltage: {robotState.batteryVoltage.toFixed(2)}V\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Temperature: {robotState.batteryTemperature}F{\" \"}\n          {robotState.batteryTemperature >= 140 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Robot Internal Temperature: {robotState.robotTemperature}F{\" \"}\n          {robotState.robotTemperature >= 140 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Clients Connected to Robot: {robotState.websocketClientCount}\n        </Typography>\n\n      </CardContent>\n    </Card>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          GPS\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitdue (deg): {robotState.gps.latitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.gps.longitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n        </Typography>\n        \n        <Typography variant=\"body1\" className={classes.body}>\n          Longitudinal Velocity (m/s): {\"\"}\n          {((robotState.gps.northVelocity * Math.cos(robotState.gps.heading * Math.PI/180)) + (robotState.gps.eastVelocity * Math.sin(robotState.gps.heading * Math.PI/180))).toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Lateral Velocity (m/s): {\"\"}\n          {((robotState.gps.northVelocity * -1 * Math.sin(robotState.gps.heading * Math.PI/180)) + (robotState.gps.eastVelocity * Math.cos(robotState.gps.heading * Math.PI/180))).toFixed(2)}\n        </Typography>\n        \n        <Typography variant=\"body1\" className={classes.body}>\n          Angular Velocity (deg/s): {((robotState.gps.zAngularVelocity / Math.PI) * 180).toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  \n  if (robotState.mechanicalBrake.hasBrake) {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Mechanical Brake\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Has Brake: {robotState.mechanicalBrake.hasBrake.toString()}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Brake Status: {robotState.mechanicalBrake.brakeStatus}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Left Brake Fully Seated: {robotState.mechanicalBrake.fullyseated_L}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Right Brake Fully Seated: {robotState.mechanicalBrake.fullyseated_R}\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n  else {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Mechanical Brake\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Has Brake: {robotState.mechanicalBrake.hasBrake.toString()}\n          </Typography>\n          \n        </CardContent>\n      </Card>\n    )\n  }\n\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { MotorController } from \"../shared/interfaces\"\nimport { MC_STATE_STRING, NMT_STATE_STRING, MC_ERROR_WORD } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  errorIcon: {\n    // marginLeft: theme.spacing(1.5),\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\ninterface Props {\n  motorController: MotorController\n  id: number\n  location: string\n}\n\nexport default function Component({ motorController, id, location }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Motor Controller {id}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.title}>\n          Motor Location: {location}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Error: {MC_ERROR_WORD[motorController.errorWord]}{\" \"}\n          {motorController.errorWord !== 0 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heartbeat Timeout: {motorController.isHeartbeatTimeout.toString()}{\" \"}\n          {motorController.isHeartbeatTimeout ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          State: {MC_STATE_STRING[motorController.state]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          NMT State: {NMT_STATE_STRING[motorController.heartbeatNmt]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Motor Current (A): {motorController.motorCurrentDraw.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Actual Wheel RPM: {motorController.wheelRpmActual.toFixed(0)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Winding Temperature (F): {motorController.windingTemperature.toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","// import React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  copyButton: {\n    paddingTop: 0,\n    marginLeft: theme.spacing(0.5),\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          Subject Vehicle\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitude (deg): {robotState.targetVehicle.latitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.targetVehicle.longitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {robotState.targetVehicle.heading.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Velocity (m/s): {robotState.targetVehicle.velocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Ready: {robotState.targetVehicle.gps_ready.toString()}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Correction Type: {robotState.targetVehicle.gps_correction_type}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport GeneralCard from \"../components/GeneralCard\"\nimport GpsCard from \"../components/GpsCard\"\nimport MechanicalBrakeCard from \"../components/MechanicalBrakeCard\"\nimport MotorControllerCard from \"../components/MotorControllerCard\"\nimport SubjectVehicleCard from \"../components/SubjectVehicleCard\"\nimport Networking from \"../networking\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({ networking, setTopBarTitle }: Props) {\n  const robotState = networking.robotState\n\n  useEffect(() => {\n    setTopBarTitle(\"Robot Status\")\n  }, [setTopBarTitle])\n  return (\n    <div>\n      <Grid container spacing={2} alignItems=\"flex-start\">\n        <Grid item>\n          <GeneralCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <GpsCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftFront}\n            id={1}\n            location=\"left_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftBack}\n            id={2}\n            location=\"left_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightFront}\n            id={3}\n            location=\"right_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightBack}\n            id={4}\n            location=\"right_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MechanicalBrakeCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <SubjectVehicleCard robotState={robotState} />\n        </Grid>\n      </Grid>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Error Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.errorMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../../path-recorder\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default function Component({ networking, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [snackOpen, setSnackOpen] = useState(false)\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < pathRecorder.numberOfPoints; i++) {\n      pathString = pathString.concat(\n        pathRecorder.latitudes[i].toFixed(17).toString(),\n        \" \",\n        pathRecorder.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\n          <li>The GPS cordinates of the robot can be recorded here.</li>\n          <li>Move the robot to create a path when recording starts.</li>\n          <li>Tips for recording:</li>\n          <ul>\n            <li>Since speed is not recorded, move robot slowly to accurately capture path.</li>\n            <li>\n              You may record path that has sharp corners. Robot can be programmed later to stop at the corner\n              and rotate to the specified heading before moving again.\n            </li>\n          </ul>\n        </ul>\n      </Typography>\n      <Divider />\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Status: {pathRecorder.isRecording ? \"Recording...\" : \"Not Recording\"}\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.requestRecording()\n        }}\n      >\n        record\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.stopRecording()\n        }}\n      >\n        stop\n      </Button>\n\n      <br />\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n\n      <br />\n\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={8000}\n        onClose={() => {\n          setSnackOpen(false)\n        }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Go to the SHARED tab above in another connected device.\n        </MuiAlert>\n      </Snackbar>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          setSnackOpen(true)\n          networking.senders.sharePath(pathRecorder.latitudes, pathRecorder.longitudes)\n        }}\n      >\n        share with other devices\n      </Button>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { EN_factors, LL2NE} from \"../../shared/utilities\"\nimport PathRecorder from \"../../path-recorder\"\n\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 90vh))\",\n  paddingTop: \"calc((min(100%, 90vh)) - 15px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathViewer {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n  }\n\n  importFromRecorder(latitudes: number[], longitudes: number[], chartRef: React.MutableRefObject<any>) {\n    this.latitudes = latitudes\n    this.longitudes = longitudes\n\n    this.easts = []\n    this.norths = []\n\n    const [E_factor, N_factor] = EN_factors(latitudes[0])\n    this.E_factor = E_factor\n    this.N_factor = N_factor\n\n    this.lat_ref = latitudes[0]\n    this.long_ref = longitudes[0]\n\n    for (let i = 0; i < latitudes.length; i++) {\n      const [pos_north, pos_east] = LL2NE(\n        latitudes[i],\n        longitudes[i],\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      this.easts.push(pos_east)\n      this.norths.push(pos_north)\n    }\n\n    chartRef.current.data = this.createChartData()\n  }\n\n  isNumeric(str: string) {\n    return (\n      !isNaN(Number(str)) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n      !isNaN(parseFloat(str))\n    ) // ...and ensure strings of whitespace fail\n  }\n\n  importFromFile(importFileRef: React.MutableRefObject<any>, chartRef: React.MutableRefObject<any>) {\n    this.easts = []\n    this.norths = []\n    this.latitudes = []\n    this.longitudes = []\n\n    const file = importFileRef.current.files[0]\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const text = event.target.result\n      const splitText = text.split(\"\\n\")\n\n      let lineNumber = 1\n      for (const line of splitText) {\n        // omit the first line in file\n        if (lineNumber === 1) {\n          lineNumber++\n          continue\n        }\n\n        const latLong = line.split(/ |\\t/)\n        if (latLong.length === 2) {\n          if (this.isNumeric(latLong[0]) && this.isNumeric(latLong[1])) {\n            this.latitudes.push(Number(latLong[0]))\n            this.longitudes.push(Number(latLong[1]))\n          }\n        }\n      }\n\n      const [E_factor, N_factor] = EN_factors(this.latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = this.latitudes[0]\n      this.long_ref = this.longitudes[0]\n\n      for (let i = 0; i < this.latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          this.latitudes[i],\n          this.longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      importFileRef.current.value = \"\" // this is needed for importing the same file that has been saved over\n\n      chartRef.current.data = this.createChartData()\n    })\n    reader.readAsText(file)\n  }\n\n  createChartData() {\n    const chartData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      chartData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return chartData\n  }\n\n  twoPointDistance(x1: number, y1: number, x2: number, y2: number) {\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n  }\n\n  // spacing is in meters\n  correctPointSpacing(desiredSpacing: number) {\n    // const s = desiredSpacing\n    // const newEasts = [this.easts[0]]\n    // const newNorths = [this.norths[0]]\n    // let Cx = newEasts[0]\n    // let Cy = newNorths[0]\n    // let Tx = 0\n    // let Ty = 0\n    // let i = 1\n    // let g = this.twoPointDistance(Cx, Cy, this.easts[1], this.norths[1])\n    // const totalPoints = pathViewer.easts.length\n    // while (i <= totalPoints) {\n    //   if (g > s) {\n    //     while (g > s) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //       newEasts.push(Tx)\n    //       newNorths.push(Ty)\n    //       Cx = Tx\n    //       Cy = Ty\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   } else if (g < s) {\n    //     while (g < s) {\n    //       i += 1\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   }\n    //   if (g === s) {\n    //     // ????\n    //   }\n    //   Cx = newEasts[newEasts.length - 1]\n    //   Cy = newNorths[newNorths.length - 1]\n    //   g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //   if (g > s) {\n    //     if (k = i -1) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //     } else {\n    //       k = i - 1\n    //     }\n    //   }\n    //   if (distance >= desiredSpacing) {\n    //     const newEast = newEasts[newEasts.length - 1] + (tail / distance) * (this.easts[i + 1] - this.easts[i])\n    //     const newNorth = this.norths[i] + (tail / distance) * (this.norths[i + 1] - this.norths[i])\n    // }\n  }\n}\n\ninterface Props {\n  pathRecorder: PathRecorder\n}\n\nconst pathViewer = new PathViewer()\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nexport default function Component({ pathRecorder }: Props) {\n  const classes = useStyles()\n  const importFileRef: React.MutableRefObject<any> = useRef()\n\n  // XY Chart\n  const chartRef: React.MutableRefObject<any> = useRef()\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    chart.data = pathViewer.createChartData()\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.3\n    xAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.3\n    yAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create series\n    let series1 = chart.series.push(new am4charts.LineSeries())\n    series1.dataFields.valueX = \"ax\"\n    series1.dataFields.valueY = \"ay\"\n    series1.dataFields.value = \"aValue\"\n    series1.strokeWidth = 2\n\n    let bullet1 = series1.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    //scrollbars\n    chart.scrollbarX = new am4core.Scrollbar()\n    chart.scrollbarY = new am4core.Scrollbar()\n\n    chartRef.current = chart\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathViewer.importFromRecorder(pathRecorder.latitudes, pathRecorder.longitudes, chartRef)\n        }}\n      >\n        import from recorder\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        import from file\n        <input\n          type=\"file\"\n          ref={importFileRef}\n          onChange={() => pathViewer.importFromFile(importFileRef, chartRef)}\n          hidden\n        />\n      </Button>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const sharedPath = networking.receivedSharedPath\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < sharedPath.latitudes.length; i++) {\n      pathString = pathString.concat(\n        sharedPath.latitudes[i].toFixed(17).toString(),\n        \" \",\n        sharedPath.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Shared path from another device will appear here.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Time Received: {sharedPath.timestamp} <br />\n        Number of Points: {sharedPath.latitudes.length}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorderTab from \"../components/path/PathRecoderTab\"\nimport PathViewingTab from \"../components/path/PathViewingTab\"\nimport SharedPathTab from \"../components/path/SharedPathTab\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path\")\n  }, [setTopBarTitle])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"Record\" className={classes.tab} />\n          <Tab label=\"View\" className={classes.tab} />\n          <Tab label=\"Shared\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PathRecorderTab networking={networking} pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PathViewingTab pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <SharedPathTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useRef } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  snackbar: {\n    opacity: 0.9,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const uploadPathRef: React.MutableRefObject<any> = useRef()\n  const uploadScriptRef: React.MutableRefObject<any> = useRef()\n\n  const [wrongExtensionSnackbarOpen, setWrongExtensionSnackbarOpen] = useState(false)\n\n  function uploadPath() {\n    const file = uploadPathRef.current.files[0]\n    uploadPathRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"txt\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadPath(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  function uploadScript() {\n    const file = uploadScriptRef.current.files[0]\n    uploadScriptRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"py\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadScript(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Note that the robot only stores the most recently uploaded path and script files.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Path (.txt file): {networking.robotState.pathFollower.pathName} <br />\n        Script (.py file): {networking.robotState.pathFollower.scriptName}\n      </Typography>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload path\n        <input\n          type=\"file\"\n          ref={uploadPathRef}\n          onChange={() => {\n            uploadPath()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload script\n        <input\n          type=\"file\"\n          ref={uploadScriptRef}\n          onChange={() => {\n            uploadScript()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Snackbar\n        className={classes.snackbar}\n        open={wrongExtensionSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setWrongExtensionSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Incorrect file extension\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { EN_factors, LL2NE } from \"../../shared/utilities\"\nimport { GNSS_FIX_TYPE } from \"../../shared/constants\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 70vh))\",\n  paddingTop: \"calc((min(100%, 70vh)) - 0px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathDisplay {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n  robot_east: number\n  robot_north: number\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n    this.robot_east = 0\n    this.robot_north = 0\n  }\n\n  plotPathSeries(\n    latitudes: number[],\n    longitudes: number[],\n    pathSeriesRef: React.MutableRefObject<any>,\n    xAxisRef: React.MutableRefObject<any>,\n    yAxisRef: React.MutableRefObject<any>,\n    forceRun: boolean\n  ) {\n    if (forceRun === true || (this.latitudes !== latitudes && pathSeriesRef.current !== undefined)) {\n      this.latitudes = latitudes\n      this.longitudes = longitudes\n\n      this.easts = []\n      this.norths = []\n\n      const [E_factor, N_factor] = EN_factors(latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = latitudes[0]\n      this.long_ref = longitudes[0]\n\n      for (let i = 0; i < latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          latitudes[i],\n          longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      const eastMin = Math.min(...this.easts)\n      const eastMax = Math.max(...this.easts)\n      const northMin = Math.min(...this.norths)\n      const northMax = Math.max(...this.norths)\n\n      const axisLength = Math.max(eastMax - eastMin, northMax - northMin)\n\n      xAxisRef.current.min = eastMin - 3\n      xAxisRef.current.max = eastMin + axisLength + 3\n      yAxisRef.current.min = northMin - 3\n      yAxisRef.current.max = northMin + axisLength + 3\n\n      pathSeriesRef.current.data = this.createPathSeriesData()\n    }\n  }\n\n  plotRobotSeries(\n    latitude: number,\n    longitude: number,\n    headingRadian: number,\n    robotSeriesRef: React.MutableRefObject<any>\n  ) {\n    if (robotSeriesRef.current !== undefined) {\n      const [pos_north, pos_east] = LL2NE(\n        latitude,\n        longitude,\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      robotSeriesRef.current.addData(\n        { bx: pos_east, by: pos_north, angle: (headingRadian / Math.PI) * 180 },\n        1\n      )\n\n      // For displaying the numerical values of robot location\n      this.robot_east = pos_east\n      this.robot_north = pos_north\n    }\n  }\n\n  createPathSeriesData() {\n    const pathSeriesData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      pathSeriesData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return pathSeriesData\n  }\n}\n\nconst pathDisplay = new PathDisplay()\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(1),\n    fontSize: 11,\n  },\n  messageBox: {\n    maxHeight: 10,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const downloadTestData = () => {\n    const link = document.createElement(\"a\")\n    link.href = `http://195.0.0.${networking.guiState.id}:3001/test-data.csv`\n    link.click()\n  }\n\n  const pathSeriesRef: React.MutableRefObject<any> = useRef()\n  const robotSeriesRef: React.MutableRefObject<any> = useRef()\n  const xAxisRef: React.MutableRefObject<any> = useRef()\n  const yAxisRef: React.MutableRefObject<any> = useRef()\n\n  pathDisplay.plotPathSeries(\n    networking.pathToFollow.latitudes,\n    networking.pathToFollow.longitudes,\n    pathSeriesRef,\n    xAxisRef,\n    yAxisRef,\n    false\n  )\n\n  pathDisplay.plotRobotSeries(\n    networking.robotState.gps.latitude,\n    networking.robotState.gps.longitude,\n    networking.robotState.gps.heading,\n    robotSeriesRef\n  )\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.5\n    xAxis.renderer.baseGrid.strokeWidth = 1\n    xAxis.strictMinMax = true\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.renderer.minGridDistance = 40\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.5\n    yAxis.renderer.baseGrid.strokeWidth = 1\n    yAxis.strictMinMax = true\n\n    // Path series\n    let pathSeries = chart.series.push(new am4charts.LineSeries())\n    pathSeries.dataFields.valueX = \"ax\"\n    pathSeries.dataFields.valueY = \"ay\"\n    pathSeries.dataFields.value = \"aValue\"\n    pathSeries.strokeWidth = 2\n\n    let bullet1 = pathSeries.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    // Robot series\n    let robotSeries = chart.series.push(new am4charts.LineSeries())\n    robotSeries.dataFields.valueX = \"bx\"\n    robotSeries.dataFields.valueY = \"by\"\n    robotSeries.strokeWidth = 2\n    robotSeries.stroke = am4core.color(\"#ff0000\")\n\n    // It must be initialized with two data points to prevent blinking\n    robotSeries.data = [\n      { bx: 0, by: 0, angle: 0 },\n      { bx: 0, by: 0, angle: 0 },\n    ]\n\n    let bullet2 = robotSeries.bullets.push(new am4charts.Bullet())\n    bullet2.propertyFields.rotation = \"angle\"\n\n    // Add a triangle to act as am arrow\n    let arrow = bullet2.createChild(am4core.Triangle)\n    arrow.horizontalCenter = \"middle\"\n    arrow.verticalCenter = \"middle\"\n    arrow.direction = \"top\"\n    arrow.width = 10\n    arrow.height = 25\n    arrow.fill = am4core.color(\"#ffffff00\")\n    arrow.strokeWidth = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    pathSeriesRef.current = pathSeries\n    robotSeriesRef.current = robotSeries\n    xAxisRef.current = xAxis\n    yAxisRef.current = yAxis\n\n    pathDisplay.plotPathSeries(\n      networking.pathToFollow.latitudes,\n      networking.pathToFollow.longitudes,\n      pathSeriesRef,\n      xAxisRef,\n      yAxisRef,\n      true\n    )\n\n    return () => {\n      chart.dispose()\n    }\n  }, [networking])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.startPathFollowing()\n        }}\n      >\n        start test\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.returnToStart()\n        }}\n      >\n        return to start position\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          downloadTestData()\n        }}\n      >\n        download test data\n      </Button>\n\n      <Typography variant=\"body2\" className={classes.body}>\n        GPS status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Robot Location: ({pathDisplay.robot_east.toFixed(2)}, {pathDisplay.robot_north.toFixed(2)})\n        <br />\n        Heading: {((networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n        <br />\n        Speed:{\" \"}\n        {Math.sqrt(\n          networking.robotState.gps.eastVelocity ** 2 + networking.robotState.gps.northVelocity ** 2\n        ).toFixed(2)}{\" \"}\n        m/s\n      </Typography>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Test Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.testLogMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport PrepareTab from \"../components/path_following/PrepareTab\"\nimport TestTab from \"../components/path_following/TestTab\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path Following\")\n  }, [setTopBarTitle])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"prepare\" className={classes.tab} />\n          <Tab label=\"test\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PrepareTab networking={networking} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TestTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  TempInfoButton: {\n    paddingBottom: 1,\n    paddingTop: 0,\n    marginLeft: theme.spacing(1),\n    color: \"white\",\n  },\n  TempInfoCard: {\n    width: 400,\n  },\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [maxMotorTemp, setMaxMotorTemp] = useState(0)\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [maxRobotTemp, setMaxRobotTemp] = useState(0)\n\n  // handleMotorTemperature()\n  useEffect(() => {\n    const motor_temp_threshold = 185 //temp thresholds for motors/robot to open snackbar (needs repeated later for to specify popup)\n    const robot_temp_threshold = 140\n\n    const mcs = networking.robotState.motorControllers\n    const robot = networking.robotState\n    const max_t = Math.max(\n      mcs.leftBack.windingTemperature,\n      mcs.leftFront.windingTemperature,\n      mcs.rightBack.windingTemperature,\n      mcs.rightFront.windingTemperature\n    )\n    \n    const max_robot_t = Math.max(\n      robot.batteryTemperature,\n      robot.robotTemperature\n    )\n\n    setMaxMotorTemp(max_t)\n    setMaxRobotTemp(max_robot_t)\n\n    if (max_t > motor_temp_threshold || max_robot_t > robot_temp_threshold) {\n      setSnackbarOpen(true)\n      } else {\n      setSnackbarOpen(false)\n      }\n  }, [networking.robotState])\n\n  // Temp thresholds constants (repeat of useEffect constants from above)\n  const motor_threshold_temp = 185\n  const robot_threshold_temp = 140\n\n  // If statements for different snackbar popups/dialogue\n  if (maxMotorTemp > motor_threshold_temp && maxRobotTemp > robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n              •Both the motor winding temperature and robot/battery temperature are approaching temperature thresholds. <br/>\n              •Upon the robot/battery temperature reaching the temperature threshold, robot operation will be disabled. <br/>\n              •Upon the motor winding temperature reaching its threshold, STRIDE will enter descender mode if it is on a hill, \n              unless E-stopped, where it will hold until some more critical temperature threshold is reached. <br/>\n              •Avoid leaving the STRIDE E-stopped on a hill whenever possible. <br/>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n        \n        <Snackbar className={classes.snackbar} open={snackbarOpen}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Motor Temp: {maxMotorTemp} / 185F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n            <br/> Robot Temp: {maxRobotTemp} / 160F <br/>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n  else if (maxMotorTemp > motor_threshold_temp && maxRobotTemp <= robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n              •Upon the motor winding temperature reaching its threshold, STRIDE will enter descender mode if it is on a hill, \n              unless E-stopped, where it will hold until some more critical temperature threshold is reached. <br/>\n              •Avoid leaving the STRIDE E-stopped on a hill whenever possible. <br/> \n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n        \n        <Snackbar className={classes.snackbar} open={snackbarOpen} anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Motor Temp: {maxMotorTemp} / 185F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n\n  else if (maxMotorTemp <= motor_threshold_temp && maxRobotTemp > robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n                Upon the robot/battery temperature reaching the temperature threshold, robot operation will be disabled. <br/>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n\n        <Snackbar className={classes.snackbar} open={snackbarOpen} anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Robot Temp: {maxRobotTemp} / 160F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n\nelse {\n  return null\n}\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n  useEffect(() => {\n    if (networking.isNewTestDataReady === true) {\n      setSnackbarOpen(true)\n      networking.isNewTestDataReady = false\n    }\n  }, [setSnackbarOpen, networking, networking.isNewTestDataReady])\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.snackbar}\n        open={snackbarOpen}\n        autoHideDuration={5000}\n        onClose={() => {\n          setSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Test Data Ready for Download\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Modal from \"@material-ui/core/Modal\"\n\nimport Networking from \"../networking\"\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nexport default function Component({ networking }: { networking: Networking }) {\n  const classes = useStyles()\n  const [modalStyle] = React.useState(getModalStyle)\n  const [open, setOpen] = useState(false)\n\n  // function reset() {\n  //   networking.senders.resetMicroController()\n  // }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h3>The micro-controller requires a reset. Please move robot to flat ground and press the reset button.</h3>\n    </div>\n  )\n\n  useEffect(() => {\n    setOpen(!networking.robotState.portentaHeartbeat)\n  },[networking.robotState.portentaHeartbeat])\n\n  return (\n    <div>\n      <Modal open={open}>{body}</Modal>\n    </div>\n  )\n}\n","// abbreviations:\n// refLat: reference latitude\n// refLong: reference longitude\n// EN: East North\n\nimport { EN_factors, LL2NE, NE2LL } from \"./shared/utilities\"\n\nexport default class PathRecorder {\n  isRecording: boolean\n  isRecordingLine: boolean\n  hasBeenRecordingLine: boolean\n  pointDistance: number\n  latitudes: number[]\n  longitudes: number[]\n  priorLatitude: number\n  priorLongitude: number\n  latRef: number\n  longRef: number\n  E_factor: number\n  N_factor: number\n  recorderId: number\n  numberOfPoints: number\n\n  constructor() {\n    this.isRecording = false\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.pointDistance = 0.3 // meters\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.latRef = -1\n    this.longRef = -1\n    this.E_factor = 0\n    this.N_factor = 0\n    this.recorderId = 0\n    this.numberOfPoints = 0\n  }\n\n  requestRecording() {\n    this.isRecording = true\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.numberOfPoints = 0\n  }\n\n  stopRecording() {\n    this.isRecording = false\n    this.isRecordingLine = false\n\n    //DO NOT ADD THIS HERE: this.hasBeenRecordingLine = false\n  }\n\n  toggleLineRecording() {\n    this.isRecordingLine = !this.isRecordingLine\n  }\n\n  recordWhenRequested(latitude: number, longitude: number) {\n    if (this.isRecording) {\n      const haversineDistance = this.haversine(this.priorLatitude, latitude, this.priorLongitude, longitude)\n\n      if (this.priorLatitude === -1 || this.priorLongitude === -1) {\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.latRef = latitude\n        this.longRef = longitude\n\n        const EN = EN_factors(this.latRef)\n        this.E_factor = EN[0]\n        this.N_factor = EN[1]\n      } else if (this.isRecordingLine) {\n        this.hasBeenRecordingLine = true\n      } else if (this.hasBeenRecordingLine) {\n        this.hasBeenRecordingLine = false\n        const [northStart, eastStart] = LL2NE(\n          this.priorLatitude,\n          this.priorLongitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const [northEnd, eastEnd] = LL2NE(\n          latitude,\n          longitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const lineDistance = ((northStart - northEnd) ** 2 + (eastStart - eastEnd) ** 2) ** 0.5\n        const divisions = Math.floor(lineDistance / this.pointDistance)\n\n        // good that the FOR loop won't run if divisions is < 1\n        for (let i = 1; i <= divisions; i++) {\n          const newNorth = northStart + (i / divisions) * (northEnd - northStart)\n          const newEast = eastStart + (i / divisions) * (eastEnd - eastStart)\n          const [newLatitude, newLongitude] = NE2LL(\n            newNorth,\n            newEast,\n            this.latRef,\n            this.longRef,\n            this.E_factor,\n            this.N_factor\n          )\n          this.latitudes.push(newLatitude)\n          this.longitudes.push(newLongitude)\n          this.numberOfPoints += 1\n\n          this.priorLatitude = newLatitude\n          this.priorLongitude = newLongitude\n        }\n      } else if (haversineDistance > this.pointDistance) {\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n      }\n    }\n  }\n\n  // transformToRobotCenter(latRadian2: number, longRadian2: number, headingRadian: number) {\n  //   const R = 6371008 // Earth mean radisu in meters\n  //   const r = R * Math.cos(latRadian2) // radius of the earth circular slice at latitude2 in meters\n  //   const d = 0.2736 // distance between gps and robot center in meters\n  //   const theta = 0.11 // the radian angle between the gps and the robot center\n\n  //   const latRadian1 = (R * latRadian2 - d * Math.cos(headingRadian + theta)) / R\n  //   const longRadian1 = (r * longRadian2 - d * Math.sin(headingRadian + theta)) / r\n\n  //   const latCentered = (latRadian1 / Math.PI) * 180\n  //   const longCentered = (longRadian1 / Math.PI) * 180\n\n  //   return [latCentered, longCentered]\n  // }\n\n  // Haversine Distance in meters between two latlong points\n  haversine(lat1: number, lat2: number, long1: number, long2: number) {\n    const latRadian1 = (lat1 / 180) * Math.PI\n    const latRadian2 = (lat2 / 180) * Math.PI\n    const longRadian1 = (long1 / 180) * Math.PI\n    const longRadian2 = (long2 / 180) * Math.PI\n\n    const R = 6371008 // Earth mean radisu in meters\n    const deltaLat = latRadian2 - latRadian1\n    const deltaLong = longRadian2 - longRadian1\n\n    // Small angle approximation is used\n    const distance =\n      R * Math.sqrt(deltaLat ** 2 + Math.cos(latRadian1) * Math.cos(latRadian2) * deltaLong ** 2)\n\n    return distance // in meters\n  }\n}\n","import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { DRAWER_WIDTH } from \"./shared/constants\"\n\nimport Networking from \"./networking\"\n\nimport SideDrawer from \"./components/SideDrawer\"\nimport TopBar from \"./components/TopBar\"\nimport InitialSetup from \"./pages/InitialSetup\"\nimport ManualControl from \"./pages/ManualControl\"\nimport RobotStatus from \"./pages/RobotStatus\"\nimport Path from \"./pages/Path\"\nimport PathFollowing from \"./pages/PathFollowing\"\nimport AutoDownhill from \"./components/AutoDownhill\"\nimport TestDataReadyPopUp from \"./components/TestDataReadyPopUp\"\nimport ResetMicroControllerModal from \"./components/ResetMicroControllerModal\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PathRecorder from \"./path-recorder\"\n\nlet networking = new Networking(\"\", false)\n\nconst pathRecorder = new PathRecorder() // initialized in App.tsx because components like TopBar needs its data\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for content to be below app bar\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n    padding: theme.spacing(3),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n\n  const [, setForceRerender] = useState({})\n  const [topBarTitle, setTopBarTitle] = useState(\"\")\n  const [mobileOpen, setMobileOpen] = useState(false) // open status of the side menu in mobile screen\n\n  function handleRobotConnect(id: string) {\n    if (id === \"useRecentId\") {\n      networking.socket.close()\n      networking = new Networking(networking.lastConnectedId, networking.isConnectedOnce)\n    } else {\n      networking.socket.close()\n      networking = new Networking(id, false)\n    }\n  }\n  function handleRobotDisconnect() {\n    networking.socket.close()\n  }\n\n  useEffect(() => {\n    const id1 = setInterval(() => {\n      setForceRerender({})\n\n      // record path when requested\n      const latitude = networking.robotState.gps.latitude\n      const longitude = networking.robotState.gps.longitude\n      pathRecorder.recordWhenRequested(latitude, longitude)\n    }, 100)\n\n    return () => {\n      clearInterval(id1)\n    }\n  }, [])\n\n  // console.log(\"rendered\")\n\n  return (\n    <Router>\n      <CssBaseline />\n      <ResetMicroControllerModal networking={networking} />\n      <AutoDownhill networking={networking} />\n      <TestDataReadyPopUp networking={networking} />\n      <TopBar\n        networking={networking}\n        setMobileOpen={setMobileOpen}\n        topBarTitle={topBarTitle}\n        pathRecorder={pathRecorder}\n        handleRobotConnect={handleRobotConnect}\n      />\n      <SideDrawer networking={networking} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/initialsetup\" />\n          </Route>\n\n          <Route path=\"/initialsetup\">\n            <InitialSetup\n              networking={networking}\n              handleRobotConnect={handleRobotConnect}\n              handleRobotDisconnect={handleRobotDisconnect}\n              setTopBarTitle={setTopBarTitle}\n            />\n          </Route>\n\n          <Route path=\"/manualcontrol\">\n            <ManualControl\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n\n          <Route path=\"/robotstatus\">\n            <RobotStatus networking={networking} setTopBarTitle={setTopBarTitle} />\n          </Route>\n\n          <Route path=\"/path\">\n            <Path networking={networking} setTopBarTitle={setTopBarTitle} pathRecorder={pathRecorder} />\n          </Route>\n\n          <Route path=\"/pathfollowing\">\n            <PathFollowing\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}