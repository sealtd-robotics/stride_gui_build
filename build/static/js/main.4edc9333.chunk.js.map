{"version":3,"sources":["shared/constants.ts","networking.ts","shared/utilities.ts","components/SideDrawer.tsx","components/TopBar.tsx","components/RobotConnectCard.tsx","pages/InitialSetup.tsx","components/PathRecorderPopUpCard.tsx","components/Joystick.tsx","pages/ManualControl.tsx","components/GeneralCard.tsx","components/GpsCard.tsx","components/MotorControllerCard.tsx","components/SubjectVehicleCard.tsx","pages/RobotStatus.tsx","components/path/PathRecoderTab.tsx","components/path/PathViewingTab.tsx","components/path/SharedPathTab.tsx","pages/Path.tsx","components/path_following/PrepareTab.tsx","components/path_following/TestTab.tsx","pages/PathFollowing.tsx","components/AutoDownhill.tsx","components/TestDataReadyPopUp.tsx","path-recorder.ts","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["DRAWER_WIDTH","OVERSEER_STATE_STRING","MC_STATE_STRING","NMT_STATE_STRING","GNSS_FIX_TYPE","MC_ERROR_WORD","Networking","_createClass","id","isConnectedOnce","_this","_classCallCheck","guiState","robotState","socket","senders","dataArrivalTime","intervalId1","intervalId2","receivedSharedPath","pathToFollow","lastConnectedId","isNewTestDataReady","testLogMessages","errorMessages","this","isConnected","type","robotVelocityCommand","v","w","robotTurningRadius","overseerState","websocketClientCount","doesBrakeWhenStopped","robotTemperature","batteryTemperature","batteryVoltage","motorControllers","leftFront","state","heartbeatNmt","isHeartbeatTimeout","motorCurrentDraw","wheelRpmActual","errorWord","windingTemperature","leftBack","rightFront","rightBack","gps","status","latitude","longitude","northVelocity","eastVelocity","zAngularVelocity","heading","pathFollower","pathName","scriptName","targetVehicle","velocity","gps_ready","gps_correction_type","timestamp","latitudes","longitudes","WebSocket","error","console","onopen","event","Date","now","setInterval","close","heartbeat","onmessage","data","JSON","parse","toLocaleTimeString","push","commandMessage","_step","newline_separated","errorMessage","split","_iterator","_createForOfIteratorHelper","s","n","done","error_message","value","err","e","f","onclose","clearInterval","joystick","travel","angle","message","send","stringify","spin","angular_velocity","x","theta","moveForward","stop","enableManaul","idle","readyState","OPEN","toggleBrakeWhenStopped","setMagneticCalibration","method","sharePath","startPathFollowing","uploadPath","filename","fileContent","uploadScript","returnToStart","hasErrors","EN_factors","lat_ref","R","pi","Math","PI","sin","cos","sqrt","pow","LL2NE","long_ref","E_factor","N_factor","useStyles","makeStyles","theme","toolbar","mixins","drawerPaper","width","logo","paddingTop","list","padding","errorIcon","color","Component","_ref","networking","mobileOpen","setMobileOpen","classes","useTheme","history","useHistory","itemsLIst","text","onClick","canShowErrorIcon","drawer","_jsxs","children","_jsx","className","Typography","variant","align","Divider","List","map","item","ListItem","button","ListItemText","primary","Tooltip","title","ErrorOutlineIcon","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","appBar","_defineProperty","breakpoints","up","concat","marginLeft","marginRight","menuButton","display","spacing","start","backgroundColor","background","connection","reconnect","topBarTitle","pathRecorder","handleRobotConnect","AppBar","position","Toolbar","IconButton","edge","MenuIcon","noWrap","isRecording","FiberManualRecordIcon","style","_Fragment","xsDown","Button","fontSize","margin","textField","handleRobotDisconnect","_useState","useState","_useState2","_slicedToArray","setId","Card","CardContent","TextField","label","onChange","target","onKeyDown","key","Page","setTopBarTitle","useEffect","Grid","container","justify","alignItems","RobotConnectCard","root","marginTop","boxShadow","zIndex","body","pathSwitch","numberOfPoints","FormControlLabel","control","Switch","checked","isRecordingLine","toggleLineRecording","Joystick","_Component","_inherits","_super","_createSuper","_len","arguments","length","args","Array","_key","call","apply","circleDiameter","sender_thottle_time","previousTime","handleJoystickStart","evt","handleJoystickEnd","setTimeout","props","handleJoystickMove","distance","radian","marginBottom","toFixed","PathRecorderPopUpCard","ReactNipple","options","mode","top","left","size","nippleSize","outline","height","overflow","onStart","onEnd","onMove","spinBox","moveButton","rotateRightButton","rotateIcon","isSpinning","isMovingForward","WebkitUserSelect","disabled","Box","onPointerDown","onPointerUp","onPointerOut","RotateLeftIcon","RotateRightIcon","ArrowUpwardIcon","expand","paddingBottom","transform","transition","transitions","create","duration","shortest","expandOpen","cardContent","_React$useState","React","_React$useState2","verticalAlign","motorController","location","toString","copyButton","navigator","clipboard","writeText","FileCopyOutlinedIcon","GeneralCard","GpsCard","MotorControllerCard","SubjectVehicleCard","mb","flexDirection","border","overflowY","overflowX","msg","notes","snackOpen","setSnackOpen","paddingLeft","requestRecording","stopRecording","pathString","i","blob","Blob","saveAs","exportPath","Snackbar","autoHideDuration","MuiAlert","elevation","severity","chartContainer","chartStyle","bottom","right","pathViewer","PathViewer","easts","norths","chartRef","_EN_factors","_EN_factors2","_LL2NE","_LL2NE2","pos_north","pos_east","current","createChartData","str","isNaN","Number","parseFloat","importFileRef","file","files","reader","FileReader","addEventListener","splitText","result","lineNumber","line","latLong","isNumeric","_EN_factors3","_EN_factors4","_LL2NE3","_LL2NE4","readAsText","chartData","ax","ay","aValue","x1","y1","x2","y2","desiredSpacing","useRef","useLayoutEffect","chart","am4core","am4charts","paddingRight","xAxis","xAxes","renderer","minGridDistance","baseGrid","strokeOpacity","strokeWidth","yAxis","yAxes","series1","series","dataFields","valueX","valueY","bullet1","bullets","circle","radius","numberFormatter","numberFormat","tooltipText","scrollbarX","scrollbarY","dispose","importFromRecorder","component","ref","importFromFile","hidden","sharedPath","TabPanel","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","p","palette","tab","setValue","Tabs","scrollButtons","indicatorColor","textColor","newValue","Tab","PathRecorderTab","PathViewingTab","SharedPathTab","snackbar","opacity","uploadPathRef","uploadScriptRef","wrongExtensionSnackbarOpen","setWrongExtensionSnackbarOpen","name","anchorOrigin","vertical","horizontal","pathDisplay","PathDisplay","robot_east","robot_north","pathSeriesRef","xAxisRef","yAxisRef","forceRun","undefined","eastMin","min","_toConsumableArray","eastMax","max","northMin","northMax","axisLength","createPathSeriesData","headingRadian","robotSeriesRef","addData","bx","by","pathSeriesData","messageBox","maxHeight","plotPathSeries","plotRobotSeries","strictMinMax","pathSeries","robotSeries","stroke","bullet2","propertyFields","rotation","arrow","createChild","horizontalCenter","verticalCenter","fill","link","document","createElement","href","click","downloadTestData","PrepareTab","TestTab","motorTempInfoButton","motorTempInfoCard","maxMotorTemp","setMaxMotorTemp","_useState3","_useState4","snackbarOpen","setSnackbarOpen","_useState5","_useState6","modalOpen","setModalOpen","mcs","max_t","Modal","justifyContent","InfoIcon","PathRecorder","hasBeenRecordingLine","pointDistance","priorLatitude","priorLongitude","latRef","longRef","recorderId","haversineDistance","haversine","EN","northStart","eastStart","northEnd","eastEnd","lineDistance","divisions","floor","_NE2LL","_NE2LL2","newLatitude","newLongitude","lat1","lat2","long1","long2","latRadian1","latRadian2","longRadian1","deltaLat","deltaLong","_content","content","App","setForceRerender","id1","recordWhenRequested","Router","CssBaseline","AutoDownhill","TestDataReadyPopUp","TopBar","SideDrawer","Route","path","exact","Redirect","to","InitialSetup","ManualControl","RobotStatus","Path","PathFollowing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4edc9333.chunk.js","sourcesContent":["export const DRAWER_WIDTH = 185\nexport const OVERSEER_STATE_STRING: { [char: string]: string } = {\n  0: \"Initial\",\n  1: \"Manual\",\n  2: \"Auto\",\n  3: \"E-Stopped\",\n  // 4: \"Error\",\n  5: \"Stopped\",\n  6: \"Decending\",\n  7: \"Idle\",\n}\n\nexport const MC_STATE_STRING: { [char: string]: string } = {\n  0: \"not ready to switch on\",\n  64: \"switch on disabled\",\n  33: \"ready to switch on\",\n  35: \"switched on\",\n  39: \"operation enabled\",\n  7: \"quick stop active\",\n  15: \"fault reaction active\",\n  8: \"fault\",\n}\n\nexport const NMT_STATE_STRING: { [key: string]: string } = {\n  0: \"boot up\",\n  4: \"stopped\",\n  5: \"operational\",\n  127: \"pre-operational\",\n}\n\nexport const GNSS_FIX_TYPE: { [key: string]: string } = {\n  0: \"No Solution\",\n  1: \"Unknown\",\n  2: \"Single\",\n  3: \"PSRDIFF\",\n  4: \"SBAS\",\n  5: \"Omnister\",\n  6: \"RTK Float\",\n  7: \"RTK Integer\",\n}\n\nexport const MC_ERROR_WORD: { [key: string]: string } = {\n  0: \"None\",\n  1: \"SpeedDeviationError\",\n  2: \"FollowingError\",\n  4: \"OverVoltageError\",\n  8: \"UnderVoltageError\",\n  16: \"TempWarning\",\n  32: \"TempError\",\n  64: \"Encoder error\",\n  128: \"Int HW error\",\n  512: \"Current Measurement Error\",\n  2048: \"Com error\",\n  4096: \"Calc error\",\n  8192: \"Dynamic Limit\",\n  16384: \"Safety monitor error\",\n}\n","import { GuiState, RobotState, Senders } from \"./shared/interfaces\"\n\nexport default class Networking {\n  guiState: GuiState\n  robotState: RobotState\n  socket: WebSocket\n  senders: Senders\n  dataArrivalTime: number\n  intervalId1!: NodeJS.Timeout\n  intervalId2!: NodeJS.Timeout\n  receivedSharedPath: { timestamp: string; latitudes: Array<number>; longitudes: Array<number> }\n  pathToFollow: { latitudes: Array<number>; longitudes: Array<number> }\n  lastConnectedId: string\n  isConnectedOnce: boolean\n  isNewTestDataReady: boolean\n  testLogMessages: Array<string>\n  errorMessages: Array<string>\n\n  constructor(id: string, isConnectedOnce: boolean) {\n    if (isConnectedOnce) {\n      this.lastConnectedId = id\n      this.isConnectedOnce = true\n    } else {\n      this.lastConnectedId = \"\"\n      this.isConnectedOnce = false\n    }\n\n    this.guiState = {\n      isConnected: false,\n      id: id,\n    }\n\n    // robotState:\n    //   -should have the same keys as the received JSON message from robot\n    //   -JSON message is received continuosly at certain rate\n    this.robotState = {\n      type: \"robotState\",\n      robotVelocityCommand: {\n        v: 0,\n        w: 0,\n      },\n      robotTurningRadius: 0,\n      overseerState: 0,\n      websocketClientCount: 0,\n      doesBrakeWhenStopped: false,\n      robotTemperature: 0,\n      batteryTemperature: 0,\n      batteryVoltage: 0,\n      motorControllers: {\n        leftFront: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        leftBack: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightFront: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightBack: {\n          state: 0,\n          heartbeatNmt: 0,\n          isHeartbeatTimeout: false,\n          motorCurrentDraw: 0,\n          wheelRpmActual: 0,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n      },\n      gps: {\n        status: -1,\n        latitude: 0,\n        longitude: 0,\n        northVelocity: 0,\n        eastVelocity: 0,\n        zAngularVelocity: 0,\n        heading: 0,\n      },\n      pathFollower: {\n        pathName: \"\",\n        scriptName: \"\",\n      },\n      targetVehicle: {\n        latitude: 0,\n        longitude: 0,\n        heading: 0,\n        velocity: 0,\n        gps_ready: false,\n        gps_correction_type: 0,\n      },\n    }\n\n    // Here are the attributes that don't get updated continuously\n    this.receivedSharedPath = { timestamp: \"\", latitudes: [], longitudes: [] }\n    this.pathToFollow = { latitudes: [], longitudes: [] }\n    this.isNewTestDataReady = false\n    this.testLogMessages = []\n    this.errorMessages = []\n\n    // For disconnecting when no more incoming data\n    this.dataArrivalTime = 0\n\n    try {\n      if (id === \"localhost\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://localhost:9000\")\n      } else if (id === \"999\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://192.168.1.129:9000\")\n      } else {\n        this.socket = new WebSocket(\"ws://195.0.0.\" + id + \":9000\")\n      }\n    } catch (error) {\n      console.error(error)\n      this.socket = new WebSocket(\"ws://0.0.0.0\")\n    }\n\n    this.socket.onopen = (event) => {\n      this.guiState.isConnected = true\n      this.dataArrivalTime = Date.now()\n\n      this.lastConnectedId = this.guiState.id\n      this.isConnectedOnce = true\n\n      // disconnect if no messages are received for a period of time\n      this.intervalId1 = setInterval(() => {\n        if (Date.now() - this.dataArrivalTime > 4000) {\n          this.guiState.isConnected = false // needed when wifi gets disconnected\n          this.socket.close()\n        }\n      }, 250)\n\n      // send out heartbeat\n      this.intervalId2 = setInterval(() => {\n        this.senders.heartbeat()\n      }, 200)\n    }\n\n    this.socket.onmessage = (event) => {\n      this.dataArrivalTime = Date.now()\n\n      const data = JSON.parse(event.data)\n\n      if (data.type === \"robotState\") {\n        this.robotState = data\n      } else if (data.type === \"sharedPath\") {\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n\n        this.receivedSharedPath = {\n          timestamp: timestamp,\n          latitudes: data.latitudes,\n          longitudes: data.longitudes,\n        }\n      } else if (data.type === \"/path_follower/path_to_follow\") {\n        this.pathToFollow.latitudes = data.latitudes\n        this.pathToFollow.longitudes = data.longitudes\n      } else if (data.type === \"createdCSV\") {\n        this.isNewTestDataReady = true\n      } else if (data.type === \"commandMessage\") {\n        this.testLogMessages.push(data.commandMessage)\n      } else if (data.type === \"errorMessage\") {\n        // Attach a date to the error message\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n        this.errorMessages.push(timestamp)\n\n        // Attach the error messages to both test log and error log\n        const newline_separated = data.errorMessage.split(/\\r?\\n/)\n        for (const error_message of newline_separated) {\n          // \"2\" is Auto\n          if (this.robotState.overseerState === 2) {\n            this.testLogMessages.push(error_message)\n          }\n          this.errorMessages.push(error_message)\n        }\n      }\n    }\n\n    // the onclose callback will not run immediately when wifi gets disconnected\n    this.socket.onclose = (event) => {\n      this.guiState.isConnected = false\n      clearInterval(this.intervalId1)\n      clearInterval(this.intervalId2)\n    }\n\n    this.senders = {\n      joystick: (travel, angle) => {\n        const message = {\n          type: \"/joystick\",\n          travel: travel,\n          angle: angle,\n        }\n\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      spin: (angular_velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: 0,\n          theta: angular_velocity,\n        }\n\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      moveForward: (velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: velocity,\n          theta: 0,\n        }\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      stop: () => {\n        const message = {\n          type: \"/gui/stop_clicked\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      enableManaul: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/enable_manual_clicked\" }))\n        }\n      },\n\n      idle: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/idle_clicked\" }))\n        }\n      },\n\n      heartbeat: () => {\n        if (this.socket.readyState === WebSocket.OPEN) {\n          this.socket.send(JSON.stringify({ type: \"/gui/heartbeat\" }))\n        }\n      },\n\n      toggleBrakeWhenStopped: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/brake_when_stopped_toggled\" }))\n        }\n      },\n\n      setMagneticCalibration: (method) => {\n        const message = {\n          type: \"/an_device/magnetic_calibration/calibrate\",\n          method: method,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      sharePath: (latitudes, longitudes) => {\n        const message = {\n          type: \"sharedPath\",\n          latitudes: latitudes,\n          longitudes: longitudes,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      startPathFollowing: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/start_path_following_clicked\" }))\n        }\n      },\n\n      uploadPath: (filename, fileContent) => {\n        // return if file extension is not txt\n        if (filename.split(\".\")[1] !== \"txt\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_path_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      uploadScript: (filename, fileContent) => {\n        // return if file extension is not py\n        if (filename.split(\".\")[1] !== \"py\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_script_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      returnToStart: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/return_to_start_clicked\" }))\n        }\n      },\n    }\n  }\n}\n","// abbreviations\n// lat: latitude\n// long: longitude\n// ref: reference\n// pos: position\n\nimport { RobotState } from \"./interfaces\"\n\nexport function hasErrors(robotState: RobotState) {\n  return (\n    (robotState.motorControllers.leftFront.errorWord !== 0 &&\n      robotState.motorControllers.leftFront.errorWord !== 64) ||\n    robotState.motorControllers.leftFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.leftBack.errorWord !== 0 &&\n      robotState.motorControllers.leftBack.errorWord !== 64) ||\n    robotState.motorControllers.leftBack.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightFront.errorWord !== 0 &&\n      robotState.motorControllers.rightFront.errorWord !== 64) ||\n    robotState.motorControllers.rightFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightBack.errorWord !== 0 &&\n      robotState.motorControllers.rightBack.errorWord !== 64) ||\n    robotState.motorControllers.rightBack.isHeartbeatTimeout\n  )\n}\n\nexport function EN_factors(lat_ref: number) {\n  const e = 0.0818191908426\n  const R = 6378137\n  const pi = Math.PI\n\n  const sin = Math.sin\n  const cos = Math.cos\n  const sqrt = Math.sqrt\n\n  const E_factor =\n    (((cos((lat_ref * pi) / 180) * R) / sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2)) * pi) / 180\n\n  const N_factor =\n    ((((1 - e ** 2) * R) /\n      ((1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2) * sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2))) *\n      pi) /\n    180\n  return [E_factor, N_factor]\n}\n\n// Latitude Longitude to North East\nexport function LL2NE(\n  latitude: number,\n  longitude: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const pos_east = (longitude - long_ref) * E_factor\n  const pos_north = (latitude - lat_ref) * N_factor\n  return [pos_north, pos_east]\n}\n\nexport function NE2LL(\n  pos_north: number,\n  pos_east: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const longitude = pos_east / E_factor + long_ref\n  const latitude = pos_north / N_factor + lat_ref\n  return [latitude, longitude]\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH } from \"../shared/constants\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Divider from \"@material-ui/core/Divider\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for pushing the SideDrawer below the TopBar\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  logo: {\n    paddingTop: 10,\n  },\n  list: {\n    padding: 0,\n  },\n  errorIcon: {\n    color: \"red\",\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  mobileOpen: boolean\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function Component({ networking, mobileOpen, setMobileOpen }: Props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const itemsLIst = [\n    {\n      text: \"Initial Setup\",\n      onClick: () => {\n        history.push(\"/initialsetup\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Manual Control\",\n      onClick: () => {\n        history.push(\"/manualcontrol\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Robot Status\",\n      onClick: () => {\n        history.push(\"/robotstatus\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: true,\n    },\n    {\n      text: \"Path\",\n      onClick: () => {\n        history.push(\"/path\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Path Following\",\n      onClick: () => {\n        history.push(\"/pathfollowing\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n  ]\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography variant=\"h4\" align=\"center\" color=\"primary\" className={classes.logo}>\n          STRIDE\n        </Typography>\n      </div>\n\n      <Divider />\n      <List className={classes.list}>\n        {itemsLIst.map((item) => {\n          const { text, onClick, canShowErrorIcon } = item\n          return (\n            <ListItem button key={text} onClick={onClick}>\n              <ListItemText primary={text} />\n              {canShowErrorIcon && hasErrors(networking.robotState) && networking.guiState.isConnected ? (\n                <Tooltip title=\"ERROR\">\n                  <ErrorOutlineIcon className={classes.errorIcon} />\n                </Tooltip>\n              ) : null}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav aria-label=\"mailbox folders\">\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={() => setMobileOpen(false)}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  )\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH, OVERSEER_STATE_STRING } from \"../shared/constants\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport PathRecorder from \"../path-recorder\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  stop: {\n    marginLeft: theme.spacing(1.5),\n  },\n  start: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    marginLeft: theme.spacing(1.5),\n    \"&:hover\": {\n      background: \"darkgreen\",\n    },\n  },\n  connection: {\n    color: \"lightgray\",\n  },\n  state: {\n    marginLeft: theme.spacing(1.5),\n    color: \"lightgray\",\n  },\n  errorIcon: {\n    marginLeft: theme.spacing(1.5),\n    color: \"red\",\n  },\n  reconnect: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n  idle: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n  topBarTitle: string\n  pathRecorder: PathRecorder\n  handleRobotConnect: (id: string) => void\n}\n\nexport default function Component({\n  networking,\n  setMobileOpen,\n  topBarTitle,\n  pathRecorder,\n  handleRobotConnect,\n}: Props) {\n  const classes = useStyles()\n\n  const guiState = networking.guiState\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleStopButton() {\n    senders.stop()\n  }\n\n  function handleIdle() {\n    senders.idle()\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => setMobileOpen(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          {topBarTitle}\n        </Typography>\n\n        {pathRecorder.isRecording ? (\n          <Tooltip title=\"Recording\">\n            <FiberManualRecordIcon style={{ color: \"red\", marginRight: \"6px\" }} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected ? (\n          <>\n            <Hidden xsDown>\n              <Typography variant=\"body2\" className={classes.connection}>\n                {`ID: ${guiState.id}`}\n              </Typography>\n            </Hidden>\n\n            <Typography variant=\"body2\" className={classes.state}>\n              {OVERSEER_STATE_STRING[robotState.overseerState]}\n            </Typography>\n          </>\n        ) : (\n          <Typography variant=\"body2\" className={classes.connection}>\n            not connected\n          </Typography>\n        )}\n\n        {!guiState.isConnected && networking.lastConnectedId !== \"\" && (\n          <Button\n            className={classes.reconnect}\n            variant=\"contained\"\n            onClick={() => handleRobotConnect(\"useRecentId\")}\n          >\n            reconnect\n          </Button>\n        )}\n\n        {guiState.isConnected && hasErrors(robotState) ? (\n          <Tooltip title=\"ERROR\">\n            <ErrorOutlineIcon fontSize=\"large\" className={classes.errorIcon} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 1 ||\n            robotState.overseerState === 2 ||\n            robotState.overseerState === 7 ||\n            robotState.overseerState === 4) && ( // if in manual, auto, idle, or return_to_start\n            <Button className={classes.stop} variant=\"contained\" color=\"secondary\" onClick={handleStopButton}>\n              stop\n            </Button>\n          )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 5 || robotState.overseerState === 6) && ( // if in stopped or decending\n            <Button className={classes.idle} variant=\"contained\" onClick={handleIdle}>\n              idle\n            </Button>\n          )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  status: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: \"15.5rem\",\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n}\n\nexport default function Component({ networking, handleRobotConnect, handleRobotDisconnect }: Props) {\n  const classes = useStyles()\n\n  const [id, setId] = useState(\"\")\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Robot Connection\n        </Typography>\n\n        <Typography variant=\"caption\" display=\"block\" className={classes.status}>\n          {networking.guiState.isConnected ? `conntected (ID: ${networking.guiState.id})` : \"not connected\"}\n        </Typography>\n\n        <TextField\n          label=\"Robot ID\"\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => {\n            setId(e.target.value)\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleRobotConnect(id)\n            }\n          }}\n        />\n        <br />\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleRobotConnect(id)}\n        >\n          Connect\n        </Button>\n\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleRobotDisconnect()}\n        >\n          Disconnect\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport RobotConnectCard from \"../components/RobotConnectCard\"\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({\n  networking,\n  handleRobotConnect,\n  handleRobotDisconnect,\n  setTopBarTitle,\n}: Props) {\n  useEffect(() => {\n    setTopBarTitle(\"Initial Setup\")\n  }, [])\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n      <Grid item>\n        <RobotConnectCard\n          networking={networking}\n          handleRobotConnect={handleRobotConnect}\n          handleRobotDisconnect={handleRobotDisconnect}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\n// ws://192.168.1.129:9090\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    marginLeft: theme.spacing(1.5),\n    marginTop: theme.spacing(1.5),\n    // boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    boxShadow: \"3px 3px 5px rgba(0,0,0,0.2)\",\n    zIndex: 1,\n  },\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  pathSwitch: {\n    marginLeft: 0,\n  },\n}))\n\ninterface Props {\n  pathRecorder: PathRecorder\n  networking: Networking\n}\n\nexport default function Component({ pathRecorder, networking }: Props) {\n  const classes = useStyles()\n  const date = new Date()\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Typography variant=\"h6\" className={classes.title}>\n        Recording Path\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        GPS Status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <FormControlLabel\n        className={classes.pathSwitch}\n        control={\n          <Switch\n            checked={pathRecorder.isRecordingLine}\n            onChange={() => pathRecorder.toggleLineRecording()}\n            color=\"primary\"\n          />\n        }\n        label=\"Record a line\"\n      />\n    </Card>\n  )\n}\n","import React, { Component } from \"react\"\n\nimport ReactNipple from \"react-nipple\"\nimport \"react-nipple/lib/styles.css\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport PathRecorderPopUpCard from \"./PathRecorderPopUpCard\"\nimport PathRecorder from \"../path-recorder\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Networking from \"../networking\"\n\n// Abbreviations:\n// ICR = instantaneous center of rotation\n// v,V = linear velocity\n// w,W = angular velocity\n// r,R = turning radius of robot geometric center\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default class Joystick extends Component<Props> {\n  circleDiameter = 400 // pixels\n  sender_thottle_time = 100 //ms\n  previousTime = Date.now()\n\n  render() {\n    return (\n      <div>\n        <h3 style={{ marginTop: 0, marginBottom: 5 }}>Press and drag below to move the robot</h3>\n\n        <Tooltip title=\"Linear Velocity\">\n          <span style={{ fontSize: 16 }}>\n            v: {this.props.networking.robotState.robotVelocityCommand.v.toFixed(2)} m/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Measured Linear Velocity\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            vm:{\" \"}\n            {Math.sqrt(\n              this.props.networking.robotState.gps.eastVelocity ** 2 +\n                this.props.networking.robotState.gps.northVelocity ** 2\n            ).toFixed(2)}{\" \"}\n            m/s\n          </span>\n        </Tooltip>\n\n        <br />\n\n        <Tooltip title=\"Angular Velocity\">\n          <span style={{ fontSize: 16 }}>\n            w: {((this.props.networking.robotState.robotVelocityCommand.w / Math.PI) * 180).toFixed(0)} deg/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Turning Radius\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            r: {this.props.networking.robotState.robotTurningRadius.toFixed(0)} m\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Heading\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            h: {((this.props.networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n          </span>\n        </Tooltip>\n\n        <br />\n        {this.props.pathRecorder.isRecording ? (\n          <PathRecorderPopUpCard pathRecorder={this.props.pathRecorder} networking={this.props.networking} />\n        ) : null}\n\n        <ReactNipple\n          className=\"nipple\"\n          options={{\n            mode: \"dynamic\",\n            color: \"blue\",\n            position: { top: \"50%\", left: \"50%\" },\n            size: this.circleDiameter,\n            nippleSize: 90,\n          }}\n          style={{\n            zIndex: 0,\n            outline: `1px dashed blue`,\n            width: \"100%\",\n            height: \"max( 100vh - 325px, 120px)\", // calc() not needed inside max()\n            // display: \"table\",\n            overflow: \"hidden\",\n          }}\n          onStart={this.handleJoystickStart}\n          onEnd={this.handleJoystickEnd}\n          onMove={this.handleJoystickMove}\n        />\n        {/* <DebugView data={this.state.data} /> */}\n      </div>\n    )\n  }\n\n  handleJoystickStart = (evt: any, data: any) => {}\n\n  handleJoystickEnd = (evt: any, data: any) => {\n    setTimeout(() => {\n      this.props.networking.senders.joystick(0, 0)\n    }, 100) // needed, otherwise the subscriber callback for /robot_velocity_command won't get triggered\n  }\n  handleJoystickMove = (evt: any, data: any) => {\n    if (Date.now() - this.previousTime < this.sender_thottle_time) {\n      return\n    }\n    this.previousTime = Date.now()\n\n    const travel = data.distance / (this.circleDiameter * 0.5)\n    const angle = data.angle.radian - Math.PI / 2 // the angle when pushing the joystick forwards is now 0\n\n    this.props.networking.senders.joystick(travel, angle)\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport Joystick from \"../components/Joystick\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\"\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\"\nimport Box from \"@material-ui/core/Box\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  spinBox: {\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n  moveButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateRightButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateIcon: {\n    marginLeft: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\nlet isSpinning = false\nlet isMovingForward = false\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleManualSwitch(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.checked) {\n      senders.enableManaul()\n    } else {\n      senders.stop()\n    }\n  }\n\n  function handleBrakeWhenStoppedSwitch() {\n    senders.toggleBrakeWhenStopped()\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Manual Control\")\n  }, [])\n\n  return (\n    // WebkitUserSelect is used to prevent random text selection when using the joystick\n    <div style={{ WebkitUserSelect: \"none\" }}>\n      {/* <p>heading: {((robotState.gps.heading / Math.PI) * 180).toFixed(0)}</p> */}\n      <FormControlLabel\n        control={\n          <Switch checked={robotState.overseerState === 1} onChange={handleManualSwitch} color=\"primary\" />\n        }\n        label=\"Enable Manual Control\"\n        disabled={\n          robotState.overseerState === 2 || robotState.overseerState === 3 || robotState.overseerState === 6\n        }\n      />\n\n      <FormControlLabel\n        control={\n          <Switch\n            checked={robotState.doesBrakeWhenStopped === true}\n            onChange={handleBrakeWhenStoppedSwitch}\n            color=\"primary\"\n          />\n        }\n        label=\"Apply Brake when Not Moving\"\n      />\n\n      <Box className={classes.spinBox}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateLeftIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.rotateRightButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(-0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateRightIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.moveButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isMovingForward = true\n            senders.moveForward(0.75)\n          }}\n          onPointerUp={() => {\n            isMovingForward = false\n            senders.moveForward(0)\n          }}\n          onPointerOut={() => {\n            if (isMovingForward) {\n              senders.moveForward(0)\n            }\n          }}\n        >\n          move <ArrowUpwardIcon className={classes.rotateIcon} />\n        </Button>\n      </Box>\n\n      <Joystick networking={networking} pathRecorder={pathRecorder} />\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          General\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Voltage: {robotState.batteryVoltage.toFixed(2)}V\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Temperature: {robotState.batteryTemperature}F\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Robot Internal Temperature: {robotState.robotTemperature}F\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Clients Connected to Robot: {robotState.websocketClientCount}\n        </Typography>\n\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          GPS\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitdue (deg): {robotState.gps.latitude.toFixed(9)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.gps.longitude.toFixed(9)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          North Velocity (m/s): {robotState.gps.northVelocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          East Velocity (m/s): {robotState.gps.eastVelocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Linear Speed (m/s):{\" \"}\n          {Math.sqrt(\n            Math.pow(robotState.gps.eastVelocity, 2) + Math.pow(robotState.gps.northVelocity, 2)\n          ).toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Angular Velocity (deg/s): {((robotState.gps.zAngularVelocity / Math.PI) * 180).toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState, MotorController } from \"../shared/interfaces\"\nimport { MC_STATE_STRING, NMT_STATE_STRING, MC_ERROR_WORD } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  errorIcon: {\n    // marginLeft: theme.spacing(1.5),\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\ninterface Props {\n  motorController: MotorController\n  id: number\n  location: string\n}\n\nexport default function Component({ motorController, id, location }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Motor Controller {id}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.title}>\n          Motor Location: {location}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Error: {MC_ERROR_WORD[motorController.errorWord]}{\" \"}\n          {motorController.errorWord !== 0 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heartbeat Timeout: {motorController.isHeartbeatTimeout.toString()}{\" \"}\n          {motorController.isHeartbeatTimeout ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          State: {MC_STATE_STRING[motorController.state]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          NMT State: {NMT_STATE_STRING[motorController.heartbeatNmt]}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Motor Current (A): {motorController.motorCurrentDraw.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Actual Wheel RPM: {motorController.wheelRpmActual.toFixed(0)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Winding Temperature (C): {motorController.windingTemperature.toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  copyButton: {\n    paddingTop: 0,\n    marginLeft: theme.spacing(0.5),\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  function handleExpandClick() {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          Subject Vehicle\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitude (deg): {robotState.targetVehicle.latitude.toFixed(7)}\n          <IconButton\n            className={classes.copyButton}\n            size=\"small\"\n            onClick={() =>\n              navigator.clipboard.writeText(robotState.targetVehicle.latitude.toFixed(7).toString())\n            }\n          >\n            <FileCopyOutlinedIcon style={{ fontSize: 16 }} />\n          </IconButton>\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.targetVehicle.longitude.toFixed(7)}\n          <IconButton\n            className={classes.copyButton}\n            size=\"small\"\n            onClick={() =>\n              navigator.clipboard.writeText(robotState.targetVehicle.longitude.toFixed(7).toString())\n            }\n          >\n            <FileCopyOutlinedIcon style={{ fontSize: 16 }} />\n          </IconButton>\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {robotState.targetVehicle.heading.toFixed(2)}\n          <IconButton\n            className={classes.copyButton}\n            size=\"small\"\n            onClick={() =>\n              navigator.clipboard.writeText(robotState.targetVehicle.heading.toFixed(2).toString())\n            }\n          >\n            <FileCopyOutlinedIcon style={{ fontSize: 16 }} />\n          </IconButton>\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Velocity (m/s): {robotState.targetVehicle.velocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Ready: {robotState.targetVehicle.gps_ready.toString()}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Correction Type: {robotState.targetVehicle.gps_correction_type}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport GeneralCard from \"../components/GeneralCard\"\nimport GpsCard from \"../components/GpsCard\"\nimport MotorControllerCard from \"../components/MotorControllerCard\"\nimport SubjectVehicleCard from \"../components/SubjectVehicleCard\"\nimport Networking from \"../networking\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({ networking, setTopBarTitle }: Props) {\n  const robotState = networking.robotState\n\n  useEffect(() => {\n    setTopBarTitle(\"Robot Status\")\n  }, [])\n  return (\n    <div>\n      <Grid container spacing={2} alignItems=\"flex-start\">\n        <Grid item>\n          <GeneralCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <GpsCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftFront}\n            id={1}\n            location=\"left_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftBack}\n            id={2}\n            location=\"left_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightFront}\n            id={3}\n            location=\"right_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightBack}\n            id={4}\n            location=\"right_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <SubjectVehicleCard robotState={robotState} />\n        </Grid>\n      </Grid>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Error Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.errorMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../../path-recorder\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default function Component({ networking, pathRecorder }: Props) {\n  const classes = useStyles()\n  const date = new Date()\n  const [snackOpen, setSnackOpen] = useState(false)\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < pathRecorder.numberOfPoints; i++) {\n      pathString = pathString.concat(\n        pathRecorder.latitudes[i].toFixed(17).toString(),\n        \" \",\n        pathRecorder.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\n          <li>The GPS cordinates of the robot can be recorded here.</li>\n          <li>Move the robot to create a path when recording starts.</li>\n          <li>Tips for recording:</li>\n          <ul>\n            <li>Since speed is not recorded, move robot slowly to accurately capture path.</li>\n            <li>\n              You may record path that has sharp corners. Robot can be programmed later to stop at the corner\n              and rotate to the specified heading before moving again.\n            </li>\n          </ul>\n        </ul>\n      </Typography>\n      <Divider />\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Status: {pathRecorder.isRecording ? \"Recording...\" : \"Not Recording\"}\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.requestRecording()\n        }}\n      >\n        record\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.stopRecording()\n        }}\n      >\n        stop\n      </Button>\n\n      <br />\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n\n      <br />\n\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={8000}\n        onClose={() => {\n          setSnackOpen(false)\n        }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Go to the SHARED tab above in another connected device.\n        </MuiAlert>\n      </Snackbar>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          setSnackOpen(true)\n          networking.senders.sharePath(pathRecorder.latitudes, pathRecorder.longitudes)\n        }}\n      >\n        share with other devices\n      </Button>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { EN_factors, LL2NE, NE2LL } from \"../../shared/utilities\"\nimport PathRecorder from \"../../path-recorder\"\n\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 90vh))\",\n  paddingTop: \"calc((min(100%, 90vh)) - 15px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathViewer {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n  }\n\n  importFromRecorder(latitudes: number[], longitudes: number[], chartRef: React.MutableRefObject<any>) {\n    this.latitudes = latitudes\n    this.longitudes = longitudes\n\n    this.easts = []\n    this.norths = []\n\n    const [E_factor, N_factor] = EN_factors(latitudes[0])\n    this.E_factor = E_factor\n    this.N_factor = N_factor\n\n    this.lat_ref = latitudes[0]\n    this.long_ref = longitudes[0]\n\n    for (let i = 0; i < latitudes.length; i++) {\n      const [pos_north, pos_east] = LL2NE(\n        latitudes[i],\n        longitudes[i],\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      this.easts.push(pos_east)\n      this.norths.push(pos_north)\n    }\n\n    chartRef.current.data = this.createChartData()\n  }\n\n  isNumeric(str: string) {\n    return (\n      !isNaN(Number(str)) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n      !isNaN(parseFloat(str))\n    ) // ...and ensure strings of whitespace fail\n  }\n\n  importFromFile(importFileRef: React.MutableRefObject<any>, chartRef: React.MutableRefObject<any>) {\n    this.easts = []\n    this.norths = []\n    this.latitudes = []\n    this.longitudes = []\n\n    const file = importFileRef.current.files[0]\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const text = event.target.result\n      const splitText = text.split(\"\\n\")\n\n      let lineNumber = 1\n      for (const line of splitText) {\n        // omit the first line in file\n        if (lineNumber === 1) {\n          lineNumber++\n          continue\n        }\n\n        const latLong = line.split(/ |\\t/)\n        if (latLong.length === 2) {\n          if (this.isNumeric(latLong[0]) && this.isNumeric(latLong[1])) {\n            this.latitudes.push(Number(latLong[0]))\n            this.longitudes.push(Number(latLong[1]))\n          }\n        }\n      }\n\n      const [E_factor, N_factor] = EN_factors(this.latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = this.latitudes[0]\n      this.long_ref = this.longitudes[0]\n\n      for (let i = 0; i < this.latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          this.latitudes[i],\n          this.longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      importFileRef.current.value = \"\" // this is needed for importing the same file that has been saved over\n\n      chartRef.current.data = this.createChartData()\n    })\n    reader.readAsText(file)\n  }\n\n  createChartData() {\n    const chartData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      chartData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return chartData\n  }\n\n  twoPointDistance(x1: number, y1: number, x2: number, y2: number) {\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n  }\n\n  // spacing is in meters\n  correctPointSpacing(desiredSpacing: number) {\n    // const s = desiredSpacing\n    // const newEasts = [this.easts[0]]\n    // const newNorths = [this.norths[0]]\n    // let Cx = newEasts[0]\n    // let Cy = newNorths[0]\n    // let Tx = 0\n    // let Ty = 0\n    // let i = 1\n    // let g = this.twoPointDistance(Cx, Cy, this.easts[1], this.norths[1])\n    // const totalPoints = pathViewer.easts.length\n    // while (i <= totalPoints) {\n    //   if (g > s) {\n    //     while (g > s) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //       newEasts.push(Tx)\n    //       newNorths.push(Ty)\n    //       Cx = Tx\n    //       Cy = Ty\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   } else if (g < s) {\n    //     while (g < s) {\n    //       i += 1\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   }\n    //   if (g === s) {\n    //     // ????\n    //   }\n    //   Cx = newEasts[newEasts.length - 1]\n    //   Cy = newNorths[newNorths.length - 1]\n    //   g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //   if (g > s) {\n    //     if (k = i -1) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //     } else {\n    //       k = i - 1\n    //     }\n    //   }\n    //   if (distance >= desiredSpacing) {\n    //     const newEast = newEasts[newEasts.length - 1] + (tail / distance) * (this.easts[i + 1] - this.easts[i])\n    //     const newNorth = this.norths[i] + (tail / distance) * (this.norths[i + 1] - this.norths[i])\n    // }\n  }\n}\n\ninterface Props {\n  pathRecorder: PathRecorder\n}\n\nconst pathViewer = new PathViewer()\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nexport default function Component({ pathRecorder }: Props) {\n  const classes = useStyles()\n  const importFileRef: React.MutableRefObject<any> = useRef()\n\n  // XY Chart\n  const chartRef: React.MutableRefObject<any> = useRef()\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    chart.data = pathViewer.createChartData()\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.3\n    xAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.3\n    yAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create series\n    let series1 = chart.series.push(new am4charts.LineSeries())\n    series1.dataFields.valueX = \"ax\"\n    series1.dataFields.valueY = \"ay\"\n    series1.dataFields.value = \"aValue\"\n    series1.strokeWidth = 2\n\n    let bullet1 = series1.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    //scrollbars\n    chart.scrollbarX = new am4core.Scrollbar()\n    chart.scrollbarY = new am4core.Scrollbar()\n\n    chartRef.current = chart\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathViewer.importFromRecorder(pathRecorder.latitudes, pathRecorder.longitudes, chartRef)\n        }}\n      >\n        import from recorder\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        import from file\n        <input\n          type=\"file\"\n          ref={importFileRef}\n          onChange={() => pathViewer.importFromFile(importFileRef, chartRef)}\n          hidden\n        />\n      </Button>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const sharedPath = networking.receivedSharedPath\n  const date = new Date()\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < sharedPath.latitudes.length; i++) {\n      pathString = pathString.concat(\n        sharedPath.latitudes[i].toFixed(17).toString(),\n        \" \",\n        sharedPath.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Shared path from another device will appear here.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Time Received: {sharedPath.timestamp} <br />\n        Number of Points: {sharedPath.latitudes.length}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorderTab from \"../components/path/PathRecoderTab\"\nimport PathViewingTab from \"../components/path/PathViewingTab\"\nimport SharedPathTab from \"../components/path/SharedPathTab\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path\")\n  }, [])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"Record\" className={classes.tab} />\n          <Tab label=\"View\" className={classes.tab} />\n          <Tab label=\"Shared\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PathRecorderTab networking={networking} pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PathViewingTab pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <SharedPathTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useRef } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  snackbar: {\n    opacity: 0.9,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const uploadPathRef: React.MutableRefObject<any> = useRef()\n  const uploadScriptRef: React.MutableRefObject<any> = useRef()\n\n  const [wrongExtensionSnackbarOpen, setWrongExtensionSnackbarOpen] = useState(false)\n\n  function uploadPath() {\n    const file = uploadPathRef.current.files[0]\n    uploadPathRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"txt\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadPath(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  function uploadScript() {\n    const file = uploadScriptRef.current.files[0]\n    uploadScriptRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"py\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadScript(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Note that the robot only stores the most recently uploaded path and script files.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Path (.txt file): {networking.robotState.pathFollower.pathName} <br />\n        Script (.py file): {networking.robotState.pathFollower.scriptName}\n      </Typography>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload path\n        <input\n          type=\"file\"\n          ref={uploadPathRef}\n          onChange={() => {\n            uploadPath()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload script\n        <input\n          type=\"file\"\n          ref={uploadScriptRef}\n          onChange={() => {\n            uploadScript()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Snackbar\n        className={classes.snackbar}\n        open={wrongExtensionSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setWrongExtensionSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Incorrect file extension\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useState, useRef, useEffect, useLayoutEffect } from \"react\"\n\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { EN_factors, LL2NE, NE2LL } from \"../../shared/utilities\"\nimport { GNSS_FIX_TYPE } from \"../../shared/constants\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 70vh))\",\n  paddingTop: \"calc((min(100%, 70vh)) - 0px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathDisplay {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n  robot_east: number\n  robot_north: number\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n    this.robot_east = 0\n    this.robot_north = 0\n  }\n\n  plotPathSeries(\n    latitudes: number[],\n    longitudes: number[],\n    pathSeriesRef: React.MutableRefObject<any>,\n    xAxisRef: React.MutableRefObject<any>,\n    yAxisRef: React.MutableRefObject<any>,\n    forceRun: boolean\n  ) {\n    if (forceRun === true || (this.latitudes !== latitudes && pathSeriesRef.current !== undefined)) {\n      this.latitudes = latitudes\n      this.longitudes = longitudes\n\n      this.easts = []\n      this.norths = []\n\n      const [E_factor, N_factor] = EN_factors(latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = latitudes[0]\n      this.long_ref = longitudes[0]\n\n      for (let i = 0; i < latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          latitudes[i],\n          longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      const eastMin = Math.min(...this.easts)\n      const eastMax = Math.max(...this.easts)\n      const northMin = Math.min(...this.norths)\n      const northMax = Math.max(...this.norths)\n\n      const axisLength = Math.max(eastMax - eastMin, northMax - northMin)\n\n      xAxisRef.current.min = eastMin - 3\n      xAxisRef.current.max = eastMin + axisLength + 3\n      yAxisRef.current.min = northMin - 3\n      yAxisRef.current.max = northMin + axisLength + 3\n\n      pathSeriesRef.current.data = this.createPathSeriesData()\n    }\n  }\n\n  plotRobotSeries(\n    latitude: number,\n    longitude: number,\n    headingRadian: number,\n    robotSeriesRef: React.MutableRefObject<any>\n  ) {\n    if (robotSeriesRef.current !== undefined) {\n      const [pos_north, pos_east] = LL2NE(\n        latitude,\n        longitude,\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      robotSeriesRef.current.addData(\n        { bx: pos_east, by: pos_north, angle: (headingRadian / Math.PI) * 180 },\n        1\n      )\n\n      // For displaying the numerical values of robot location\n      this.robot_east = pos_east\n      this.robot_north = pos_north\n    }\n  }\n\n  createPathSeriesData() {\n    const pathSeriesData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      pathSeriesData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return pathSeriesData\n  }\n}\n\nconst pathDisplay = new PathDisplay()\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(1),\n    fontSize: 11,\n  },\n  messageBox: {\n    maxHeight: 10,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const downloadTestData = () => {\n    const link = document.createElement(\"a\")\n    link.href = `http://195.0.0.${networking.guiState.id}:3001/test-data.csv`\n    link.click()\n  }\n\n  const pathSeriesRef: React.MutableRefObject<any> = useRef()\n  const robotSeriesRef: React.MutableRefObject<any> = useRef()\n  const xAxisRef: React.MutableRefObject<any> = useRef()\n  const yAxisRef: React.MutableRefObject<any> = useRef()\n\n  pathDisplay.plotPathSeries(\n    networking.pathToFollow.latitudes,\n    networking.pathToFollow.longitudes,\n    pathSeriesRef,\n    xAxisRef,\n    yAxisRef,\n    false\n  )\n\n  pathDisplay.plotRobotSeries(\n    networking.robotState.gps.latitude,\n    networking.robotState.gps.longitude,\n    networking.robotState.gps.heading,\n    robotSeriesRef\n  )\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.5\n    xAxis.renderer.baseGrid.strokeWidth = 1\n    xAxis.strictMinMax = true\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.renderer.minGridDistance = 40\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.5\n    yAxis.renderer.baseGrid.strokeWidth = 1\n    yAxis.strictMinMax = true\n\n    // Path series\n    let pathSeries = chart.series.push(new am4charts.LineSeries())\n    pathSeries.dataFields.valueX = \"ax\"\n    pathSeries.dataFields.valueY = \"ay\"\n    pathSeries.dataFields.value = \"aValue\"\n    pathSeries.strokeWidth = 2\n\n    let bullet1 = pathSeries.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    // Robot series\n    let robotSeries = chart.series.push(new am4charts.LineSeries())\n    robotSeries.dataFields.valueX = \"bx\"\n    robotSeries.dataFields.valueY = \"by\"\n    robotSeries.strokeWidth = 2\n    robotSeries.stroke = am4core.color(\"#ff0000\")\n\n    // It must be initialized with two data points to prevent blinking\n    robotSeries.data = [\n      { bx: 0, by: 0, angle: 0 },\n      { bx: 0, by: 0, angle: 0 },\n    ]\n\n    let bullet2 = robotSeries.bullets.push(new am4charts.Bullet())\n    bullet2.propertyFields.rotation = \"angle\"\n\n    // Add a triangle to act as am arrow\n    let arrow = bullet2.createChild(am4core.Triangle)\n    arrow.horizontalCenter = \"middle\"\n    arrow.verticalCenter = \"middle\"\n    arrow.direction = \"top\"\n    arrow.width = 10\n    arrow.height = 25\n    arrow.fill = am4core.color(\"#ffffff00\")\n    arrow.strokeWidth = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    pathSeriesRef.current = pathSeries\n    robotSeriesRef.current = robotSeries\n    xAxisRef.current = xAxis\n    yAxisRef.current = yAxis\n\n    pathDisplay.plotPathSeries(\n      networking.pathToFollow.latitudes,\n      networking.pathToFollow.longitudes,\n      pathSeriesRef,\n      xAxisRef,\n      yAxisRef,\n      true\n    )\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      {/* <Typography variant=\"body1\" className={classes.notes}>\n        Start path following, and visualize robot location and other status like speed\n      </Typography> */}\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.startPathFollowing()\n        }}\n      >\n        start test\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.returnToStart()\n        }}\n      >\n        return to start position\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          downloadTestData()\n        }}\n      >\n        download test data\n      </Button>\n\n      <Typography variant=\"body2\" className={classes.body}>\n        GPS status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Robot Location: ({pathDisplay.robot_east.toFixed(2)}, {pathDisplay.robot_north.toFixed(2)})\n        <br />\n        Heading: {((networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n        <br />\n        Speed:{\" \"}\n        {Math.sqrt(\n          networking.robotState.gps.eastVelocity ** 2 + networking.robotState.gps.northVelocity ** 2\n        ).toFixed(2)}{\" \"}\n        m/s\n      </Typography>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Test Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.testLogMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport PrepareTab from \"../components/path_following/PrepareTab\"\nimport TestTab from \"../components/path_following/TestTab\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path Following\")\n  }, [])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"prepare\" className={classes.tab} />\n          <Tab label=\"test\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PrepareTab networking={networking} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TestTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  motorTempInfoButton: {\n    paddingBottom: 1,\n    paddingTop: 0,\n    marginLeft: theme.spacing(1),\n    color: \"white\",\n  },\n  motorTempInfoCard: {\n    width: 400,\n  },\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [maxMotorTemp, setMaxMotorTemp] = useState(0)\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n\n  // handleMotorTemperature()\n  useEffect(() => {\n    const temperature_threshold = 85\n\n    const mcs = networking.robotState.motorControllers\n    const max_t = Math.max(\n      mcs.leftBack.windingTemperature,\n      mcs.leftFront.windingTemperature,\n      mcs.rightBack.windingTemperature,\n      mcs.rightFront.windingTemperature\n    )\n    setMaxMotorTemp(max_t)\n\n    if (max_t > temperature_threshold) {\n      setSnackbarOpen(true)\n    } else {\n      setSnackbarOpen(false)\n    }\n  })\n\n  return (\n    <div>\n      <Modal\n        style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n        open={modalOpen}\n        onClose={() => setModalOpen(false)}\n      >\n        <Card className={classes.motorTempInfoCard} variant=\"outlined\">\n          <CardContent>\n            <Typography variant=\"body1\">\n              Upon reaching the temperature threshold, if Stride is on a slope, it will move downhill until\n              flat ground. <br />\n              This feature is omitted in the \"E-stopped\" state, in which Stride will attempt to stay still\n              until the motors give out.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Modal>\n\n      <Snackbar className={classes.snackbar} open={snackbarOpen}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Motor Temp: {maxMotorTemp} / 105C\n          <IconButton\n            className={classes.motorTempInfoButton}\n            size=\"small\"\n            onClick={() => {\n              setModalOpen(true)\n            }}\n          >\n            <InfoIcon />\n          </IconButton>\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n  useEffect(() => {\n    if (networking.isNewTestDataReady === true) {\n      setSnackbarOpen(true)\n      networking.isNewTestDataReady = false\n    }\n  })\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.snackbar}\n        open={snackbarOpen}\n        autoHideDuration={5000}\n        onClose={() => {\n          setSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Test Data Ready for Download\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","// abbreviations:\n// refLat: reference latitude\n// refLong: reference longitude\n// EN: East North\n\nimport { EN_factors, LL2NE, NE2LL } from \"./shared/utilities\"\n\nexport default class PathRecorder {\n  isRecording: boolean\n  isRecordingLine: boolean\n  hasBeenRecordingLine: boolean\n  pointDistance: number\n  latitudes: number[]\n  longitudes: number[]\n  priorLatitude: number\n  priorLongitude: number\n  latRef: number\n  longRef: number\n  E_factor: number\n  N_factor: number\n  recorderId: number\n  numberOfPoints: number\n\n  constructor() {\n    this.isRecording = false\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.pointDistance = 0.3 // meters\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.latRef = -1\n    this.longRef = -1\n    this.E_factor = 0\n    this.N_factor = 0\n    this.recorderId = 0\n    this.numberOfPoints = 0\n  }\n\n  requestRecording() {\n    this.isRecording = true\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.numberOfPoints = 0\n  }\n\n  stopRecording() {\n    this.isRecording = false\n    this.isRecordingLine = false\n\n    //DO NOT ADD THIS HERE: this.hasBeenRecordingLine = false\n  }\n\n  toggleLineRecording() {\n    this.isRecordingLine = !this.isRecordingLine\n  }\n\n  recordWhenRequested(latitude: number, longitude: number) {\n    if (this.isRecording) {\n      const haversineDistance = this.haversine(this.priorLatitude, latitude, this.priorLongitude, longitude)\n\n      if (this.priorLatitude === -1 || this.priorLongitude === -1) {\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.latRef = latitude\n        this.longRef = longitude\n\n        const EN = EN_factors(this.latRef)\n        this.E_factor = EN[0]\n        this.N_factor = EN[1]\n      } else if (this.isRecordingLine) {\n        this.hasBeenRecordingLine = true\n      } else if (this.hasBeenRecordingLine) {\n        this.hasBeenRecordingLine = false\n        const [northStart, eastStart] = LL2NE(\n          this.priorLatitude,\n          this.priorLongitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const [northEnd, eastEnd] = LL2NE(\n          latitude,\n          longitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const lineDistance = ((northStart - northEnd) ** 2 + (eastStart - eastEnd) ** 2) ** 0.5\n        const divisions = Math.floor(lineDistance / this.pointDistance)\n\n        // good that the FOR loop won't run if divisions is < 1\n        for (let i = 1; i <= divisions; i++) {\n          const newNorth = northStart + (i / divisions) * (northEnd - northStart)\n          const newEast = eastStart + (i / divisions) * (eastEnd - eastStart)\n          const [newLatitude, newLongitude] = NE2LL(\n            newNorth,\n            newEast,\n            this.latRef,\n            this.longRef,\n            this.E_factor,\n            this.N_factor\n          )\n          this.latitudes.push(newLatitude)\n          this.longitudes.push(newLongitude)\n          this.numberOfPoints += 1\n\n          this.priorLatitude = newLatitude\n          this.priorLongitude = newLongitude\n        }\n      } else if (haversineDistance > this.pointDistance) {\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n      }\n    }\n  }\n\n  // transformToRobotCenter(latRadian2: number, longRadian2: number, headingRadian: number) {\n  //   const R = 6371008 // Earth mean radisu in meters\n  //   const r = R * Math.cos(latRadian2) // radius of the earth circular slice at latitude2 in meters\n  //   const d = 0.2736 // distance between gps and robot center in meters\n  //   const theta = 0.11 // the radian angle between the gps and the robot center\n\n  //   const latRadian1 = (R * latRadian2 - d * Math.cos(headingRadian + theta)) / R\n  //   const longRadian1 = (r * longRadian2 - d * Math.sin(headingRadian + theta)) / r\n\n  //   const latCentered = (latRadian1 / Math.PI) * 180\n  //   const longCentered = (longRadian1 / Math.PI) * 180\n\n  //   return [latCentered, longCentered]\n  // }\n\n  // Haversine Distance in meters between two latlong points\n  haversine(lat1: number, lat2: number, long1: number, long2: number) {\n    const latRadian1 = (lat1 / 180) * Math.PI\n    const latRadian2 = (lat2 / 180) * Math.PI\n    const longRadian1 = (long1 / 180) * Math.PI\n    const longRadian2 = (long2 / 180) * Math.PI\n\n    const R = 6371008 // Earth mean radisu in meters\n    const deltaLat = latRadian2 - latRadian1\n    const deltaLong = longRadian2 - longRadian1\n\n    // Small angle approximation is used\n    const distance =\n      R * Math.sqrt(deltaLat ** 2 + Math.cos(latRadian1) * Math.cos(latRadian2) * deltaLong ** 2)\n\n    return distance // in meters\n  }\n}\n","import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { DRAWER_WIDTH } from \"./shared/constants\"\n\nimport Networking from \"./networking\"\n\nimport SideDrawer from \"./components/SideDrawer\"\nimport TopBar from \"./components/TopBar\"\nimport InitialSetup from \"./pages/InitialSetup\"\nimport ManualControl from \"./pages/ManualControl\"\nimport RobotStatus from \"./pages/RobotStatus\"\nimport Path from \"./pages/Path\"\nimport PathFollowing from \"./pages/PathFollowing\"\nimport AutoDownhill from \"./components/AutoDownhill\"\nimport TestDataReadyPopUp from \"./components/TestDataReadyPopUp\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PathRecorder from \"./path-recorder\"\n\nlet networking = new Networking(\"\", false)\n\nconst pathRecorder = new PathRecorder() // initialized in App.tsx because components like TopBar needs its data\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for content to be below app bar\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n    padding: theme.spacing(3),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n\n  const [forceRerender, setForceRerender] = useState({})\n  const [topBarTitle, setTopBarTitle] = useState(\"\")\n  const [mobileOpen, setMobileOpen] = useState(false) // open status of the side menu in mobile screen\n\n  function handleRobotConnect(id: string) {\n    if (id === \"useRecentId\") {\n      networking.socket.close()\n      networking = new Networking(networking.lastConnectedId, networking.isConnectedOnce)\n    } else {\n      networking.socket.close()\n      networking = new Networking(id, false)\n    }\n  }\n  function handleRobotDisconnect() {\n    networking.socket.close()\n  }\n\n  useEffect(() => {\n    const id1 = setInterval(() => {\n      setForceRerender({})\n\n      // record path when requested\n      const latitude = networking.robotState.gps.latitude\n      const longitude = networking.robotState.gps.longitude\n      pathRecorder.recordWhenRequested(latitude, longitude)\n    }, 100)\n\n    return () => {\n      clearInterval(id1)\n    }\n  }, [])\n\n  // console.log(\"rendered\")\n\n  return (\n    <Router>\n      <CssBaseline />\n      <AutoDownhill networking={networking} />\n      <TestDataReadyPopUp networking={networking} />\n      <TopBar\n        networking={networking}\n        setMobileOpen={setMobileOpen}\n        topBarTitle={topBarTitle}\n        pathRecorder={pathRecorder}\n        handleRobotConnect={handleRobotConnect}\n      />\n      <SideDrawer networking={networking} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/initialsetup\" />\n          </Route>\n\n          <Route path=\"/initialsetup\">\n            <InitialSetup\n              networking={networking}\n              handleRobotConnect={handleRobotConnect}\n              handleRobotDisconnect={handleRobotDisconnect}\n              setTopBarTitle={setTopBarTitle}\n            />\n          </Route>\n\n          <Route path=\"/manualcontrol\">\n            <ManualControl\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n\n          <Route path=\"/robotstatus\">\n            <RobotStatus networking={networking} setTopBarTitle={setTopBarTitle} />\n          </Route>\n\n          <Route path=\"/path\">\n            <Path networking={networking} setTopBarTitle={setTopBarTitle} pathRecorder={pathRecorder} />\n          </Route>\n\n          <Route path=\"/pathfollowing\">\n            <PathFollowing\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}