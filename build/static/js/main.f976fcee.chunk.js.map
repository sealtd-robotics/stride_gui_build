{"version":3,"sources":["shared/constants.ts","networking.ts","shared/utilities.ts","components/SideDrawer.tsx","icons/src/brake-icon.svg","icons/BrakeIcon.tsx","components/TopBar.tsx","components/RobotConnectCard.tsx","pages/InitialSetup.tsx","components/PathRecorderPopUpCard.tsx","components/Joystick.tsx","pages/ManualControl.tsx","components/GeneralCard.tsx","components/GpsCard.tsx","components/MechanicalBrakeCard.tsx","components/MotorControllerCard.tsx","components/SubjectVehicleCard.tsx","pages/RobotStatus.tsx","components/path/PathRecoderTab.tsx","components/path/PathViewingTab.tsx","components/path/SharedPathTab.tsx","pages/Path.tsx","components/path_following/PrepareTab.tsx","components/path_following/TestTab.tsx","pages/PathFollowing.tsx","components/AutoDownhill.tsx","components/TestDataReadyPopUp.tsx","components/ResetMicroControllerModal.tsx","path-recorder.ts","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["DRAWER_WIDTH","OVERSEER_STATE_STRING","GNSS_FIX_TYPE","MC_ERROR_WORD","Networking","constructor","id","isConnectedOnce","guiState","robotState","socket","senders","dataArrivalTime","intervalId1","intervalId2","receivedSharedPath","pathToFollow","lastConnectedId","isNewTestDataReady","testLogMessages","errorMessages","this","isConnected","type","robotVelocityCommand","v","w","robotTurningRadius","overseerState","websocketClientCount","doesBrakeWhenStopped","robotTemperature","batteryTemperature","batteryVoltage","portentaHeartbeat","tempErrorWord","motorControllers","leftFront","isHeartbeatTimeout","errorWord","windingTemperature","leftBack","rightFront","rightBack","gps","status","latitude","longitude","northVelocity","eastVelocity","heading","num_satellites","diff_age","pathFollower","pathName","scriptName","targetVehicle","velocity","gps_ready","gps_correction_type","mechanicalBrake","hasBrake","brakeStatus","timestamp","latitudes","longitudes","WebSocket","error","console","onopen","event","Date","now","setInterval","close","heartbeat","onmessage","data","JSON","parse","toLocaleTimeString","push","commandMessage","newline_separated","errorMessage","split","error_message","onclose","clearInterval","joystick","travel","angle","message","send","stringify","spin","angular_velocity","x","theta","moveForward","stop","enableManaul","releaseMechanicalBrake","idle","readyState","OPEN","toggleBrakeWhenStopped","setMagneticCalibration","method","sharePath","startPathFollowing","uploadPath","filename","fileContent","uploadScript","returnToStart","resetMicroController","hasErrors","EN_factors","lat_ref","e","R","pi","Math","PI","sin","cos","sqrt","pow","LL2NE","long_ref","E_factor","N_factor","useStyles","makeStyles","theme","toolbar","mixins","drawerPaper","width","logo","paddingTop","list","padding","errorIcon","color","Component","_ref","networking","mobileOpen","setMobileOpen","classes","useTheme","history","useHistory","itemsLIst","text","onClick","canShowErrorIcon","drawer","_jsxs","children","_jsx","className","Typography","variant","align","Divider","List","map","item","ListItem","button","ListItemText","primary","Tooltip","title","ErrorOutlineIcon","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","_style","_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","SvgBrakeIcon","svgRef","titleId","props","xmlns","xmlnsXlink","y","viewBox","style","enableBackground","xmlSpace","ref","d","ForwardRef","SvgIcon","_objectSpread","Logo","appBar","_defineProperty","breakpoints","up","concat","marginLeft","marginRight","menuButton","display","spacing","start","backgroundColor","background","connection","state","reconnect","brakeIcon","fontSize","topBarTitle","pathRecorder","handleRobotConnect","AppBar","position","Toolbar","IconButton","edge","MenuIcon","noWrap","isRecording","FiberManualRecordIcon","_Fragment","xsDown","Button","BrakeIcon","green","red","margin","textField","handleRobotDisconnect","_useState","useState","_useState2","_slicedToArray","setId","Card","CardContent","TextField","label","onChange","value","onKeyDown","Page","setTopBarTitle","useEffect","Grid","container","justify","alignItems","RobotConnectCard","root","marginTop","boxShadow","zIndex","body","pathSwitch","numberOfPoints","FormControlLabel","control","Switch","checked","isRecordingLine","toggleLineRecording","Joystick","circleDiameter","sender_thottle_time","previousTime","handleJoystickStart","evt","handleJoystickEnd","setTimeout","handleJoystickMove","distance","radian","render","marginBottom","toFixed","PathRecorderPopUpCard","ReactNipple","options","mode","top","left","size","nippleSize","outline","height","overflow","onStart","onEnd","onMove","controlBox","moveButton","rotateRightButton","rotateIcon","isSpinning","isMovingForward","WebkitUserSelect","onPointerUp","Box","disabled","onPointerDown","onPointerOut","RotateLeftIcon","RotateRightIcon","ArrowUpwardIcon","expand","paddingBottom","transform","transition","transitions","create","duration","shortest","expandOpen","cardContent","verticalAlign","toString","motorController","location","copyButton","GeneralCard","GpsCard","MotorControllerCard","MechanicalBrakeCard","SubjectVehicleCard","mb","flexDirection","border","overflowY","overflowX","msg","notes","snackOpen","setSnackOpen","paddingLeft","requestRecording","stopRecording","pathString","blob","Blob","saveAs","exportPath","Snackbar","autoHideDuration","MuiAlert","elevation","severity","chartContainer","chartStyle","bottom","right","pathViewer","PathViewer","_classCallCheck","easts","norths","_createClass","chartRef","_EN_factors","_EN_factors2","_LL2NE","_LL2NE2","pos_north","pos_east","current","createChartData","str","isNaN","Number","parseFloat","importFileRef","_this","file","files","reader","FileReader","addEventListener","_step","splitText","result","lineNumber","_iterator","_createForOfIteratorHelper","s","n","done","line","latLong","isNumeric","err","f","_EN_factors3","_EN_factors4","_LL2NE3","_LL2NE4","readAsText","chartData","ax","ay","aValue","x1","y1","x2","y2","desiredSpacing","useRef","useLayoutEffect","chart","am4core","am4charts","paddingRight","xAxis","xAxes","renderer","minGridDistance","baseGrid","strokeOpacity","strokeWidth","yAxis","yAxes","series1","series","dataFields","valueX","valueY","bullet1","bullets","circle","radius","numberFormatter","numberFormat","tooltipText","scrollbarX","scrollbarY","dispose","importFromRecorder","component","importFromFile","hidden","sharedPath","TabPanel","index","other","_objectWithoutProperties","_excluded","role","p","palette","tab","_React$useState","React","_React$useState2","setValue","Tabs","scrollButtons","indicatorColor","textColor","newValue","Tab","PathRecorderTab","PathViewingTab","SharedPathTab","snackbar","opacity","uploadPathRef","uploadScriptRef","wrongExtensionSnackbarOpen","setWrongExtensionSnackbarOpen","name","anchorOrigin","vertical","horizontal","pathDisplay","PathDisplay","robot_east","robot_north","pathSeriesRef","xAxisRef","yAxisRef","forceRun","undefined","eastMin","min","_toConsumableArray","eastMax","max","northMin","northMax","axisLength","createPathSeriesData","headingRadian","robotSeriesRef","addData","bx","by","pathSeriesData","messageBox","maxHeight","plotPathSeries","plotRobotSeries","strictMinMax","pathSeries","robotSeries","stroke","bullet2","propertyFields","rotation","arrow","createChild","horizontalCenter","verticalCenter","fill","link","document","createElement","href","click","downloadTestData","PrepareTab","TestTab","TempInfoButton","TempInfoCard","maxMotorTemp","setMaxMotorTemp","_useState3","_useState4","snackbarOpen","setSnackbarOpen","_useState5","_useState6","modalOpen","setModalOpen","_useState7","_useState8","maxRobotTemp","setMaxRobotTemp","mcs","robot","max_t","max_robot_t","Modal","justifyContent","InfoIcon","getModalStyle","modalStyle","setOpen","PathRecorder","hasBeenRecordingLine","pointDistance","priorLatitude","priorLongitude","latRef","longRef","recorderId","haversineDistance","haversine","EN","northStart","eastStart","northEnd","eastEnd","lineDistance","divisions","floor","_NE2LL","_NE2LL2","newLatitude","newLongitude","lat1","lat2","long1","long2","latRadian1","latRadian2","longRadian1","deltaLat","deltaLong","_content","content","App","setForceRerender","id1","recordWhenRequested","Router","CssBaseline","ResetMicroControllerModal","AutoDownhill","TestDataReadyPopUp","TopBar","SideDrawer","Route","path","exact","Redirect","to","InitialSetup","ManualControl","RobotStatus","Path","PathFollowing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f976fcee.chunk.js","sourcesContent":["export const DRAWER_WIDTH = 185\nexport const OVERSEER_STATE_STRING: { [char: string]: string } = {\n  0: \"Initial\",\n  1: \"Manual\",\n  2: \"Auto\",\n  3: \"E-Stopped\",\n  // 4: \"Error\",\n  5: \"Stopped\",\n  6: \"Decending\",\n  7: \"Idle\",\n}\n\nexport const GNSS_FIX_TYPE: { [key: string]: string } = {\n  0: \"No Solution\",\n  1: \"Unknown\",\n  2: \"Single\",\n  3: \"PSRDIFF\",\n  4: \"SBAS\",\n  5: \"Omnister\",\n  6: \"RTK Float\",\n  7: \"RTK Integer\",\n}\n\nexport const MC_ERROR_WORD: { [key: string]: string } = {\n  0: \"None\",\n  1: \"SpeedDeviationError\",\n  2: \"FollowingError\",\n  4: \"OverVoltageError\",\n  8: \"UnderVoltageError\",\n  16: \"TempWarning\",\n  32: \"TempError\",\n  64: \"Encoder error\",\n  128: \"Int HW error\",\n  512: \"Current Measurement Error\",\n  2048: \"Com error\",\n  4096: \"Calc error\",\n  8192: \"Dynamic Limit\",\n  16384: \"Safety monitor error\",\n}\n","import { GuiState, RobotState, Senders } from \"./shared/interfaces\"\n\nexport default class Networking {\n  guiState: GuiState\n  robotState: RobotState\n  socket: WebSocket\n  senders: Senders\n  dataArrivalTime: number\n  intervalId1!: NodeJS.Timeout\n  intervalId2!: NodeJS.Timeout\n  receivedSharedPath: { timestamp: string; latitudes: Array<number>; longitudes: Array<number> }\n  pathToFollow: { latitudes: Array<number>; longitudes: Array<number> }\n  lastConnectedId: string\n  isConnectedOnce: boolean\n  isNewTestDataReady: boolean\n  testLogMessages: Array<string>\n  errorMessages: Array<string>\n\n  constructor(id: string, isConnectedOnce: boolean) {\n    if (isConnectedOnce) {\n      this.lastConnectedId = id\n      this.isConnectedOnce = true\n    } else {\n      this.lastConnectedId = \"\"\n      this.isConnectedOnce = false\n    }\n\n    this.guiState = {\n      isConnected: false,\n      id: id,\n    }\n\n    // robotState:\n    //   -should have the same keys as the received JSON message from robot\n    //   -JSON message is received continuosly at certain rate\n    this.robotState = {\n      type: \"robotState\",\n      robotVelocityCommand: {\n        v: 0,\n        w: 0,\n      },\n      robotTurningRadius: 0,\n      overseerState: 0,\n      websocketClientCount: 0,\n      doesBrakeWhenStopped: false,\n      robotTemperature: 0,\n      batteryTemperature: 0,\n      batteryVoltage: 0,\n      portentaHeartbeat: true,\n      tempErrorWord: 0,\n      motorControllers: {\n        leftFront: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        leftBack: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightFront: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightBack: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n      },\n      gps: {\n        status: -1,\n        latitude: 0,\n        longitude: 0,\n        northVelocity: 0,\n        eastVelocity: 0,\n        heading: 0,\n        num_satellites: 0,\n        diff_age: 0,\n      },\n      pathFollower: {\n        pathName: \"\",\n        scriptName: \"\",\n      },\n      targetVehicle: {\n        latitude: 0,\n        longitude: 0,\n        heading: 0,\n        velocity: 0,\n        gps_ready: false,\n        gps_correction_type: 0,\n      },\n      mechanicalBrake: {\n        hasBrake: false,\n        brakeStatus: 0,\n      },\n    }\n\n    // Here are the attributes that don't get updated continuously\n    this.receivedSharedPath = { timestamp: \"\", latitudes: [], longitudes: [] }\n    this.pathToFollow = { latitudes: [], longitudes: [] }\n    this.isNewTestDataReady = false\n    this.testLogMessages = []\n    this.errorMessages = []\n\n    // For disconnecting when no more incoming data\n    this.dataArrivalTime = 0\n\n    try {\n      if (id === \"localhost\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://localhost:9000\")\n      } else if (id === \"999\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://192.168.1.129:9000\")\n      } else {\n        this.socket = new WebSocket(\"ws://195.0.0.\" + id + \":9000\")\n      }\n    } catch (error) {\n      console.error(error)\n      this.socket = new WebSocket(\"ws://0.0.0.0\")\n    }\n\n    this.socket.onopen = (event) => {\n      this.guiState.isConnected = true\n      this.dataArrivalTime = Date.now()\n\n      this.lastConnectedId = this.guiState.id\n      this.isConnectedOnce = true\n\n      // disconnect if no messages are received for a period of time\n      this.intervalId1 = setInterval(() => {\n        if (Date.now() - this.dataArrivalTime > 4000) {\n          this.guiState.isConnected = false // needed when wifi gets disconnected\n          this.socket.close()\n        }\n      }, 250)\n\n      // send out heartbeat\n      this.intervalId2 = setInterval(() => {\n        this.senders.heartbeat()\n      }, 200)\n    }\n\n    this.socket.onmessage = (event) => {\n      this.dataArrivalTime = Date.now()\n\n      const data = JSON.parse(event.data)\n\n      if (data.type === \"robotState\") {\n        this.robotState = data\n      } else if (data.type === \"sharedPath\") {\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n\n        this.receivedSharedPath = {\n          timestamp: timestamp,\n          latitudes: data.latitudes,\n          longitudes: data.longitudes,\n        }\n      } else if (data.type === \"/path_follower/path_to_follow\") {\n        this.pathToFollow.latitudes = data.latitudes\n        this.pathToFollow.longitudes = data.longitudes\n      } else if (data.type === \"createdCSV\") {\n        this.isNewTestDataReady = true\n      } else if (data.type === \"commandMessage\") {\n        this.testLogMessages.push(data.commandMessage)\n      } else if (data.type === \"errorMessage\") {\n        // Attach a date to the error message\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n        this.errorMessages.push(timestamp)\n\n        // Attach the error messages to both test log and error log\n        const newline_separated = data.errorMessage.split(/\\r?\\n/)\n        for (const error_message of newline_separated) {\n          // \"2\" is Auto\n          if (this.robotState.overseerState === 2) {\n            this.testLogMessages.push(error_message)\n          }\n          this.errorMessages.push(error_message)\n        }\n      }\n    }\n\n    // the onclose callback will not run immediately when wifi gets disconnected\n    this.socket.onclose = (event) => {\n      this.guiState.isConnected = false\n      clearInterval(this.intervalId1)\n      clearInterval(this.intervalId2)\n    }\n\n    this.senders = {\n      joystick: (travel, angle) => {\n        const message = {\n          type: \"/joystick\",\n          travel: travel,\n          angle: angle,\n        }\n\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      spin: (angular_velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: 0,\n          theta: angular_velocity,\n        }\n\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      moveForward: (velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: velocity,\n          theta: 0,\n        }\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      stop: () => {\n        const message = {\n          type: \"/gui/stop_clicked\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      enableManaul: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/enable_manual_clicked\" }))\n        }\n      },\n\n      releaseMechanicalBrake: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/release_mechanical_brake_clicked\" }))\n        }\n      },\n\n      idle: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/idle_clicked\" }))\n        }\n      },\n\n      heartbeat: () => {\n        if (this.socket.readyState === WebSocket.OPEN) {\n          this.socket.send(JSON.stringify({ type: \"/gui/heartbeat\" }))\n        }\n      },\n\n      toggleBrakeWhenStopped: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/brake_when_stopped_toggled\" }))\n        }\n      },\n\n      setMagneticCalibration: (method) => {\n        const message = {\n          type: \"/an_device/magnetic_calibration/calibrate\",\n          method: method,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      sharePath: (latitudes, longitudes) => {\n        const message = {\n          type: \"sharedPath\",\n          latitudes: latitudes,\n          longitudes: longitudes,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      startPathFollowing: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/start_path_following_clicked\" }))\n        }\n      },\n\n      uploadPath: (filename, fileContent) => {\n        // return if file extension is not txt\n        if (filename.split(\".\")[1] !== \"txt\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_path_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      uploadScript: (filename, fileContent) => {\n        // return if file extension is not py\n        if (filename.split(\".\")[1] !== \"py\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_script_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      returnToStart: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/return_to_start_clicked\" }))\n        }\n      },\n\n      resetMicroController: () => {\n        const message = {\n          type: \"/gui/reset_micro_controller\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      }\n    }\n  }\n}\n","// abbreviations\n// lat: latitude\n// long: longitude\n// ref: reference\n// pos: position\n\nimport { RobotState } from \"./interfaces\"\n\nexport function hasErrors(robotState: RobotState) {\n  return (\n    (robotState.motorControllers.leftFront.errorWord !== 0 &&\n      robotState.motorControllers.leftFront.errorWord !== 64) ||\n    robotState.motorControllers.leftFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.leftBack.errorWord !== 0 &&\n      robotState.motorControllers.leftBack.errorWord !== 64) ||\n    robotState.motorControllers.leftBack.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightFront.errorWord !== 0 &&\n      robotState.motorControllers.rightFront.errorWord !== 64) ||\n    robotState.motorControllers.rightFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightBack.errorWord !== 0 &&\n      robotState.motorControllers.rightBack.errorWord !== 64) ||\n    robotState.motorControllers.rightBack.isHeartbeatTimeout ||\n    robotState.tempErrorWord !== 0\n  )\n}\n\nexport function EN_factors(lat_ref: number) {\n  const e = 0.0818191908426\n  const R = 6378137\n  const pi = Math.PI\n\n  const sin = Math.sin\n  const cos = Math.cos\n  const sqrt = Math.sqrt\n\n  const E_factor =\n    (((cos((lat_ref * pi) / 180) * R) / sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2)) * pi) / 180\n\n  const N_factor =\n    ((((1 - e ** 2) * R) /\n      ((1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2) * sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2))) *\n      pi) /\n    180\n  return [E_factor, N_factor]\n}\n\n// Latitude Longitude to North East\nexport function LL2NE(\n  latitude: number,\n  longitude: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const pos_east = (longitude - long_ref) * E_factor\n  const pos_north = (latitude - lat_ref) * N_factor\n  return [pos_north, pos_east]\n}\n\nexport function NE2LL(\n  pos_north: number,\n  pos_east: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const longitude = pos_east / E_factor + long_ref\n  const latitude = pos_north / N_factor + lat_ref\n  return [latitude, longitude]\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH } from \"../shared/constants\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Divider from \"@material-ui/core/Divider\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for pushing the SideDrawer below the TopBar\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  logo: {\n    paddingTop: 10,\n  },\n  list: {\n    padding: 0,\n  },\n  errorIcon: {\n    color: \"red\",\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  mobileOpen: boolean\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function Component({ networking, mobileOpen, setMobileOpen }: Props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const itemsLIst = [\n    {\n      text: \"Initial Setup\",\n      onClick: () => {\n        history.push(\"/initialsetup\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Manual Control\",\n      onClick: () => {\n        history.push(\"/manualcontrol\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Robot Status\",\n      onClick: () => {\n        history.push(\"/robotstatus\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: true,\n    },\n    {\n      text: \"Path\",\n      onClick: () => {\n        history.push(\"/path\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Path Following\",\n      onClick: () => {\n        history.push(\"/pathfollowing\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n  ]\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography variant=\"h4\" align=\"center\" color=\"primary\" className={classes.logo}>\n          STRIDE\n        </Typography>\n      </div>\n\n      <Divider />\n      <List className={classes.list}>\n        {itemsLIst.map((item) => {\n          const { text, onClick, canShowErrorIcon } = item\n          return (\n            <ListItem button key={text} onClick={onClick}>\n              <ListItemText primary={text} />\n              {canShowErrorIcon && hasErrors(networking.robotState) && networking.guiState.isConnected ? (\n                <Tooltip title=\"ERROR\">\n                  <ErrorOutlineIcon className={classes.errorIcon} />\n                </Tooltip>\n              ) : null}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav aria-label=\"mailbox folders\">\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={() => setMobileOpen(false)}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  )\n}\n","var _style, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBrakeIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.29\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.29\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".st0{fill-rule:evenodd;clip-rule:evenodd;}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M18.86,59.43l-4.25-1.19c-0.26,2.11-0.4,4.26-0.4,6.44c0,6.93,1.37,13.53,3.86,19.53v0.01 c2.59,6.24,6.38,11.86,11.09,16.56l0.01,0.01c4.7,4.71,10.32,8.5,16.56,11.09h0.01c6,2.49,12.6,3.86,19.53,3.86 c6.93,0,13.53-1.37,19.53-3.86c6.23-2.58,11.85-6.38,16.57-11.1h0.01c4.71-4.7,8.5-10.32,11.09-16.56V84.2 c2.49-6,3.86-12.6,3.86-19.53c0-6.93-1.37-13.53-3.86-19.53c-2.58-6.23-6.38-11.85-11.1-16.57v-0.01 c-4.7-4.71-10.32-8.5-16.56-11.09h-0.01c-4.19-1.74-8.67-2.93-13.36-3.49v5.62C46.4,19.6,25.3,36.45,18.86,59.43L18.86,59.43z M60.83,6.79c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1C56.74,8.63,58.57,6.79,60.83,6.79 L60.83,6.79z M13.43,42.53c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1 C9.33,44.36,11.17,42.53,13.43,42.53L13.43,42.53z M8.24,56.44L0,54.13C8.99,22.12,38.19,0,71.44,0v7.39 c5.56,0.59,10.89,1.98,15.87,4.04l0,0c7.05,2.92,13.39,7.2,18.69,12.51l0.01-0.01c5.3,5.3,9.58,11.65,12.51,18.72 c2.82,6.8,4.37,14.24,4.37,22.02c0,7.79-1.56,15.24-4.37,22.04l0,0c-2.92,7.05-7.2,13.39-12.51,18.69l0.01,0.01 c-5.3,5.3-11.65,9.58-18.72,12.51c-6.8,2.82-14.24,4.37-22.02,4.37c-7.79,0-15.24-1.56-22.04-4.37l0,0 c-7.05-2.92-13.39-7.2-18.69-12.5l-0.01-0.01c-5.3-5.3-9.58-11.64-12.5-18.69l0,0c-2.82-6.8-4.37-14.24-4.37-22.04 C7.65,61.88,7.85,59.13,8.24,56.44L8.24,56.44z M65.27,29.18c4.81,0,9.39,0.96,13.58,2.69c4.34,1.8,8.25,4.44,11.52,7.71 c3.27,3.27,5.91,7.18,7.71,11.53c1.73,4.18,2.69,8.77,2.69,13.57c0,4.81-0.96,9.39-2.69,13.58c-1.8,4.34-4.44,8.25-7.71,11.52 c-3.27,3.27-7.18,5.91-11.53,7.71c-4.18,1.73-8.77,2.69-13.57,2.69c-4.81,0-9.39-0.96-13.58-2.69c-4.34-1.8-8.25-4.44-11.52-7.71 c-3.27-3.27-5.91-7.18-7.71-11.53c-1.73-4.18-2.69-8.77-2.69-13.57c0-4.81,0.96-9.39,2.69-13.58c1.8-4.34,4.44-8.25,7.71-11.52 c3.27-3.27,7.18-5.91,11.53-7.71C55.88,30.14,60.46,29.18,65.27,29.18L65.27,29.18z M57.41,58.28c0.12-0.16,0.24-0.31,0.36-0.46 c0.18-0.22,0.38-0.43,0.59-0.64c0.49-0.48,1.02-0.91,1.6-1.29c0.49-0.32,1.01-0.59,1.55-0.82l0-18.27 c-3.02,0.4-5.88,1.28-8.52,2.56c-2.84,1.38-5.41,3.22-7.61,5.42c-1.21,1.21-2.31,2.52-3.28,3.93c-0.88,1.28-1.66,2.63-2.33,4.05 L57.41,58.28L57.41,58.28z M68.54,60.82c-0.42-0.42-0.93-0.77-1.5-1c-0.54-0.22-1.14-0.35-1.78-0.35c-0.63,0-1.23,0.12-1.78,0.35 c-0.56,0.23-1.07,0.57-1.5,1l-0.01,0.01c-0.43,0.43-0.77,0.93-1,1.5c-0.22,0.54-0.35,1.14-0.35,1.78c0,0.63,0.12,1.23,0.35,1.78 c0.23,0.57,0.57,1.07,1,1.5L62,67.38c0.42,0.43,0.93,0.77,1.5,1c0.54,0.22,1.14,0.35,1.78,0.35c0.63,0,1.23-0.12,1.78-0.35 c0.57-0.23,1.07-0.57,1.5-1l0.01-0.01c0.42-0.42,0.77-0.93,1-1.5c0.22-0.54,0.35-1.14,0.35-1.78c0-0.63-0.13-1.23-0.35-1.78 C69.31,61.76,68.96,61.25,68.54,60.82L68.54,60.82z M68.85,54.99c0.58,0.23,1.14,0.52,1.67,0.86c0.61,0.39,1.16,0.83,1.66,1.33 c0.16,0.16,0.33,0.34,0.49,0.53c0.1,0.12,0.2,0.24,0.29,0.36l17.99-4.82c-0.67-1.51-1.48-2.96-2.4-4.32 c-1.01-1.49-2.16-2.88-3.43-4.15c-2.23-2.23-4.83-4.08-7.69-5.47c-2.66-1.28-5.56-2.16-8.6-2.55V54.99L68.85,54.99z M75,65.15 c-0.08,0.69-0.22,1.37-0.43,2.01c-0.22,0.66-0.51,1.3-0.86,1.89l10.42,16.51l0.36-0.33c0.22-0.2,0.44-0.42,0.68-0.66 c2.59-2.59,4.68-5.69,6.11-9.13c1.37-3.31,2.13-6.95,2.13-10.76c0-0.81-0.03-1.62-0.1-2.41c-0.06-0.66-0.14-1.32-0.24-1.96 L75,65.15L75,65.15z M67.87,73.54c-0.37,0.1-0.75,0.18-1.13,0.24c-0.48,0.07-0.97,0.11-1.47,0.11c-0.44,0-0.88-0.03-1.32-0.09 c-0.34-0.05-0.68-0.11-1.01-0.19L52.89,89.95c1.84,0.9,3.78,1.61,5.81,2.09c2.1,0.5,4.3,0.77,6.57,0.77c2.35,0,4.62-0.29,6.8-0.83 c2.11-0.52,4.12-1.28,6.02-2.25L67.87,73.54L67.87,73.54z M56.96,69.27c-0.36-0.58-0.67-1.2-0.9-1.85 c-0.23-0.64-0.4-1.31-0.49-2.01l-18.01-5.64c-0.13,0.74-0.23,1.48-0.3,2.22c-0.08,0.87-0.13,1.77-0.13,2.68 c0,3.81,0.76,7.45,2.13,10.76c1.42,3.44,3.51,6.54,6.11,9.13c0.28,0.28,0.57,0.55,0.84,0.81l0.54,0.49L56.96,69.27L56.96,69.27z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrakeIcon);\nexport default __webpack_public_path__ + \"static/media/brake-icon.97838cea.svg\";\nexport { ForwardRef as ReactComponent };","import SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\"\nimport { ReactComponent as Logo } from \"./src/brake-icon.svg\"\n\nexport default function Component(props: SvgIconProps) {\n  return (\n    <div>\n      <SvgIcon {...props}>\n        <Logo />\n      </SvgIcon>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH, OVERSEER_STATE_STRING } from \"../shared/constants\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { green, red } from \"@material-ui/core/colors\"\nimport PathRecorder from \"../path-recorder\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  stop: {\n    marginLeft: theme.spacing(1.5),\n  },\n  start: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    marginLeft: theme.spacing(1.5),\n    \"&:hover\": {\n      background: \"darkgreen\",\n    },\n  },\n  connection: {\n    color: \"lightgray\",\n  },\n  state: {\n    marginLeft: theme.spacing(1.5),\n    color: \"lightgray\",\n  },\n  errorIcon: {\n    marginLeft: theme.spacing(1.5),\n    color: \"red\",\n  },\n  reconnect: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1.5),\n    fontSize: 30,\n  },\n  idle: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n  topBarTitle: string\n  pathRecorder: PathRecorder\n  handleRobotConnect: (id: string) => void\n}\n\nexport default function Component({\n  networking,\n  setMobileOpen,\n  topBarTitle,\n  pathRecorder,\n  handleRobotConnect,\n}: Props) {\n  const classes = useStyles()\n\n  const guiState = networking.guiState\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleStopButton() {\n    senders.stop()\n  }\n\n  function handleIdle() {\n    senders.idle()\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => setMobileOpen(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          {topBarTitle}\n        </Typography>\n\n        {pathRecorder.isRecording ? (\n          <Tooltip title=\"Recording\">\n            <FiberManualRecordIcon style={{ color: \"red\", marginRight: \"6px\" }} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected ? (\n          <>\n            <Hidden xsDown>\n              <Typography variant=\"body2\" className={classes.connection}>\n                {`ID: ${guiState.id}`}\n              </Typography>\n            </Hidden>\n\n            <Typography variant=\"body2\" className={classes.state}>\n              {OVERSEER_STATE_STRING[robotState.overseerState]}\n            </Typography>\n          </>\n        ) : (\n          <Typography variant=\"body2\" className={classes.connection}>\n            not connected\n          </Typography>\n        )}\n\n        {!guiState.isConnected && networking.lastConnectedId !== \"\" && (\n          <Button\n            className={classes.reconnect}\n            variant=\"contained\"\n            onClick={() => handleRobotConnect(\"useRecentId\")}\n          >\n            reconnect\n          </Button>\n        )}\n\n        {guiState.isConnected && hasErrors(robotState) ? (\n          <Tooltip title=\"ERROR\">\n            <ErrorOutlineIcon fontSize=\"large\" className={classes.errorIcon} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 2 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: green[500] }} />\n        )}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 3 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: red[500] }} />\n        )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 1 ||\n            robotState.overseerState === 2 ||\n            robotState.overseerState === 7 ||\n            robotState.overseerState === 4) && ( // if in manual, auto, idle, or return_to_start\n            <Button className={classes.stop} variant=\"contained\" color=\"secondary\" onClick={handleStopButton}>\n              stop\n            </Button>\n          )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 5 || robotState.overseerState === 6) && ( // if in stopped or decending\n            <Button className={classes.idle} variant=\"contained\" onClick={handleIdle}>\n              idle\n            </Button>\n          )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  status: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: \"15.5rem\",\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n}\n\nexport default function Component({ networking, handleRobotConnect, handleRobotDisconnect }: Props) {\n  const classes = useStyles()\n\n  const [id, setId] = useState(\"\")\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Robot Connection\n        </Typography>\n\n        <Typography variant=\"caption\" display=\"block\" className={classes.status}>\n          {networking.guiState.isConnected ? `connected (ID: ${networking.guiState.id})` : \"not connected\"}\n        </Typography>\n\n        <TextField\n          label=\"Robot ID\"\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => {\n            setId(e.target.value)\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleRobotConnect(id)\n            }\n          }}\n        />\n        <br />\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleRobotConnect(id)}\n        >\n          Connect\n        </Button>\n\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleRobotDisconnect()}\n        >\n          Disconnect\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport RobotConnectCard from \"../components/RobotConnectCard\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({\n  networking,\n  handleRobotConnect,\n  handleRobotDisconnect,\n  setTopBarTitle,\n}: Props) {\n  useEffect(() => {\n    setTopBarTitle(\"Initial Setup\")\n  }, [setTopBarTitle])\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n      <Grid item>\n        <RobotConnectCard\n          networking={networking}\n          handleRobotConnect={handleRobotConnect}\n          handleRobotDisconnect={handleRobotDisconnect}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\n// ws://192.168.1.129:9090\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    marginLeft: theme.spacing(1.5),\n    marginTop: theme.spacing(1.5),\n    boxShadow: \"3px 3px 5px rgba(0,0,0,0.2)\",\n    zIndex: 1,\n  },\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  pathSwitch: {\n    marginLeft: 0,\n  },\n}))\n\ninterface Props {\n  pathRecorder: PathRecorder\n  networking: Networking\n}\n\nexport default function Component({ pathRecorder, networking }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Typography variant=\"h6\" className={classes.title}>\n        Recording Path\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        GPS Status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <FormControlLabel\n        className={classes.pathSwitch}\n        control={\n          <Switch\n            checked={pathRecorder.isRecordingLine}\n            onChange={() => pathRecorder.toggleLineRecording()}\n            color=\"primary\"\n          />\n        }\n        label=\"Record a line\"\n      />\n    </Card>\n  )\n}\n","import React, { Component } from \"react\"\n\nimport ReactNipple from \"react-nipple\"\nimport \"react-nipple/lib/styles.css\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport PathRecorderPopUpCard from \"./PathRecorderPopUpCard\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\n// Abbreviations:\n// ICR = instantaneous center of rotation\n// v,V = linear velocity\n// w,W = angular velocity\n// r,R = turning radius of robot geometric center\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default class Joystick extends Component<Props> {\n  circleDiameter = 400 // pixels\n  sender_thottle_time = 100 //ms\n  previousTime = Date.now()\n\n  render() {\n    return (\n      <div>\n        <h3 style={{ marginTop: 0, marginBottom: 5 }}>Press and drag below to move the robot</h3>\n\n        <Tooltip title=\"Linear Velocity\">\n          <span style={{ fontSize: 16 }}>\n            v: {this.props.networking.robotState.robotVelocityCommand.v.toFixed(2)} m/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Heading\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            h: {((this.props.networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n          </span>\n        </Tooltip>\n\n        <br />\n        {this.props.pathRecorder.isRecording ? (\n          <PathRecorderPopUpCard pathRecorder={this.props.pathRecorder} networking={this.props.networking} />\n        ) : null}\n\n        <ReactNipple\n          className=\"nipple\"\n          options={{\n            mode: \"dynamic\",\n            color: \"blue\",\n            position: { top: \"50%\", left: \"50%\" },\n            size: this.circleDiameter,\n            nippleSize: 90,\n          }}\n          style={{\n            zIndex: 0,\n            outline: `1px dashed blue`,\n            width: \"100%\",\n            height: \"max( 100vh - 325px, 120px)\", // calc() not needed inside max()\n            // display: \"table\",\n            overflow: \"hidden\",\n          }}\n          onStart={this.handleJoystickStart}\n          onEnd={this.handleJoystickEnd}\n          onMove={this.handleJoystickMove}\n        />\n        {/* <DebugView data={this.state.data} /> */}\n      </div>\n    )\n  }\n\n  handleJoystickStart = (evt: any, data: any) => {}\n\n  handleJoystickEnd = (evt: any, data: any) => {\n    setTimeout(() => {\n      this.props.networking.senders.joystick(0, 0)\n    }, 100) // needed, otherwise the subscriber callback for /robot_velocity_command won't get triggered\n  }\n  handleJoystickMove = (evt: any, data: any) => {\n    if (Date.now() - this.previousTime < this.sender_thottle_time) {\n      return\n    }\n    this.previousTime = Date.now()\n\n    const travel = data.distance / (this.circleDiameter * 0.5)\n    const angle = data.angle.radian - Math.PI / 2 // the angle when pushing the joystick forwards is now 0\n\n    this.props.networking.senders.joystick(travel, angle)\n  }\n}\n","import React, { useEffect } from \"react\"\nimport Joystick from \"../components/Joystick\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\"\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\"\nimport Box from \"@material-ui/core/Box\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  controlBox: {\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n  moveButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateRightButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1),\n    marginTop: 5,\n    fontSize: 20,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\nlet isSpinning = false\nlet isMovingForward = false\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleManualSwitch(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.checked) {\n      senders.enableManaul()\n    } else {\n      senders.stop()\n    }\n  }\n\n  function handleBrakeWhenStoppedSwitch() {\n    senders.toggleBrakeWhenStopped()\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Manual Control\")\n  }, [setTopBarTitle])\n\n  return (\n    // WebkitUserSelect is used to prevent random text selection when using the joystick\n    <div style={{ WebkitUserSelect: \"none\" }}>\n      {robotState.mechanicalBrake.brakeStatus !== 0 && robotState.mechanicalBrake.brakeStatus !== 1 && robotState.overseerState !== 2 && (\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerUp={() => {\n            senders.releaseMechanicalBrake()\n          }}\n        >\n          Release Mechanical Brake <BrakeIcon className={classes.brakeIcon} />\n        </Button>\n      )}\n\n      <Box>\n        <FormControlLabel\n          control={\n            <Switch checked={robotState.overseerState === 1} onChange={handleManualSwitch} color=\"primary\" />\n          }\n          label=\"Enable Manual Control\"\n          disabled={\n            robotState.overseerState === 2 || robotState.overseerState === 3 || robotState.overseerState === 6\n          }\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={robotState.doesBrakeWhenStopped === true}\n              onChange={handleBrakeWhenStoppedSwitch}\n              color=\"primary\"\n            />\n          }\n          label=\"Hold Motors When Not Moving\"\n        />\n      </Box>\n\n      <Box className={classes.controlBox}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateLeftIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.rotateRightButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(-0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateRightIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.moveButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isMovingForward = true\n            senders.moveForward(0.75)\n          }}\n          onPointerUp={() => {\n            isMovingForward = false\n            senders.moveForward(0)\n          }}\n          onPointerOut={() => {\n            if (isMovingForward) {\n              senders.moveForward(0)\n            }\n          }}\n        >\n          move <ArrowUpwardIcon className={classes.rotateIcon} />\n        </Button>\n      </Box>\n\n      <Joystick networking={networking} pathRecorder={pathRecorder} />\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  errorIcon: {\n    // marginLeft: theme.spacing(1.5),\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          General\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GUI Version: 1.3.1 \n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Voltage: {robotState.batteryVoltage.toFixed(2)}V\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Temperature: {robotState.batteryTemperature}F{\" \"}\n          {robotState.batteryTemperature >= 140 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Robot Internal Temperature: {robotState.robotTemperature}F{\" \"}\n          {robotState.robotTemperature >= 140 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Clients Connected to Robot: {robotState.websocketClientCount}\n        </Typography>\n\n      </CardContent>\n    </Card>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  if(robotState.gps.diff_age > 60000) {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            GPS\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Latitdue (deg): {robotState.gps.latitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Longitude (deg): {robotState.gps.longitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n          </Typography>\n          \n          <Typography variant=\"body1\" className={classes.body}>\n            Longitudinal Velocity (m/s): {\"\"}\n            {((robotState.gps.northVelocity * Math.cos(robotState.gps.heading * Math.PI/180)) + (robotState.gps.eastVelocity * Math.sin(robotState.gps.heading * Math.PI/180))).toFixed(2)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Number of Satellites: {robotState.gps.num_satellites}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Differential Age (ms): N/A\n          </Typography>\n\n        </CardContent>\n      </Card>\n    )\n}\n  else {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            GPS\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Latitdue (deg): {robotState.gps.latitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Longitude (deg): {robotState.gps.longitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n          </Typography>\n          \n          <Typography variant=\"body1\" className={classes.body}>\n            Longitudinal Velocity (m/s): {\"\"}\n            {((robotState.gps.northVelocity * Math.cos(robotState.gps.heading * Math.PI/180)) + (robotState.gps.eastVelocity * Math.sin(robotState.gps.heading * Math.PI/180))).toFixed(2)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Number of Satellites: {robotState.gps.num_satellites}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Differential Age (ms): {robotState.gps.diff_age}\n          </Typography>\n\n        </CardContent>\n      </Card>\n    )\n  }\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  \n  if (robotState.mechanicalBrake.hasBrake) {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Mechanical Brake\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Has Brake: {robotState.mechanicalBrake.hasBrake.toString()}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Brake Status: {robotState.mechanicalBrake.brakeStatus}\n          </Typography>\n\n        </CardContent>\n      </Card>\n    )\n  }\n  else {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Mechanical Brake\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Has Brake: {robotState.mechanicalBrake.hasBrake.toString()}\n          </Typography>\n          \n        </CardContent>\n      </Card>\n    )\n  }\n\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { MotorController } from \"../shared/interfaces\"\nimport { MC_ERROR_WORD } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  errorIcon: {\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\ninterface Props {\n  motorController: MotorController\n  id: number\n  location: string\n}\n\nexport default function Component({ motorController, id, location }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Motor Controller {id}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Error: {MC_ERROR_WORD[motorController.errorWord]}{\" \"}\n          {motorController.errorWord !== 0 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heartbeat Timeout: {motorController.isHeartbeatTimeout.toString()}{\" \"}\n          {motorController.isHeartbeatTimeout ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Winding Temperature (F): {motorController.windingTemperature.toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","// import React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  copyButton: {\n    paddingTop: 0,\n    marginLeft: theme.spacing(0.5),\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          Subject Vehicle\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitude (deg): {robotState.targetVehicle.latitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.targetVehicle.longitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {robotState.targetVehicle.heading.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Velocity (m/s): {robotState.targetVehicle.velocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Ready: {robotState.targetVehicle.gps_ready.toString()}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Correction Type: {robotState.targetVehicle.gps_correction_type}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport GeneralCard from \"../components/GeneralCard\"\nimport GpsCard from \"../components/GpsCard\"\nimport MechanicalBrakeCard from \"../components/MechanicalBrakeCard\"\nimport MotorControllerCard from \"../components/MotorControllerCard\"\nimport SubjectVehicleCard from \"../components/SubjectVehicleCard\"\nimport Networking from \"../networking\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({ networking, setTopBarTitle }: Props) {\n  const robotState = networking.robotState\n\n  useEffect(() => {\n    setTopBarTitle(\"Robot Status\")\n  }, [setTopBarTitle])\n  return (\n    <div>\n      <Grid container spacing={2} alignItems=\"flex-start\">\n        <Grid item>\n          <GeneralCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <GpsCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftFront}\n            id={1}\n            location=\"left_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftBack}\n            id={2}\n            location=\"left_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightFront}\n            id={3}\n            location=\"right_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightBack}\n            id={4}\n            location=\"right_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MechanicalBrakeCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <SubjectVehicleCard robotState={robotState} />\n        </Grid>\n      </Grid>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Error Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.errorMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../../path-recorder\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default function Component({ networking, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [snackOpen, setSnackOpen] = useState(false)\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < pathRecorder.numberOfPoints; i++) {\n      pathString = pathString.concat(\n        pathRecorder.latitudes[i].toFixed(17).toString(),\n        \" \",\n        pathRecorder.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\n          <li>The GPS cordinates of the robot can be recorded here.</li>\n          <li>Move the robot to create a path when recording starts.</li>\n          <li>Tips for recording:</li>\n          <ul>\n            <li>Since speed is not recorded, move robot slowly to accurately capture path.</li>\n            <li>\n              You may record path that has sharp corners. Robot can be programmed later to stop at the corner\n              and rotate to the specified heading before moving again.\n            </li>\n          </ul>\n        </ul>\n      </Typography>\n      <Divider />\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Status: {pathRecorder.isRecording ? \"Recording...\" : \"Not Recording\"}\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.requestRecording()\n        }}\n      >\n        record\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.stopRecording()\n        }}\n      >\n        stop\n      </Button>\n\n      <br />\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n\n      <br />\n\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={8000}\n        onClose={() => {\n          setSnackOpen(false)\n        }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Go to the SHARED tab above in another connected device.\n        </MuiAlert>\n      </Snackbar>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          setSnackOpen(true)\n          networking.senders.sharePath(pathRecorder.latitudes, pathRecorder.longitudes)\n        }}\n      >\n        share with other devices\n      </Button>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { EN_factors, LL2NE} from \"../../shared/utilities\"\nimport PathRecorder from \"../../path-recorder\"\n\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 90vh))\",\n  paddingTop: \"calc((min(100%, 90vh)) - 15px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathViewer {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n  }\n\n  importFromRecorder(latitudes: number[], longitudes: number[], chartRef: React.MutableRefObject<any>) {\n    this.latitudes = latitudes\n    this.longitudes = longitudes\n\n    this.easts = []\n    this.norths = []\n\n    const [E_factor, N_factor] = EN_factors(latitudes[0])\n    this.E_factor = E_factor\n    this.N_factor = N_factor\n\n    this.lat_ref = latitudes[0]\n    this.long_ref = longitudes[0]\n\n    for (let i = 0; i < latitudes.length; i++) {\n      const [pos_north, pos_east] = LL2NE(\n        latitudes[i],\n        longitudes[i],\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      this.easts.push(pos_east)\n      this.norths.push(pos_north)\n    }\n\n    chartRef.current.data = this.createChartData()\n  }\n\n  isNumeric(str: string) {\n    return (\n      !isNaN(Number(str)) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n      !isNaN(parseFloat(str))\n    ) // ...and ensure strings of whitespace fail\n  }\n\n  importFromFile(importFileRef: React.MutableRefObject<any>, chartRef: React.MutableRefObject<any>) {\n    this.easts = []\n    this.norths = []\n    this.latitudes = []\n    this.longitudes = []\n\n    const file = importFileRef.current.files[0]\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const text = event.target.result\n      const splitText = text.split(\"\\n\")\n\n      let lineNumber = 1\n      for (const line of splitText) {\n        // omit the first line in file\n        if (lineNumber === 1) {\n          lineNumber++\n          continue\n        }\n\n        const latLong = line.split(/ |\\t/)\n        if (latLong.length === 2) {\n          if (this.isNumeric(latLong[0]) && this.isNumeric(latLong[1])) {\n            this.latitudes.push(Number(latLong[0]))\n            this.longitudes.push(Number(latLong[1]))\n          }\n        }\n      }\n\n      const [E_factor, N_factor] = EN_factors(this.latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = this.latitudes[0]\n      this.long_ref = this.longitudes[0]\n\n      for (let i = 0; i < this.latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          this.latitudes[i],\n          this.longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      importFileRef.current.value = \"\" // this is needed for importing the same file that has been saved over\n\n      chartRef.current.data = this.createChartData()\n    })\n    reader.readAsText(file)\n  }\n\n  createChartData() {\n    const chartData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      chartData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return chartData\n  }\n\n  twoPointDistance(x1: number, y1: number, x2: number, y2: number) {\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n  }\n\n  // spacing is in meters\n  correctPointSpacing(desiredSpacing: number) {\n    // const s = desiredSpacing\n    // const newEasts = [this.easts[0]]\n    // const newNorths = [this.norths[0]]\n    // let Cx = newEasts[0]\n    // let Cy = newNorths[0]\n    // let Tx = 0\n    // let Ty = 0\n    // let i = 1\n    // let g = this.twoPointDistance(Cx, Cy, this.easts[1], this.norths[1])\n    // const totalPoints = pathViewer.easts.length\n    // while (i <= totalPoints) {\n    //   if (g > s) {\n    //     while (g > s) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //       newEasts.push(Tx)\n    //       newNorths.push(Ty)\n    //       Cx = Tx\n    //       Cy = Ty\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   } else if (g < s) {\n    //     while (g < s) {\n    //       i += 1\n    //       g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //     }\n    //   }\n    //   if (g === s) {\n    //     // ????\n    //   }\n    //   Cx = newEasts[newEasts.length - 1]\n    //   Cy = newNorths[newNorths.length - 1]\n    //   g = this.twoPointDistance(Cx, Cy, this.easts[i], this.norths[i])\n    //   if (g > s) {\n    //     if (k = i -1) {\n    //       Tx = Cx + s/g * (this.easts[i] - Cx)\n    //       Ty = Cy + s/g * (this.norths[i] - Cy)\n    //     } else {\n    //       k = i - 1\n    //     }\n    //   }\n    //   if (distance >= desiredSpacing) {\n    //     const newEast = newEasts[newEasts.length - 1] + (tail / distance) * (this.easts[i + 1] - this.easts[i])\n    //     const newNorth = this.norths[i] + (tail / distance) * (this.norths[i + 1] - this.norths[i])\n    // }\n  }\n}\n\ninterface Props {\n  pathRecorder: PathRecorder\n}\n\nconst pathViewer = new PathViewer()\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nexport default function Component({ pathRecorder }: Props) {\n  const classes = useStyles()\n  const importFileRef: React.MutableRefObject<any> = useRef()\n\n  // XY Chart\n  const chartRef: React.MutableRefObject<any> = useRef()\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    chart.data = pathViewer.createChartData()\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.3\n    xAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.3\n    yAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create series\n    let series1 = chart.series.push(new am4charts.LineSeries())\n    series1.dataFields.valueX = \"ax\"\n    series1.dataFields.valueY = \"ay\"\n    series1.dataFields.value = \"aValue\"\n    series1.strokeWidth = 2\n\n    let bullet1 = series1.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    //scrollbars\n    chart.scrollbarX = new am4core.Scrollbar()\n    chart.scrollbarY = new am4core.Scrollbar()\n\n    chartRef.current = chart\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathViewer.importFromRecorder(pathRecorder.latitudes, pathRecorder.longitudes, chartRef)\n        }}\n      >\n        import from recorder\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        import from file\n        <input\n          type=\"file\"\n          ref={importFileRef}\n          onChange={() => pathViewer.importFromFile(importFileRef, chartRef)}\n          hidden\n        />\n      </Button>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const sharedPath = networking.receivedSharedPath\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < sharedPath.latitudes.length; i++) {\n      pathString = pathString.concat(\n        sharedPath.latitudes[i].toFixed(17).toString(),\n        \" \",\n        sharedPath.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    saveAs(blob, \"stride_path.txt\")\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Shared path from another device will appear here.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Time Received: {sharedPath.timestamp} <br />\n        Number of Points: {sharedPath.latitudes.length}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorderTab from \"../components/path/PathRecoderTab\"\nimport PathViewingTab from \"../components/path/PathViewingTab\"\nimport SharedPathTab from \"../components/path/SharedPathTab\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path\")\n  }, [setTopBarTitle])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"Record\" className={classes.tab} />\n          <Tab label=\"View\" className={classes.tab} />\n          <Tab label=\"Shared\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PathRecorderTab networking={networking} pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PathViewingTab pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <SharedPathTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useRef } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  snackbar: {\n    opacity: 0.9,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const uploadPathRef: React.MutableRefObject<any> = useRef()\n  const uploadScriptRef: React.MutableRefObject<any> = useRef()\n\n  const [wrongExtensionSnackbarOpen, setWrongExtensionSnackbarOpen] = useState(false)\n\n  function uploadPath() {\n    const file = uploadPathRef.current.files[0]\n    uploadPathRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"txt\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadPath(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  function uploadScript() {\n    const file = uploadScriptRef.current.files[0]\n    uploadScriptRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"py\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadScript(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Note that the robot only stores the most recently uploaded path and script files.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Path (.txt file): {networking.robotState.pathFollower.pathName} <br />\n        Script (.py file): {networking.robotState.pathFollower.scriptName}\n      </Typography>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload path\n        <input\n          type=\"file\"\n          ref={uploadPathRef}\n          onChange={() => {\n            uploadPath()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload script\n        <input\n          type=\"file\"\n          ref={uploadScriptRef}\n          onChange={() => {\n            uploadScript()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Snackbar\n        className={classes.snackbar}\n        open={wrongExtensionSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setWrongExtensionSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Incorrect file extension\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { EN_factors, LL2NE } from \"../../shared/utilities\"\nimport { GNSS_FIX_TYPE } from \"../../shared/constants\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 70vh))\",\n  paddingTop: \"calc((min(100%, 70vh)) - 0px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathDisplay {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n  robot_east: number\n  robot_north: number\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n    this.robot_east = 0\n    this.robot_north = 0\n  }\n\n  plotPathSeries(\n    latitudes: number[],\n    longitudes: number[],\n    pathSeriesRef: React.MutableRefObject<any>,\n    xAxisRef: React.MutableRefObject<any>,\n    yAxisRef: React.MutableRefObject<any>,\n    forceRun: boolean\n  ) {\n    if (forceRun === true || (this.latitudes !== latitudes && pathSeriesRef.current !== undefined)) {\n      this.latitudes = latitudes\n      this.longitudes = longitudes\n\n      this.easts = []\n      this.norths = []\n\n      const [E_factor, N_factor] = EN_factors(latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = latitudes[0]\n      this.long_ref = longitudes[0]\n\n      for (let i = 0; i < latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          latitudes[i],\n          longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      const eastMin = Math.min(...this.easts)\n      const eastMax = Math.max(...this.easts)\n      const northMin = Math.min(...this.norths)\n      const northMax = Math.max(...this.norths)\n\n      const axisLength = Math.max(eastMax - eastMin, northMax - northMin)\n\n      xAxisRef.current.min = eastMin - 3\n      xAxisRef.current.max = eastMin + axisLength + 3\n      yAxisRef.current.min = northMin - 3\n      yAxisRef.current.max = northMin + axisLength + 3\n\n      pathSeriesRef.current.data = this.createPathSeriesData()\n    }\n  }\n\n  plotRobotSeries(\n    latitude: number,\n    longitude: number,\n    headingRadian: number,\n    robotSeriesRef: React.MutableRefObject<any>\n  ) {\n    if (robotSeriesRef.current !== undefined) {\n      const [pos_north, pos_east] = LL2NE(\n        latitude,\n        longitude,\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      robotSeriesRef.current.addData(\n        { bx: pos_east, by: pos_north, angle: (headingRadian / Math.PI) * 180 },\n        1\n      )\n\n      // For displaying the numerical values of robot location\n      this.robot_east = pos_east\n      this.robot_north = pos_north\n    }\n  }\n\n  createPathSeriesData() {\n    const pathSeriesData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      pathSeriesData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return pathSeriesData\n  }\n}\n\nconst pathDisplay = new PathDisplay()\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(1),\n    fontSize: 11,\n  },\n  messageBox: {\n    maxHeight: 10,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const downloadTestData = () => {\n    const link = document.createElement(\"a\")\n    link.href = `http://195.0.0.${networking.guiState.id}:3001/test-data.csv`\n    link.click()\n  }\n\n  const pathSeriesRef: React.MutableRefObject<any> = useRef()\n  const robotSeriesRef: React.MutableRefObject<any> = useRef()\n  const xAxisRef: React.MutableRefObject<any> = useRef()\n  const yAxisRef: React.MutableRefObject<any> = useRef()\n\n  pathDisplay.plotPathSeries(\n    networking.pathToFollow.latitudes,\n    networking.pathToFollow.longitudes,\n    pathSeriesRef,\n    xAxisRef,\n    yAxisRef,\n    false\n  )\n\n  pathDisplay.plotRobotSeries(\n    networking.robotState.gps.latitude,\n    networking.robotState.gps.longitude,\n    networking.robotState.gps.heading,\n    robotSeriesRef\n  )\n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.5\n    xAxis.renderer.baseGrid.strokeWidth = 1\n    xAxis.strictMinMax = true\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.renderer.minGridDistance = 40\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.5\n    yAxis.renderer.baseGrid.strokeWidth = 1\n    yAxis.strictMinMax = true\n\n    // Path series\n    let pathSeries = chart.series.push(new am4charts.LineSeries())\n    pathSeries.dataFields.valueX = \"ax\"\n    pathSeries.dataFields.valueY = \"ay\"\n    pathSeries.dataFields.value = \"aValue\"\n    pathSeries.strokeWidth = 2\n\n    let bullet1 = pathSeries.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    // Robot series\n    let robotSeries = chart.series.push(new am4charts.LineSeries())\n    robotSeries.dataFields.valueX = \"bx\"\n    robotSeries.dataFields.valueY = \"by\"\n    robotSeries.strokeWidth = 2\n    robotSeries.stroke = am4core.color(\"#ff0000\")\n\n    // It must be initialized with two data points to prevent blinking\n    robotSeries.data = [\n      { bx: 0, by: 0, angle: 0 },\n      { bx: 0, by: 0, angle: 0 },\n    ]\n\n    let bullet2 = robotSeries.bullets.push(new am4charts.Bullet())\n    bullet2.propertyFields.rotation = \"angle\"\n\n    // Add a triangle to act as am arrow\n    let arrow = bullet2.createChild(am4core.Triangle)\n    arrow.horizontalCenter = \"middle\"\n    arrow.verticalCenter = \"middle\"\n    arrow.direction = \"top\"\n    arrow.width = 10\n    arrow.height = 25\n    arrow.fill = am4core.color(\"#ffffff00\")\n    arrow.strokeWidth = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    pathSeriesRef.current = pathSeries\n    robotSeriesRef.current = robotSeries\n    xAxisRef.current = xAxis\n    yAxisRef.current = yAxis\n\n    pathDisplay.plotPathSeries(\n      networking.pathToFollow.latitudes,\n      networking.pathToFollow.longitudes,\n      pathSeriesRef,\n      xAxisRef,\n      yAxisRef,\n      true\n    )\n\n    return () => {\n      chart.dispose()\n    }\n  }, [networking])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.startPathFollowing()\n        }}\n      >\n        start test\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.returnToStart()\n        }}\n      >\n        return to start position\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          downloadTestData()\n        }}\n      >\n        download test data\n      </Button>\n\n      <Typography variant=\"body2\" className={classes.body}>\n        GPS status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Robot Location: ({pathDisplay.robot_east.toFixed(2)}, {pathDisplay.robot_north.toFixed(2)})\n        <br />\n        Heading: {((networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n        <br />\n        Speed:{\" \"}\n        {Math.sqrt(\n          networking.robotState.gps.eastVelocity ** 2 + networking.robotState.gps.northVelocity ** 2\n        ).toFixed(2)}{\" \"}\n        m/s\n      </Typography>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Test Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.testLogMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport PrepareTab from \"../components/path_following/PrepareTab\"\nimport TestTab from \"../components/path_following/TestTab\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path Following\")\n  }, [setTopBarTitle])\n\n  return (\n    // <Grid container spacing={2} alignItems=\"flex-start\">\n    //   <Grid item>\n    //     <PathRecorderCard robotState={robotState} pathRecorder={pathRecorder} />\n    //   </Grid>\n    // </Grid>\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"prepare\" className={classes.tab} />\n          <Tab label=\"test\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PrepareTab networking={networking} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TestTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  TempInfoButton: {\n    paddingBottom: 1,\n    paddingTop: 0,\n    marginLeft: theme.spacing(1),\n    color: \"white\",\n  },\n  TempInfoCard: {\n    width: 400,\n  },\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [maxMotorTemp, setMaxMotorTemp] = useState(0)\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [maxRobotTemp, setMaxRobotTemp] = useState(0)\n\n  // handleMotorTemperature()\n  useEffect(() => {\n    const motor_temp_threshold = 185 //temp thresholds for motors/robot to open snackbar (needs repeated later for to specify popup)\n    const robot_temp_threshold = 140\n\n    const mcs = networking.robotState.motorControllers\n    const robot = networking.robotState\n    const max_t = Math.max(\n      mcs.leftBack.windingTemperature,\n      mcs.leftFront.windingTemperature,\n      mcs.rightBack.windingTemperature,\n      mcs.rightFront.windingTemperature\n    )\n    \n    const max_robot_t = Math.max(\n      robot.batteryTemperature,\n      robot.robotTemperature\n    )\n\n    setMaxMotorTemp(max_t)\n    setMaxRobotTemp(max_robot_t)\n\n    if (max_t > motor_temp_threshold || max_robot_t > robot_temp_threshold) {\n      setSnackbarOpen(true)\n      } else {\n      setSnackbarOpen(false)\n      }\n  }, [networking.robotState])\n\n  // Temp thresholds constants (repeat of useEffect constants from above)\n  const motor_threshold_temp = 185\n  const robot_threshold_temp = 140\n\n  // If statements for different snackbar popups/dialogue\n  if (maxMotorTemp > motor_threshold_temp && maxRobotTemp > robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n              •Both the motor winding temperature and robot/battery temperature are approaching temperature thresholds. <br/>\n              •Upon the robot/battery temperature reaching the temperature threshold, robot operation will be disabled. <br/>\n              •Upon the motor winding temperature reaching its threshold, STRIDE will enter descender mode if it is on a hill, \n              unless E-stopped, where it will hold until some more critical temperature threshold is reached. <br/>\n              •Avoid leaving the STRIDE E-stopped on a hill whenever possible. <br/>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n        \n        <Snackbar className={classes.snackbar} open={snackbarOpen}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Motor Temp: {maxMotorTemp} / 185F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n            <br/> Robot Temp: {maxRobotTemp} / 160F <br/>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n  else if (maxMotorTemp > motor_threshold_temp && maxRobotTemp <= robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n              •Upon the motor winding temperature reaching its threshold, STRIDE will enter descender mode if it is on a hill, \n              unless E-stopped, where it will hold until some more critical temperature threshold is reached. <br/>\n              •Avoid leaving the STRIDE E-stopped on a hill whenever possible. <br/> \n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n        \n        <Snackbar className={classes.snackbar} open={snackbarOpen} anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Motor Temp: {maxMotorTemp} / 185F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n\n  else if (maxMotorTemp <= motor_threshold_temp && maxRobotTemp > robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n                Upon the robot/battery temperature reaching the temperature threshold, robot operation will be disabled. <br/>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n\n        <Snackbar className={classes.snackbar} open={snackbarOpen} anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Robot Temp: {maxRobotTemp} / 160F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n\nelse {\n  return null\n}\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n  useEffect(() => {\n    if (networking.isNewTestDataReady === true) {\n      setSnackbarOpen(true)\n      networking.isNewTestDataReady = false\n    }\n  }, [setSnackbarOpen, networking, networking.isNewTestDataReady])\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.snackbar}\n        open={snackbarOpen}\n        autoHideDuration={5000}\n        onClose={() => {\n          setSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Test Data Ready for Download\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Modal from \"@material-ui/core/Modal\"\n\nimport Networking from \"../networking\"\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nexport default function Component({ networking }: { networking: Networking }) {\n  const classes = useStyles()\n  const [modalStyle] = React.useState(getModalStyle)\n  const [open, setOpen] = useState(false)\n\n  // function reset() {\n  //   networking.senders.resetMicroController()\n  // }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h3>The micro-controller requires a reset. Please move robot to flat ground and press the reset button.</h3>\n    </div>\n  )\n\n  useEffect(() => {\n    setOpen(!networking.robotState.portentaHeartbeat)\n  },[networking.robotState.portentaHeartbeat])\n\n  return (\n    <div>\n      <Modal open={open}>{body}</Modal>\n    </div>\n  )\n}\n","// abbreviations:\n// refLat: reference latitude\n// refLong: reference longitude\n// EN: East North\n\nimport { EN_factors, LL2NE, NE2LL } from \"./shared/utilities\"\n\nexport default class PathRecorder {\n  isRecording: boolean\n  isRecordingLine: boolean\n  hasBeenRecordingLine: boolean\n  pointDistance: number\n  latitudes: number[]\n  longitudes: number[]\n  priorLatitude: number\n  priorLongitude: number\n  latRef: number\n  longRef: number\n  E_factor: number\n  N_factor: number\n  recorderId: number\n  numberOfPoints: number\n\n  constructor() {\n    this.isRecording = false\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.pointDistance = 0.3 // meters\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.latRef = -1\n    this.longRef = -1\n    this.E_factor = 0\n    this.N_factor = 0\n    this.recorderId = 0\n    this.numberOfPoints = 0\n  }\n\n  requestRecording() {\n    this.isRecording = true\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.numberOfPoints = 0\n  }\n\n  stopRecording() {\n    this.isRecording = false\n    this.isRecordingLine = false\n\n    //DO NOT ADD THIS HERE: this.hasBeenRecordingLine = false\n  }\n\n  toggleLineRecording() {\n    this.isRecordingLine = !this.isRecordingLine\n  }\n\n  recordWhenRequested(latitude: number, longitude: number) {\n    if (this.isRecording) {\n      const haversineDistance = this.haversine(this.priorLatitude, latitude, this.priorLongitude, longitude)\n\n      if (this.priorLatitude === -1 || this.priorLongitude === -1) {\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.latRef = latitude\n        this.longRef = longitude\n\n        const EN = EN_factors(this.latRef)\n        this.E_factor = EN[0]\n        this.N_factor = EN[1]\n      } else if (this.isRecordingLine) {\n        this.hasBeenRecordingLine = true\n      } else if (this.hasBeenRecordingLine) {\n        this.hasBeenRecordingLine = false\n        const [northStart, eastStart] = LL2NE(\n          this.priorLatitude,\n          this.priorLongitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const [northEnd, eastEnd] = LL2NE(\n          latitude,\n          longitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const lineDistance = ((northStart - northEnd) ** 2 + (eastStart - eastEnd) ** 2) ** 0.5\n        const divisions = Math.floor(lineDistance / this.pointDistance)\n\n        // good that the FOR loop won't run if divisions is < 1\n        for (let i = 1; i <= divisions; i++) {\n          const newNorth = northStart + (i / divisions) * (northEnd - northStart)\n          const newEast = eastStart + (i / divisions) * (eastEnd - eastStart)\n          const [newLatitude, newLongitude] = NE2LL(\n            newNorth,\n            newEast,\n            this.latRef,\n            this.longRef,\n            this.E_factor,\n            this.N_factor\n          )\n          this.latitudes.push(newLatitude)\n          this.longitudes.push(newLongitude)\n          this.numberOfPoints += 1\n\n          this.priorLatitude = newLatitude\n          this.priorLongitude = newLongitude\n        }\n      } else if (haversineDistance > this.pointDistance) {\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n      }\n    }\n  }\n\n  // transformToRobotCenter(latRadian2: number, longRadian2: number, headingRadian: number) {\n  //   const R = 6371008 // Earth mean radisu in meters\n  //   const r = R * Math.cos(latRadian2) // radius of the earth circular slice at latitude2 in meters\n  //   const d = 0.2736 // distance between gps and robot center in meters\n  //   const theta = 0.11 // the radian angle between the gps and the robot center\n\n  //   const latRadian1 = (R * latRadian2 - d * Math.cos(headingRadian + theta)) / R\n  //   const longRadian1 = (r * longRadian2 - d * Math.sin(headingRadian + theta)) / r\n\n  //   const latCentered = (latRadian1 / Math.PI) * 180\n  //   const longCentered = (longRadian1 / Math.PI) * 180\n\n  //   return [latCentered, longCentered]\n  // }\n\n  // Haversine Distance in meters between two latlong points\n  haversine(lat1: number, lat2: number, long1: number, long2: number) {\n    const latRadian1 = (lat1 / 180) * Math.PI\n    const latRadian2 = (lat2 / 180) * Math.PI\n    const longRadian1 = (long1 / 180) * Math.PI\n    const longRadian2 = (long2 / 180) * Math.PI\n\n    const R = 6371008 // Earth mean radisu in meters\n    const deltaLat = latRadian2 - latRadian1\n    const deltaLong = longRadian2 - longRadian1\n\n    // Small angle approximation is used\n    const distance =\n      R * Math.sqrt(deltaLat ** 2 + Math.cos(latRadian1) * Math.cos(latRadian2) * deltaLong ** 2)\n\n    return distance // in meters\n  }\n}\n","import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { DRAWER_WIDTH } from \"./shared/constants\"\n\nimport Networking from \"./networking\"\n\nimport SideDrawer from \"./components/SideDrawer\"\nimport TopBar from \"./components/TopBar\"\nimport InitialSetup from \"./pages/InitialSetup\"\nimport ManualControl from \"./pages/ManualControl\"\nimport RobotStatus from \"./pages/RobotStatus\"\nimport Path from \"./pages/Path\"\nimport PathFollowing from \"./pages/PathFollowing\"\nimport AutoDownhill from \"./components/AutoDownhill\"\nimport TestDataReadyPopUp from \"./components/TestDataReadyPopUp\"\nimport ResetMicroControllerModal from \"./components/ResetMicroControllerModal\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PathRecorder from \"./path-recorder\"\n\nlet networking = new Networking(\"\", false)\n\nconst pathRecorder = new PathRecorder() // initialized in App.tsx because components like TopBar needs its data\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for content to be below app bar\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n    padding: theme.spacing(3),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n\n  const [, setForceRerender] = useState({})\n  const [topBarTitle, setTopBarTitle] = useState(\"\")\n  const [mobileOpen, setMobileOpen] = useState(false) // open status of the side menu in mobile screen\n\n  function handleRobotConnect(id: string) {\n    if (id === \"useRecentId\") {\n      networking.socket.close()\n      networking = new Networking(networking.lastConnectedId, networking.isConnectedOnce)\n    } else {\n      networking.socket.close()\n      networking = new Networking(id, false)\n    }\n  }\n  function handleRobotDisconnect() {\n    networking.socket.close()\n  }\n\n  useEffect(() => {\n    const id1 = setInterval(() => {\n      setForceRerender({})\n\n      // record path when requested\n      const latitude = networking.robotState.gps.latitude\n      const longitude = networking.robotState.gps.longitude\n      pathRecorder.recordWhenRequested(latitude, longitude)\n    }, 100)\n\n    return () => {\n      clearInterval(id1)\n    }\n  }, [])\n\n  // console.log(\"rendered\")\n\n  return (\n    <Router>\n      <CssBaseline />\n      <ResetMicroControllerModal networking={networking} />\n      <AutoDownhill networking={networking} />\n      <TestDataReadyPopUp networking={networking} />\n      <TopBar\n        networking={networking}\n        setMobileOpen={setMobileOpen}\n        topBarTitle={topBarTitle}\n        pathRecorder={pathRecorder}\n        handleRobotConnect={handleRobotConnect}\n      />\n      <SideDrawer networking={networking} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/initialsetup\" />\n          </Route>\n\n          <Route path=\"/initialsetup\">\n            <InitialSetup\n              networking={networking}\n              handleRobotConnect={handleRobotConnect}\n              handleRobotDisconnect={handleRobotDisconnect}\n              setTopBarTitle={setTopBarTitle}\n            />\n          </Route>\n\n          <Route path=\"/manualcontrol\">\n            <ManualControl\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n\n          <Route path=\"/robotstatus\">\n            <RobotStatus networking={networking} setTopBarTitle={setTopBarTitle} />\n          </Route>\n\n          <Route path=\"/path\">\n            <Path networking={networking} setTopBarTitle={setTopBarTitle} pathRecorder={pathRecorder} />\n          </Route>\n\n          <Route path=\"/pathfollowing\">\n            <PathFollowing\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}