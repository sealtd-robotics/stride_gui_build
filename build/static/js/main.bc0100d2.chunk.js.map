{"version":3,"sources":["shared/constants.ts","networking.ts","shared/utilities.ts","components/SideDrawer.tsx","icons/src/brake-icon.svg","icons/BrakeIcon.tsx","components/TopBar.tsx","components/RobotConnectCard.tsx","pages/InitialSetup.tsx","components/PathRecorderPopUpCard.tsx","components/Joystick.tsx","pages/ManualControl.tsx","components/GeneralCard.tsx","components/GpsCard.tsx","components/MechanicalBrakeCard.tsx","components/MotorControllerCard.tsx","components/SubjectVehicleCard.tsx","components/LicenseCard.tsx","pages/RobotStatus.tsx","components/path/PathRecoderTab.tsx","components/path/PathViewingTab.tsx","components/path/SharedPathTab.tsx","pages/Path.tsx","components/path_following/PrepareTab.tsx","components/path_following/TestTab.tsx","pages/PathFollowing.tsx","components/AutoDownhill.tsx","components/TestDataReadyPopUp.tsx","components/ResetMicroControllerModal.tsx","App.tsx","path-recorder.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["DRAWER_WIDTH","OVERSEER_STATE_STRING","GNSS_FIX_TYPE","MC_ERROR_WORD","Networking","constructor","id","isConnectedOnce","guiState","robotState","socket","senders","dataArrivalTime","intervalId1","intervalId2","receivedSharedPath","pathToFollow","vehiclePathToFollow","lastConnectedId","isNewTestDataReady","testLogMessages","errorMessages","this","isConnected","type","robotVelocityCommand","v","w","robotTurningRadius","overseerState","websocketClientCount","doesBrakeWhenStopped","robotTemperature","batteryTemperature","batteryVoltage","portentaHeartbeat","tempErrorWord","motorControllers","leftFront","isHeartbeatTimeout","errorWord","windingTemperature","leftBack","rightFront","rightBack","gps","status","latitude","longitude","northVelocity","eastVelocity","heading","num_satellites","diff_age","pathFollower","pathName","vehiclePathName","scriptName","targetVehicle","velocity","gps_ready","gps_correction_type","mechanicalBrake","hasBrake","brakeStatus","license_information","product_name","license_type","issue_date","customer_name","features","timestamp","latitudes","longitudes","WebSocket","error","console","onopen","event","Date","now","setInterval","close","heartbeat","onmessage","data","JSON","parse","toLocaleTimeString","push","commandMessage","newline_separated","errorMessage","split","error_message","onclose","clearInterval","joystick","travel","angle","message","send","stringify","spin","angular_velocity","x","theta","moveForward","stop","enableManaul","releaseMechanicalBrake","idle","readyState","OPEN","toggleBrakeWhenStopped","setMagneticCalibration","method","sharePath","startPathFollowing","uploadPath","filename","fileContent","uploadVehiclePath","uploadScript","returnToStart","resetMicroController","hasErrors","EN_factors","lat_ref","e","R","pi","Math","PI","sin","cos","sqrt","pow","LL2NE","long_ref","E_factor","N_factor","useStyles","makeStyles","theme","toolbar","mixins","drawerPaper","width","logo","paddingTop","list","padding","errorIcon","color","Component","_ref","networking","mobileOpen","setMobileOpen","classes","useTheme","history","useHistory","itemsLIst","text","onClick","canShowErrorIcon","drawer","_jsxs","children","_jsx","className","Typography","variant","align","Divider","List","map","item","ListItem","button","ListItemText","primary","Tooltip","title","ErrorOutlineIcon","Hidden","mdUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","_style","_g","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","SvgBrakeIcon","svgRef","titleId","props","xmlns","xmlnsXlink","y","viewBox","style","enableBackground","xmlSpace","ref","d","ForwardRef","SvgIcon","_objectSpread","Logo","appBar","_defineProperty","breakpoints","up","concat","marginLeft","marginRight","menuButton","display","spacing","start","backgroundColor","background","connection","state","reconnect","brakeIcon","fontSize","topBarTitle","pathRecorder","handleRobotConnect","AppBar","position","Toolbar","IconButton","edge","MenuIcon","noWrap","isRecording","FiberManualRecordIcon","_Fragment","xsDown","Button","BrakeIcon","green","red","margin","textField","handleRobotDisconnect","_useState","useState","_useState2","_slicedToArray","setId","Card","CardContent","TextField","label","onChange","value","onKeyDown","Page","setTopBarTitle","useEffect","Grid","container","justify","alignItems","RobotConnectCard","root","marginTop","boxShadow","zIndex","body","pathSwitch","numberOfPoints","FormControlLabel","control","Switch","checked","isRecordingLine","toggleLineRecording","Joystick","circleDiameter","sender_thottle_time","previousTime","handleJoystickStart","evt","handleJoystickEnd","setTimeout","handleJoystickMove","distance","radian","render","marginBottom","toFixed","PathRecorderPopUpCard","ReactNipple","options","mode","top","left","size","nippleSize","outline","height","overflow","onStart","onEnd","onMove","controlBox","moveButton","rotateRightButton","rotateIcon","isSpinning","isMovingForward","WebkitUserSelect","onPointerUp","Box","disabled","onPointerDown","onPointerOut","RotateLeftIcon","RotateRightIcon","ArrowUpwardIcon","expand","paddingBottom","transform","transition","transitions","create","duration","shortest","expandOpen","cardContent","verticalAlign","toString","motorController","location","copyButton","GeneralCard","LicenseCard","GpsCard","SubjectVehicleCard","MotorControllerCard","MechanicalBrakeCard","mb","flexDirection","border","overflowY","overflowX","msg","notes","snackOpen","setSnackOpen","paddingLeft","recordMode","requestRecording","requestVehicleRecording","stopRecording","pathString","blob","Blob","saveAs","exportPath","Snackbar","autoHideDuration","MuiAlert","elevation","severity","chartContainer","chartStyle","bottom","right","pathViewer","easts","norths","importFromRecorder","chartRef","pos_north","pos_east","current","createChartData","isNumeric","str","isNaN","Number","parseFloat","importFromFile","importFileRef","file","files","reader","FileReader","addEventListener","splitText","result","lineNumber","line","latLong","readAsText","chartData","ax","ay","aValue","twoPointDistance","x1","y1","x2","y2","useRef","useLayoutEffect","chart","am4core","am4charts","paddingRight","xAxis","xAxes","renderer","minGridDistance","baseGrid","strokeOpacity","strokeWidth","yAxis","yAxes","series1","series","dataFields","valueX","valueY","bullet1","bullets","circle","radius","numberFormatter","numberFormat","tooltipText","scrollbarX","scrollbarY","dispose","component","hidden","sharedPath","TabPanel","index","other","role","p","palette","tab","setValue","React","Tabs","scrollButtons","indicatorColor","textColor","handleChange","newValue","Tab","PathRecorderTab","PathViewingTab","SharedPathTab","snackbar","opacity","uploadPathRef","uploadVehiclePathRef","uploadScriptRef","wrongExtensionSnackbarOpen","setWrongExtensionSnackbarOpen","name","anchorOrigin","vertical","horizontal","pathDisplay","vehicle_easts","vehicle_norths","robot_east","robot_north","plotPathSeries","pathSeriesRef","xAxisRef","yAxisRef","forceRun","undefined","eastMin","min","eastMax","max","northMin","northMax","axisLength","createPathSeriesData","pathSeriesData","plotRobotSeries","headingRadian","robotSeriesRef","addData","bx","by","plotVehiclePathSeries","robot_lat","robot_long","vehiclePathSeriesRef","createVehiclePathSeriesData","vehiclePathSeriesData","cx","cy","cValue","plotVehiclePositionSeries","headingDeg","vehiclePositionSeriesRef","dx","dy","veh_angle","messageBox","maxHeight","isVehiclePathVisible","setIsVehiclePathVisible","allEasts","allNorths","_chartRef$current2","_chartRef$current3","_chartRef$current4","invalidateRawData","validateData","validateLayout","strictMinMax","pathSeries","robotSeries","stroke","bullet2","propertyFields","rotation","arrow","createChild","horizontalCenter","verticalCenter","fill","vehiclePathSeries","bullet3","vehiclePositionSeries","bullet4","vehicleArrow","visible","downloadTestData","link","document","createElement","href","click","toggleVehiclePathVisibility","prevState","newVisibility","_chartRef$current","PrepareTab","TestTab","TempInfoButton","TempInfoCard","maxMotorTemp","setMaxMotorTemp","_useState3","_useState4","snackbarOpen","setSnackbarOpen","_useState5","_useState6","modalOpen","setModalOpen","_useState7","_useState8","maxRobotTemp","setMaxRobotTemp","mcs","robot","max_t","max_robot_t","Modal","justifyContent","InfoIcon","getModalStyle","_React$useState","modalStyle","setOpen","hasBeenRecordingLine","pointDistance","priorLatitude","priorLongitude","latRef","longRef","recorderId","recordWhenRequested","haversineDistance","haversine","EN","northStart","eastStart","northEnd","eastEnd","lineDistance","divisions","floor","newNorth","newEast","newLatitude","newLongitude","lat1","lat2","long1","long2","latRadian1","latRadian2","longRadian1","deltaLat","deltaLong","content","App","setForceRerender","id1","vehicleLatitude","vehicleLongitude","Router","CssBaseline","ResetMicroControllerModal","AutoDownhill","TestDataReadyPopUp","TopBar","SideDrawer","Route","path","exact","Redirect","to","InitialSetup","ManualControl","RobotStatus","Path","PathFollowing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bc0100d2.chunk.js","sourcesContent":["export const DRAWER_WIDTH = 185\nexport const OVERSEER_STATE_STRING: { [char: string]: string } = {\n  0: \"Initial\",\n  1: \"Manual\",\n  2: \"Auto\",\n  3: \"E-Stopped\",\n  // 4: \"Error\",\n  5: \"Stopped\",\n  6: \"Decending\",\n  7: \"Idle\",\n}\n\nexport const GNSS_FIX_TYPE: { [key: string]: string } = {\n  0: \"No Solution\",\n  1: \"Unknown\",\n  2: \"Single\",\n  3: \"PSRDIFF\",\n  4: \"SBAS\",\n  5: \"Omnister\",\n  6: \"RTK Float\",\n  7: \"RTK Integer\",\n}\n\nexport const MC_ERROR_WORD: { [key: string]: string } = {\n  0: \"None\",\n  1: \"SpeedDeviationError\",\n  2: \"FollowingError\",\n  4: \"OverVoltageError\",\n  8: \"UnderVoltageError\",\n  16: \"TempWarning\",\n  32: \"TempError\",\n  64: \"Encoder error\",\n  128: \"Int HW error\",\n  512: \"Current Measurement Error\",\n  2048: \"Com error\",\n  4096: \"Calc error\",\n  8192: \"Dynamic Limit\",\n  16384: \"Safety monitor error\",\n}\n","import { GuiState, RobotState, Senders } from \"./shared/interfaces\"\n\nexport default class Networking {\n  guiState: GuiState\n  robotState: RobotState\n  socket: WebSocket\n  senders: Senders\n  dataArrivalTime: number\n  intervalId1!: NodeJS.Timeout\n  intervalId2!: NodeJS.Timeout\n  receivedSharedPath: { timestamp: string; latitudes: Array<number>; longitudes: Array<number> }\n  pathToFollow: { latitudes: Array<number>; longitudes: Array<number> }\n  vehiclePathToFollow: {latitudes: Array<number>; longitudes: Array<number> }\n  lastConnectedId: string\n  isConnectedOnce: boolean\n  isNewTestDataReady: boolean\n  testLogMessages: Array<string>\n  errorMessages: Array<string>\n\n  constructor(id: string, isConnectedOnce: boolean) {\n    if (isConnectedOnce) {\n      this.lastConnectedId = id\n      this.isConnectedOnce = true\n    } else {\n      this.lastConnectedId = \"\"\n      this.isConnectedOnce = false\n    }\n\n    this.guiState = {\n      isConnected: false,\n      id: id,\n    }\n\n    // robotState:\n    //   -should have the same keys as the received JSON message from robot\n    //   -JSON message is received continuosly at certain rate\n    this.robotState = {\n      type: \"robotState\",\n      robotVelocityCommand: {\n        v: 0,\n        w: 0,\n      },\n      robotTurningRadius: 0,\n      overseerState: 0,\n      websocketClientCount: 0,\n      doesBrakeWhenStopped: false,\n      robotTemperature: 0,\n      batteryTemperature: 0,\n      batteryVoltage: 0,\n      portentaHeartbeat: true,\n      tempErrorWord: 0,\n      motorControllers: {\n        leftFront: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        leftBack: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightFront: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n        rightBack: {\n          isHeartbeatTimeout: false,\n          errorWord: 0,\n          windingTemperature: 0,\n        },\n      },\n      gps: {\n        status: -1,\n        latitude: 0,\n        longitude: 0,\n        northVelocity: 0,\n        eastVelocity: 0,\n        heading: 0,\n        num_satellites: 0,\n        diff_age: 0,\n      },\n      pathFollower: {\n        pathName: \"\",\n        vehiclePathName: \"\",\n        scriptName: \"\",\n      },\n      targetVehicle: {\n        latitude: 0,\n        longitude: 0,\n        heading: 0,\n        velocity: 0,\n        gps_ready: false,\n        gps_correction_type: 0,\n      },\n      mechanicalBrake: {\n        hasBrake: false,\n        brakeStatus: 0,\n      },\n\n      license_information: {\n        product_name: \"\",\n        license_type: \"\",\n        issue_date: \"\",\n        customer_name: \"\",\n        features: \"\",\n    },\n    }\n\n    // Here are the attributes that don't get updated continuously\n    this.receivedSharedPath = { timestamp: \"\", latitudes: [], longitudes: [] }\n    this.pathToFollow = { latitudes: [], longitudes: [] }\n    this.vehiclePathToFollow = { latitudes: [], longitudes: [] }\n    this.isNewTestDataReady = false\n    this.testLogMessages = []\n    this.errorMessages = []\n\n    // For disconnecting when no more incoming data\n    this.dataArrivalTime = 0\n\n    try {\n      if (id === \"localhost\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://localhost:9000\")\n      } else if (id === \"999\") {\n        // for debug\n        this.socket = new WebSocket(\"ws://192.168.1.129:9000\")\n      } else {\n        this.socket = new WebSocket(\"ws://195.0.0.\" + id + \":9000\")\n      }\n    } catch (error) {\n      console.error(error)\n      this.socket = new WebSocket(\"ws://0.0.0.0\")\n    }\n\n    this.socket.onopen = (event) => {\n      this.guiState.isConnected = true\n      this.dataArrivalTime = Date.now()\n\n      this.lastConnectedId = this.guiState.id\n      this.isConnectedOnce = true\n\n      // disconnect if no messages are received for a period of time\n      this.intervalId1 = setInterval(() => {\n        if (Date.now() - this.dataArrivalTime > 4000) {\n          this.guiState.isConnected = false // needed when wifi gets disconnected\n          this.socket.close()\n        }\n      }, 250)\n\n      // send out heartbeat\n      this.intervalId2 = setInterval(() => {\n        this.senders.heartbeat()\n      }, 200)\n    }\n\n    this.socket.onmessage = (event) => {\n      this.dataArrivalTime = Date.now()\n\n      const data = JSON.parse(event.data)\n\n      if (data.type === \"robotState\") {\n        this.robotState = data\n      } else if (data.type === \"sharedPath\") {\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n\n        this.receivedSharedPath = {\n          timestamp: timestamp,\n          latitudes: data.latitudes,\n          longitudes: data.longitudes,\n        }\n      } else if (data.type === \"/path_follower/path_to_follow\") {\n        this.pathToFollow.latitudes = data.latitudes\n        this.pathToFollow.longitudes = data.longitudes\n      } else if (data.type === \"/path_follower/vehicle_path_to_follow\") {\n        this.vehiclePathToFollow.latitudes = data.latitudes\n        this.vehiclePathToFollow.longitudes = data.longitudes\n      }\n        else if (data.type === \"createdCSV\") {\n        this.isNewTestDataReady = true\n      } else if (data.type === \"commandMessage\") {\n        this.testLogMessages.push(data.commandMessage)\n      } else if (data.type === \"errorMessage\") {\n        // Attach a date to the error message\n        const d = new Date()\n        const timestamp = d.toLocaleTimeString()\n        this.errorMessages.push(timestamp)\n\n        // Attach the error messages to both test log and error log\n        const newline_separated = data.errorMessage.split(/\\r?\\n/)\n        for (const error_message of newline_separated) {\n          // \"2\" is Auto\n          if (this.robotState.overseerState === 2) {\n            this.testLogMessages.push(error_message)\n          }\n          this.errorMessages.push(error_message)\n        }\n      }\n    }\n\n    // the onclose callback will not run immediately when wifi gets disconnected\n    this.socket.onclose = (event) => {\n      this.guiState.isConnected = false\n      clearInterval(this.intervalId1)\n      clearInterval(this.intervalId2)\n    }\n\n    this.senders = {\n      joystick: (travel, angle) => {\n        const message = {\n          type: \"/joystick\",\n          travel: travel,\n          angle: angle,\n        }\n\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      spin: (angular_velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: 0,\n          theta: angular_velocity,\n        }\n\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      moveForward: (velocity) => {\n        const message = {\n          type: \"/robot_velocity_command\",\n          x: velocity,\n          theta: 0,\n        }\n        // overseerState \"1\" is MANUAL state\n        if (this.guiState.isConnected && this.robotState.overseerState === 1) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      stop: () => {\n        const message = {\n          type: \"/gui/stop_clicked\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      enableManaul: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/enable_manual_clicked\" }))\n        }\n      },\n\n      releaseMechanicalBrake: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/release_mechanical_brake_clicked\" }))\n        }\n      },\n\n      idle: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/idle_clicked\" }))\n        }\n      },\n\n      heartbeat: () => {\n        if (this.socket.readyState === WebSocket.OPEN) {\n          this.socket.send(JSON.stringify({ type: \"/gui/heartbeat\" }))\n        }\n      },\n\n      toggleBrakeWhenStopped: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/brake_when_stopped_toggled\" }))\n        }\n      },\n\n      setMagneticCalibration: (method) => {\n        const message = {\n          type: \"/an_device/magnetic_calibration/calibrate\",\n          method: method,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      sharePath: (latitudes, longitudes) => {\n        const message = {\n          type: \"sharedPath\",\n          latitudes: latitudes,\n          longitudes: longitudes,\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      },\n\n      startPathFollowing: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/start_path_following_clicked\" }))\n        }\n      },\n\n      uploadPath: (filename, fileContent) => {\n        // return if file extension is not txt\n        if (filename.split(\".\")[1] !== \"txt\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_path_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      uploadVehiclePath: (filename, fileContent) => {\n        // return if file extension is not txt\n        if (filename.split(\".\")[1] !== \"txt\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_vehicle_path_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      uploadScript: (filename, fileContent) => {\n        // return if file extension is not py\n        if (filename.split(\".\")[1] !== \"py\") {\n          return\n        }\n\n        const message = {\n          type: \"/gui/upload_script_clicked\",\n          filename: filename,\n          fileContent: fileContent,\n        }\n        this.socket.send(JSON.stringify(message))\n      },\n\n      returnToStart: () => {\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify({ type: \"/gui/return_to_start_clicked\" }))\n        }\n      },\n\n      resetMicroController: () => {\n        const message = {\n          type: \"/gui/reset_micro_controller\",\n        }\n        if (this.guiState.isConnected) {\n          this.socket.send(JSON.stringify(message))\n        }\n      }\n    }\n  }\n}\n","// abbreviations\n// lat: latitude\n// long: longitude\n// ref: reference\n// pos: position\n\nimport { RobotState } from \"./interfaces\"\n\nexport function hasErrors(robotState: RobotState) {\n  return (\n    (robotState.motorControllers.leftFront.errorWord !== 0 &&\n      robotState.motorControllers.leftFront.errorWord !== 64) ||\n    robotState.motorControllers.leftFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.leftBack.errorWord !== 0 &&\n      robotState.motorControllers.leftBack.errorWord !== 64) ||\n    robotState.motorControllers.leftBack.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightFront.errorWord !== 0 &&\n      robotState.motorControllers.rightFront.errorWord !== 64) ||\n    robotState.motorControllers.rightFront.isHeartbeatTimeout ||\n    (robotState.motorControllers.rightBack.errorWord !== 0 &&\n      robotState.motorControllers.rightBack.errorWord !== 64) ||\n    robotState.motorControllers.rightBack.isHeartbeatTimeout ||\n    robotState.tempErrorWord !== 0\n  )\n}\n\nexport function EN_factors(lat_ref: number) {\n  const e = 0.0818191908426\n  const R = 6378137\n  const pi = Math.PI\n\n  const sin = Math.sin\n  const cos = Math.cos\n  const sqrt = Math.sqrt\n\n  const E_factor =\n    (((cos((lat_ref * pi) / 180) * R) / sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2)) * pi) / 180\n\n  const N_factor =\n    ((((1 - e ** 2) * R) /\n      ((1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2) * sqrt(1 - sin((lat_ref * pi) / 180) ** 2 * e ** 2))) *\n      pi) /\n    180\n  return [E_factor, N_factor]\n}\n\n// Latitude Longitude to North East\nexport function LL2NE(\n  latitude: number,\n  longitude: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const pos_east = (longitude - long_ref) * E_factor\n  const pos_north = (latitude - lat_ref) * N_factor\n  return [pos_north, pos_east]\n}\n\nexport function NE2LL(\n  pos_north: number,\n  pos_east: number,\n  lat_ref: number,\n  long_ref: number,\n  E_factor: number,\n  N_factor: number\n) {\n  const longitude = pos_east / E_factor + long_ref\n  const latitude = pos_north / N_factor + lat_ref\n  return [latitude, longitude]\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH } from \"../shared/constants\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Divider from \"@material-ui/core/Divider\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for pushing the SideDrawer below the TopBar\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  logo: {\n    paddingTop: 10,\n  },\n  list: {\n    padding: 0,\n  },\n  errorIcon: {\n    color: \"red\",\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  mobileOpen: boolean\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function Component({ networking, mobileOpen, setMobileOpen }: Props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const itemsLIst = [\n    {\n      text: \"Initial Setup\",\n      onClick: () => {\n        history.push(\"/initialsetup\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Manual Control\",\n      onClick: () => {\n        history.push(\"/manualcontrol\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Robot Status\",\n      onClick: () => {\n        history.push(\"/robotstatus\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: true,\n    },\n    {\n      text: \"Path\",\n      onClick: () => {\n        history.push(\"/path\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n    {\n      text: \"Path Following\",\n      onClick: () => {\n        history.push(\"/pathfollowing\")\n        setMobileOpen(false)\n      },\n      canShowErrorIcon: false,\n    },\n  ]\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography variant=\"h4\" align=\"center\" color=\"primary\" className={classes.logo}>\n          STRIDE\n        </Typography>\n      </div>\n\n      <Divider />\n      <List className={classes.list}>\n        {itemsLIst.map((item) => {\n          const { text, onClick, canShowErrorIcon } = item\n          return (\n            <ListItem button key={text} onClick={onClick}>\n              <ListItemText primary={text} />\n              {canShowErrorIcon && hasErrors(networking.robotState) && networking.guiState.isConnected ? (\n                <Tooltip title=\"ERROR\">\n                  <ErrorOutlineIcon className={classes.errorIcon} />\n                </Tooltip>\n              ) : null}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav aria-label=\"mailbox folders\">\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={() => setMobileOpen(false)}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  )\n}\n","var _style, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBrakeIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.29\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.29\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".st0{fill-rule:evenodd;clip-rule:evenodd;}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M18.86,59.43l-4.25-1.19c-0.26,2.11-0.4,4.26-0.4,6.44c0,6.93,1.37,13.53,3.86,19.53v0.01 c2.59,6.24,6.38,11.86,11.09,16.56l0.01,0.01c4.7,4.71,10.32,8.5,16.56,11.09h0.01c6,2.49,12.6,3.86,19.53,3.86 c6.93,0,13.53-1.37,19.53-3.86c6.23-2.58,11.85-6.38,16.57-11.1h0.01c4.71-4.7,8.5-10.32,11.09-16.56V84.2 c2.49-6,3.86-12.6,3.86-19.53c0-6.93-1.37-13.53-3.86-19.53c-2.58-6.23-6.38-11.85-11.1-16.57v-0.01 c-4.7-4.71-10.32-8.5-16.56-11.09h-0.01c-4.19-1.74-8.67-2.93-13.36-3.49v5.62C46.4,19.6,25.3,36.45,18.86,59.43L18.86,59.43z M60.83,6.79c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1C56.74,8.63,58.57,6.79,60.83,6.79 L60.83,6.79z M13.43,42.53c2.26,0,4.1,1.83,4.1,4.1c0,2.26-1.83,4.1-4.1,4.1c-2.26,0-4.1-1.83-4.1-4.1 C9.33,44.36,11.17,42.53,13.43,42.53L13.43,42.53z M8.24,56.44L0,54.13C8.99,22.12,38.19,0,71.44,0v7.39 c5.56,0.59,10.89,1.98,15.87,4.04l0,0c7.05,2.92,13.39,7.2,18.69,12.51l0.01-0.01c5.3,5.3,9.58,11.65,12.51,18.72 c2.82,6.8,4.37,14.24,4.37,22.02c0,7.79-1.56,15.24-4.37,22.04l0,0c-2.92,7.05-7.2,13.39-12.51,18.69l0.01,0.01 c-5.3,5.3-11.65,9.58-18.72,12.51c-6.8,2.82-14.24,4.37-22.02,4.37c-7.79,0-15.24-1.56-22.04-4.37l0,0 c-7.05-2.92-13.39-7.2-18.69-12.5l-0.01-0.01c-5.3-5.3-9.58-11.64-12.5-18.69l0,0c-2.82-6.8-4.37-14.24-4.37-22.04 C7.65,61.88,7.85,59.13,8.24,56.44L8.24,56.44z M65.27,29.18c4.81,0,9.39,0.96,13.58,2.69c4.34,1.8,8.25,4.44,11.52,7.71 c3.27,3.27,5.91,7.18,7.71,11.53c1.73,4.18,2.69,8.77,2.69,13.57c0,4.81-0.96,9.39-2.69,13.58c-1.8,4.34-4.44,8.25-7.71,11.52 c-3.27,3.27-7.18,5.91-11.53,7.71c-4.18,1.73-8.77,2.69-13.57,2.69c-4.81,0-9.39-0.96-13.58-2.69c-4.34-1.8-8.25-4.44-11.52-7.71 c-3.27-3.27-5.91-7.18-7.71-11.53c-1.73-4.18-2.69-8.77-2.69-13.57c0-4.81,0.96-9.39,2.69-13.58c1.8-4.34,4.44-8.25,7.71-11.52 c3.27-3.27,7.18-5.91,11.53-7.71C55.88,30.14,60.46,29.18,65.27,29.18L65.27,29.18z M57.41,58.28c0.12-0.16,0.24-0.31,0.36-0.46 c0.18-0.22,0.38-0.43,0.59-0.64c0.49-0.48,1.02-0.91,1.6-1.29c0.49-0.32,1.01-0.59,1.55-0.82l0-18.27 c-3.02,0.4-5.88,1.28-8.52,2.56c-2.84,1.38-5.41,3.22-7.61,5.42c-1.21,1.21-2.31,2.52-3.28,3.93c-0.88,1.28-1.66,2.63-2.33,4.05 L57.41,58.28L57.41,58.28z M68.54,60.82c-0.42-0.42-0.93-0.77-1.5-1c-0.54-0.22-1.14-0.35-1.78-0.35c-0.63,0-1.23,0.12-1.78,0.35 c-0.56,0.23-1.07,0.57-1.5,1l-0.01,0.01c-0.43,0.43-0.77,0.93-1,1.5c-0.22,0.54-0.35,1.14-0.35,1.78c0,0.63,0.12,1.23,0.35,1.78 c0.23,0.57,0.57,1.07,1,1.5L62,67.38c0.42,0.43,0.93,0.77,1.5,1c0.54,0.22,1.14,0.35,1.78,0.35c0.63,0,1.23-0.12,1.78-0.35 c0.57-0.23,1.07-0.57,1.5-1l0.01-0.01c0.42-0.42,0.77-0.93,1-1.5c0.22-0.54,0.35-1.14,0.35-1.78c0-0.63-0.13-1.23-0.35-1.78 C69.31,61.76,68.96,61.25,68.54,60.82L68.54,60.82z M68.85,54.99c0.58,0.23,1.14,0.52,1.67,0.86c0.61,0.39,1.16,0.83,1.66,1.33 c0.16,0.16,0.33,0.34,0.49,0.53c0.1,0.12,0.2,0.24,0.29,0.36l17.99-4.82c-0.67-1.51-1.48-2.96-2.4-4.32 c-1.01-1.49-2.16-2.88-3.43-4.15c-2.23-2.23-4.83-4.08-7.69-5.47c-2.66-1.28-5.56-2.16-8.6-2.55V54.99L68.85,54.99z M75,65.15 c-0.08,0.69-0.22,1.37-0.43,2.01c-0.22,0.66-0.51,1.3-0.86,1.89l10.42,16.51l0.36-0.33c0.22-0.2,0.44-0.42,0.68-0.66 c2.59-2.59,4.68-5.69,6.11-9.13c1.37-3.31,2.13-6.95,2.13-10.76c0-0.81-0.03-1.62-0.1-2.41c-0.06-0.66-0.14-1.32-0.24-1.96 L75,65.15L75,65.15z M67.87,73.54c-0.37,0.1-0.75,0.18-1.13,0.24c-0.48,0.07-0.97,0.11-1.47,0.11c-0.44,0-0.88-0.03-1.32-0.09 c-0.34-0.05-0.68-0.11-1.01-0.19L52.89,89.95c1.84,0.9,3.78,1.61,5.81,2.09c2.1,0.5,4.3,0.77,6.57,0.77c2.35,0,4.62-0.29,6.8-0.83 c2.11-0.52,4.12-1.28,6.02-2.25L67.87,73.54L67.87,73.54z M56.96,69.27c-0.36-0.58-0.67-1.2-0.9-1.85 c-0.23-0.64-0.4-1.31-0.49-2.01l-18.01-5.64c-0.13,0.74-0.23,1.48-0.3,2.22c-0.08,0.87-0.13,1.77-0.13,2.68 c0,3.81,0.76,7.45,2.13,10.76c1.42,3.44,3.51,6.54,6.11,9.13c0.28,0.28,0.57,0.55,0.84,0.81l0.54,0.49L56.96,69.27L56.96,69.27z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrakeIcon);\nexport default __webpack_public_path__ + \"static/media/brake-icon.97838cea.svg\";\nexport { ForwardRef as ReactComponent };","import SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\"\nimport { ReactComponent as Logo } from \"./src/brake-icon.svg\"\n\nexport default function Component(props: SvgIconProps) {\n  return (\n    <div>\n      <SvgIcon {...props}>\n        <Logo />\n      </SvgIcon>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { DRAWER_WIDTH, OVERSEER_STATE_STRING } from \"../shared/constants\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { green, red } from \"@material-ui/core/colors\"\nimport PathRecorder from \"../path-recorder\"\nimport { hasErrors } from \"../shared/utilities\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  menuButton: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  stop: {\n    marginLeft: theme.spacing(1.5),\n  },\n  start: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    marginLeft: theme.spacing(1.5),\n    \"&:hover\": {\n      background: \"darkgreen\",\n    },\n  },\n  connection: {\n    color: \"lightgray\",\n  },\n  state: {\n    marginLeft: theme.spacing(1.5),\n    color: \"lightgray\",\n  },\n  errorIcon: {\n    marginLeft: theme.spacing(1.5),\n    color: \"red\",\n  },\n  reconnect: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1.5),\n    fontSize: 30,\n  },\n  idle: {\n    marginLeft: theme.spacing(1.5),\n    backgroundColor: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"darkgreen\",\n    },\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setMobileOpen: React.Dispatch<React.SetStateAction<boolean>>\n  topBarTitle: string\n  pathRecorder: PathRecorder\n  handleRobotConnect: (id: string) => void\n}\n\nexport default function Component({\n  networking,\n  setMobileOpen,\n  topBarTitle,\n  pathRecorder,\n  handleRobotConnect,\n}: Props) {\n  const classes = useStyles()\n\n  const guiState = networking.guiState\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleStopButton() {\n    senders.stop()\n  }\n\n  function handleIdle() {\n    senders.idle()\n  }\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => setMobileOpen(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n          {topBarTitle}\n        </Typography>\n\n        {pathRecorder.isRecording ? (\n          <Tooltip title=\"Recording\">\n            <FiberManualRecordIcon style={{ color: \"red\", marginRight: \"6px\" }} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected ? (\n          <>\n            <Hidden xsDown>\n              <Typography variant=\"body2\" className={classes.connection}>\n                {`ID: ${guiState.id}`}\n              </Typography>\n            </Hidden>\n\n            <Typography variant=\"body2\" className={classes.state}>\n              {OVERSEER_STATE_STRING[robotState.overseerState]}\n            </Typography>\n          </>\n        ) : (\n          <Typography variant=\"body2\" className={classes.connection}>\n            not connected\n          </Typography>\n        )}\n\n        {!guiState.isConnected && networking.lastConnectedId !== \"\" && (\n          <Button\n            className={classes.reconnect}\n            variant=\"contained\"\n            onClick={() => handleRobotConnect(\"useRecentId\")}\n          >\n            reconnect\n          </Button>\n        )}\n\n        {guiState.isConnected && hasErrors(robotState) ? (\n          <Tooltip title=\"ERROR\">\n            <ErrorOutlineIcon fontSize=\"large\" className={classes.errorIcon} />\n          </Tooltip>\n        ) : null}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 2 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: green[500] }} />\n        )}\n\n        {guiState.isConnected && robotState.mechanicalBrake.brakeStatus === 3 && (\n          <BrakeIcon className={classes.brakeIcon} style={{ color: red[500] }} />\n        )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 1 ||\n            robotState.overseerState === 2 ||\n            robotState.overseerState === 7 ||\n            robotState.overseerState === 4) && ( // if in manual, auto, idle, or return_to_start\n            <Button className={classes.stop} variant=\"contained\" color=\"secondary\" onClick={handleStopButton}>\n              stop\n            </Button>\n          )}\n\n        {guiState.isConnected &&\n          (robotState.overseerState === 5 || robotState.overseerState === 6) && ( // if in stopped or decending\n            <Button className={classes.idle} variant=\"contained\" onClick={handleIdle}>\n              idle\n            </Button>\n          )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  status: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: \"15.5rem\",\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n}\n\nexport default function Component({ networking, handleRobotConnect, handleRobotDisconnect }: Props) {\n  const classes = useStyles()\n\n  const [id, setId] = useState(\"\")\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Robot Connection\n        </Typography>\n\n        <Typography variant=\"caption\" display=\"block\" className={classes.status}>\n          {networking.guiState.isConnected ? `connected (ID: ${networking.guiState.id})` : \"not connected\"}\n        </Typography>\n\n        <TextField\n          label=\"Robot ID\"\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => {\n            setId(e.target.value)\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleRobotConnect(id)\n            }\n          }}\n        />\n        <br />\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleRobotConnect(id)}\n        >\n          Connect\n        </Button>\n\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleRobotDisconnect()}\n        >\n          Disconnect\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport RobotConnectCard from \"../components/RobotConnectCard\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  handleRobotConnect: (id: string) => void\n  handleRobotDisconnect: () => void\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({\n  networking,\n  handleRobotConnect,\n  handleRobotDisconnect,\n  setTopBarTitle,\n}: Props) {\n  useEffect(() => {\n    setTopBarTitle(\"Initial Setup\")\n  }, [setTopBarTitle])\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"flex-start\">\n      <Grid item>\n        <RobotConnectCard\n          networking={networking}\n          handleRobotConnect={handleRobotConnect}\n          handleRobotDisconnect={handleRobotDisconnect}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\n// ws://192.168.1.129:9090\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Card from \"@material-ui/core/Card\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    marginLeft: theme.spacing(1.5),\n    marginTop: theme.spacing(1.5),\n    boxShadow: \"3px 3px 5px rgba(0,0,0,0.2)\",\n    zIndex: 1,\n  },\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  pathSwitch: {\n    marginLeft: 0,\n  },\n}))\n\ninterface Props {\n  pathRecorder: PathRecorder\n  networking: Networking\n}\n\nexport default function Component({ pathRecorder, networking }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Typography variant=\"h6\" className={classes.title}>\n        Recording Path\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        GPS Status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <FormControlLabel\n        className={classes.pathSwitch}\n        control={\n          <Switch\n            checked={pathRecorder.isRecordingLine}\n            onChange={() => pathRecorder.toggleLineRecording()}\n            color=\"primary\"\n          />\n        }\n        label=\"Record a line\"\n      />\n    </Card>\n  )\n}\n","import React, { Component } from \"react\"\n\nimport ReactNipple from \"react-nipple\"\nimport \"react-nipple/lib/styles.css\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport PathRecorderPopUpCard from \"./PathRecorderPopUpCard\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\n// Abbreviations:\n// ICR = instantaneous center of rotation\n// v,V = linear velocity\n// w,W = angular velocity\n// r,R = turning radius of robot geometric center\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default class Joystick extends Component<Props> {\n  circleDiameter = 400 // pixels\n  sender_thottle_time = 100 //ms\n  previousTime = Date.now()\n\n  render() {\n    return (\n      <div>\n        <h3 style={{ marginTop: 0, marginBottom: 5 }}>Press and drag below to move the robot</h3>\n\n        <Tooltip title=\"Linear Velocity\">\n          <span style={{ fontSize: 16 }}>\n            v: {this.props.networking.robotState.robotVelocityCommand.v.toFixed(2)} m/s\n          </span>\n        </Tooltip>\n\n        <Tooltip title=\"Heading\">\n          <span style={{ fontSize: 16, marginLeft: 16 }}>\n            h: {((this.props.networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n          </span>\n        </Tooltip>\n\n        <br />\n        {this.props.pathRecorder.isRecording ? (\n          <PathRecorderPopUpCard pathRecorder={this.props.pathRecorder} networking={this.props.networking} />\n        ) : null}\n\n        <ReactNipple\n          className=\"nipple\"\n          options={{\n            mode: \"dynamic\",\n            color: \"blue\",\n            position: { top: \"50%\", left: \"50%\" },\n            size: this.circleDiameter,\n            nippleSize: 90,\n          }}\n          style={{\n            zIndex: 0,\n            outline: `1px dashed blue`,\n            width: \"100%\",\n            height: \"max( 100vh - 325px, 120px)\", // calc() not needed inside max()\n            // display: \"table\",\n            overflow: \"hidden\",\n          }}\n          onStart={this.handleJoystickStart}\n          onEnd={this.handleJoystickEnd}\n          onMove={this.handleJoystickMove}\n        />\n        {/* <DebugView data={this.state.data} /> */}\n      </div>\n    )\n  }\n\n  handleJoystickStart = (evt: any, data: any) => {}\n\n  handleJoystickEnd = (evt: any, data: any) => {\n    setTimeout(() => {\n      this.props.networking.senders.joystick(0, 0)\n    }, 100) // needed, otherwise the subscriber callback for /robot_velocity_command won't get triggered\n  }\n  handleJoystickMove = (evt: any, data: any) => {\n    if (Date.now() - this.previousTime < this.sender_thottle_time) {\n      return\n    }\n    this.previousTime = Date.now()\n\n    const travel = data.distance / (this.circleDiameter * 0.5)\n    const angle = data.angle.radian - Math.PI / 2 // the angle when pushing the joystick forwards is now 0\n\n    this.props.networking.senders.joystick(travel, angle)\n  }\n}\n","import React, { useEffect } from \"react\"\nimport Joystick from \"../components/Joystick\"\nimport Switch from \"@material-ui/core/Switch\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\nimport RotateRightIcon from \"@material-ui/icons/RotateRight\"\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\"\nimport Box from \"@material-ui/core/Box\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\nimport BrakeIcon from \"../icons/BrakeIcon\"\n\nconst useStyles = makeStyles((theme) => ({\n  controlBox: {\n    marginTop: theme.spacing(1.5),\n    marginBottom: theme.spacing(1.5),\n  },\n  moveButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateRightButton: {\n    marginLeft: theme.spacing(2),\n  },\n  rotateIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  brakeIcon: {\n    marginLeft: theme.spacing(1),\n    marginTop: 5,\n    fontSize: 20,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\nlet isSpinning = false\nlet isMovingForward = false\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n\n  const robotState = networking.robotState\n  const senders = networking.senders\n\n  function handleManualSwitch(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.checked) {\n      senders.enableManaul()\n    } else {\n      senders.stop()\n    }\n  }\n\n  function handleBrakeWhenStoppedSwitch() {\n    senders.toggleBrakeWhenStopped()\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Manual Control\")\n  }, [setTopBarTitle])\n\n  return (\n    // WebkitUserSelect is used to prevent random text selection when using the joystick\n    <div style={{ WebkitUserSelect: \"none\" }}>\n      {robotState.mechanicalBrake.brakeStatus !== 0 && robotState.mechanicalBrake.brakeStatus !== 1 && robotState.overseerState !== 2 && (\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerUp={() => {\n            senders.releaseMechanicalBrake()\n          }}\n        >\n          Release Mechanical Brake <BrakeIcon className={classes.brakeIcon} />\n        </Button>\n      )}\n\n      <Box>\n        <FormControlLabel\n          control={\n            <Switch checked={robotState.overseerState === 1} onChange={handleManualSwitch} color=\"primary\" />\n          }\n          label=\"Enable Manual Control\"\n          disabled={\n            robotState.overseerState === 2 || robotState.overseerState === 3 || robotState.overseerState === 6\n          }\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={robotState.doesBrakeWhenStopped === true}\n              onChange={handleBrakeWhenStoppedSwitch}\n              color=\"primary\"\n            />\n          }\n          label=\"Hold Motors When Not Moving\"\n        />\n      </Box>\n\n      <Box className={classes.controlBox}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateLeftIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.rotateRightButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isSpinning = true\n            senders.spin(-0.3)\n          }}\n          onPointerUp={() => {\n            isSpinning = false\n            senders.spin(0)\n          }}\n          onPointerOut={() => {\n            if (isSpinning) {\n              senders.spin(0)\n            }\n          }}\n        >\n          spin <RotateRightIcon className={classes.rotateIcon} />\n        </Button>\n\n        <Button\n          className={classes.moveButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onPointerDown={() => {\n            isMovingForward = true\n            senders.moveForward(0.75)\n          }}\n          onPointerUp={() => {\n            isMovingForward = false\n            senders.moveForward(0)\n          }}\n          onPointerOut={() => {\n            if (isMovingForward) {\n              senders.moveForward(0)\n            }\n          }}\n        >\n          move <ArrowUpwardIcon className={classes.rotateIcon} />\n        </Button>\n      </Box>\n\n      <Joystick networking={networking} pathRecorder={pathRecorder} />\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  errorIcon: {\n    // marginLeft: theme.spacing(1.5),\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          General\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GUI Version: 1.4.1 \n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Voltage: {robotState.batteryVoltage.toFixed(2)}V\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Battery Temperature: {robotState.batteryTemperature}F{\" \"}\n          {robotState.batteryTemperature >= 140 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Robot Internal Temperature: {robotState.robotTemperature}F{\" \"}\n          {robotState.robotTemperature >= 140 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Clients Connected to Robot: {robotState.websocketClientCount}\n        </Typography>\n\n      </CardContent>\n    </Card>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\nimport { GNSS_FIX_TYPE } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  if(robotState.gps.diff_age > 60000) {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            GPS\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Latitdue (deg): {robotState.gps.latitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Longitude (deg): {robotState.gps.longitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n          </Typography>\n          \n          <Typography variant=\"body1\" className={classes.body}>\n            Longitudinal Velocity (m/s): {\"\"}\n            {((robotState.gps.northVelocity * Math.cos(robotState.gps.heading * Math.PI/180)) + (robotState.gps.eastVelocity * Math.sin(robotState.gps.heading * Math.PI/180))).toFixed(2)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Number of Satellites: {robotState.gps.num_satellites}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Differential Age (ms): N/A\n          </Typography>\n\n        </CardContent>\n      </Card>\n    )\n}\n  else {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            GPS\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Status: {GNSS_FIX_TYPE[robotState.gps.status]}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Latitdue (deg): {robotState.gps.latitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Longitude (deg): {robotState.gps.longitude.toFixed(7)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Heading (deg): {((robotState.gps.heading / Math.PI) * 180).toFixed(2)}\n          </Typography>\n          \n          <Typography variant=\"body1\" className={classes.body}>\n            Longitudinal Velocity (m/s): {\"\"}\n            {((robotState.gps.northVelocity * Math.cos(robotState.gps.heading * Math.PI/180)) + (robotState.gps.eastVelocity * Math.sin(robotState.gps.heading * Math.PI/180))).toFixed(2)}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Number of Satellites: {robotState.gps.num_satellites}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Differential Age (ms): {robotState.gps.diff_age}\n          </Typography>\n\n        </CardContent>\n      </Card>\n    )\n  }\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n  \n  if (robotState.mechanicalBrake.hasBrake) {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Mechanical Brake\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Has Brake: {robotState.mechanicalBrake.hasBrake.toString()}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Brake Status: {robotState.mechanicalBrake.brakeStatus}\n          </Typography>\n\n        </CardContent>\n      </Card>\n    )\n  }\n  else {\n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Mechanical Brake\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Has Brake: {robotState.mechanicalBrake.hasBrake.toString()}\n          </Typography>\n          \n        </CardContent>\n      </Card>\n    )\n  }\n\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { MotorController } from \"../shared/interfaces\"\nimport { MC_ERROR_WORD } from \"../shared/constants\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  errorIcon: {\n    verticalAlign: \"-3px\",\n    color: \"red\",\n    fontSize: \"17px\",\n  },\n}))\n\ninterface Props {\n  motorController: MotorController\n  id: number\n  location: string\n}\n\nexport default function Component({ motorController, id, location }: Props) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" className={classes.title}>\n          Motor Controller {id}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Error: {MC_ERROR_WORD[motorController.errorWord]}{\" \"}\n          {motorController.errorWord !== 0 ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heartbeat Timeout: {motorController.isHeartbeatTimeout.toString()}{\" \"}\n          {motorController.isHeartbeatTimeout ? <ErrorOutlineIcon className={classes.errorIcon} /> : null}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Winding Temperature (F): {motorController.windingTemperature.toFixed(0)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","// import React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n  copyButton: {\n    paddingTop: 0,\n    marginLeft: theme.spacing(0.5),\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n  const classes = useStyles()\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" className={classes.title}>\n          Subject Vehicle\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Latitude (deg): {robotState.targetVehicle.latitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Longitude (deg): {robotState.targetVehicle.longitude.toFixed(7)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Heading (deg): {robotState.targetVehicle.heading.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          Velocity (m/s): {robotState.targetVehicle.velocity.toFixed(2)}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Ready: {robotState.targetVehicle.gps_ready.toString()}\n        </Typography>\n\n        <Typography variant=\"body1\" className={classes.body}>\n          GPS Correction Type: {robotState.targetVehicle.gps_correction_type}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { RobotState } from \"../shared/interfaces\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  expand: {\n    margin: \"0 auto\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingBottom: 0,\n  },\n}))\n\nexport default function Component({ robotState }: { robotState: RobotState }) {\n    const classes = useStyles()\n  \n    return (\n      <Card variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"h5\" className={classes.title}>\n            License Information\n          </Typography>\n  \n          <Typography variant=\"body1\" className={classes.body}>\n            Product Name: {robotState.license_information.product_name}\n          </Typography>\n  \n          <Typography variant=\"body1\" className={classes.body}>\n            License Type: {robotState.license_information.license_type}\n          </Typography>\n  \n          <Typography variant=\"body1\" className={classes.body}>\n            Issue Date: {robotState.license_information.issue_date}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Customer Name: {robotState.license_information.customer_name}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.body}>\n            Features: {robotState.license_information.features}\n          </Typography>\n  \n        </CardContent>\n      </Card>\n    )\n  }\n","import React, { useEffect } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport GeneralCard from \"../components/GeneralCard\"\nimport GpsCard from \"../components/GpsCard\"\nimport MechanicalBrakeCard from \"../components/MechanicalBrakeCard\"\nimport MotorControllerCard from \"../components/MotorControllerCard\"\nimport SubjectVehicleCard from \"../components/SubjectVehicleCard\"\nimport LicenseCard from \"../components/LicenseCard\"\nimport Networking from \"../networking\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function Page({ networking, setTopBarTitle }: Props) {\n  const robotState = networking.robotState\n\n  useEffect(() => {\n    setTopBarTitle(\"Robot Status\")\n  }, [setTopBarTitle])\n  return (\n    <div>\n      <Grid container spacing={2} alignItems=\"flex-start\">\n\n        <Grid item>\n          <GeneralCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <LicenseCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <GpsCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <SubjectVehicleCard robotState={robotState} />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftFront}\n            id={1}\n            location=\"left_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.leftBack}\n            id={2}\n            location=\"left_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightFront}\n            id={3}\n            location=\"right_front\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MotorControllerCard\n            motorController={robotState.motorControllers.rightBack}\n            id={4}\n            location=\"right_back\"\n          />\n        </Grid>\n\n        <Grid item>\n          <MechanicalBrakeCard robotState={robotState} />\n        </Grid>\n        \n      </Grid>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Error Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.errorMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport PathRecorder from \"../../path-recorder\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default function Component({ networking, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [snackOpen, setSnackOpen] = useState(false)\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < pathRecorder.numberOfPoints; i++) {\n      pathString = pathString.concat(\n        pathRecorder.latitudes[i].toFixed(17).toString(),\n        \" \",\n        pathRecorder.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    if (pathRecorder.recordMode === 0) {\n      saveAs(blob, \"stride_path.txt\")\n    }\n    else if (pathRecorder.recordMode === 1) {\n      saveAs(blob, \"vehicle_path.txt\")\n    }\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\n          <li>The GPS cordinates of the robot can be recorded here.</li>\n          <li>Move the robot to create a path when recording starts.</li>\n          <li>Tips for recording:</li>\n          <ul>\n            <li>Since speed is not recorded, move robot slowly to accurately capture path.</li>\n            <li>\n              You may record path that has sharp corners. Robot can be programmed later to stop at the corner\n              and rotate to the specified heading before moving again.\n            </li>\n          </ul>\n        </ul>\n      </Typography>\n      <Divider />\n\n      <Typography variant=\"body1\" className={classes.body}>\n        {pathRecorder.isRecording ? (\n          <div>\n            {pathRecorder.recordMode ? \"Status: Recording Vehicle\" : \"Status: Recording Robot\"}\n          </div>\n          ) : \"Status: Not Recording\"}\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Points Recorded: {pathRecorder.numberOfPoints}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.requestRecording()\n        }}\n      >\n        record robot\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.requestVehicleRecording()\n        }}\n      >\n        record vehicle\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathRecorder.stopRecording()\n        }}\n      >\n        stop\n      </Button>\n\n      <br />\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n\n      <br />\n\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={8000}\n        onClose={() => {\n          setSnackOpen(false)\n        }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Go to the SHARED tab above in another connected device.\n        </MuiAlert>\n      </Snackbar>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          setSnackOpen(true)\n          networking.senders.sharePath(pathRecorder.latitudes, pathRecorder.longitudes)\n        }}\n      >\n        share with other devices\n      </Button>\n    </div>\n  )\n}\n","import React, { useRef, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { EN_factors, LL2NE} from \"../../shared/utilities\"\nimport PathRecorder from \"../../path-recorder\"\n\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 90vh))\",\n  paddingTop: \"calc((min(100%, 90vh)) - 15px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathViewer {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values\n  norths: number[] // array of North values\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n  }\n\n  importFromRecorder(latitudes: number[], longitudes: number[], chartRef: React.MutableRefObject<any>) {\n    this.latitudes = latitudes\n    this.longitudes = longitudes\n\n    this.easts = []\n    this.norths = []\n\n    const [E_factor, N_factor] = EN_factors(latitudes[0])\n    this.E_factor = E_factor\n    this.N_factor = N_factor\n\n    this.lat_ref = latitudes[0]\n    this.long_ref = longitudes[0]\n\n    for (let i = 0; i < latitudes.length; i++) {\n      const [pos_north, pos_east] = LL2NE(\n        latitudes[i],\n        longitudes[i],\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      this.easts.push(pos_east)\n      this.norths.push(pos_north)\n    }\n\n    chartRef.current.data = this.createChartData()\n  }\n\n  isNumeric(str: string) {\n    return (\n      !isNaN(Number(str)) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n      !isNaN(parseFloat(str))\n    ) // ...and ensure strings of whitespace fail\n  }\n\n  importFromFile(importFileRef: React.MutableRefObject<any>, chartRef: React.MutableRefObject<any>) {\n    this.easts = []\n    this.norths = []\n    this.latitudes = []\n    this.longitudes = []\n\n    const file = importFileRef.current.files[0]\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const text = event.target.result\n      const splitText = text.split(\"\\n\")\n\n      let lineNumber = 1\n      for (const line of splitText) {\n        // omit the first line in file\n        if (lineNumber === 1) {\n          lineNumber++\n          continue\n        }\n\n        const latLong = line.split(/ |\\t/)\n        if (latLong.length === 2) {\n          if (this.isNumeric(latLong[0]) && this.isNumeric(latLong[1])) {\n            this.latitudes.push(Number(latLong[0]))\n            this.longitudes.push(Number(latLong[1]))\n          }\n        }\n      }\n\n      const [E_factor, N_factor] = EN_factors(this.latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = this.latitudes[0]\n      this.long_ref = this.longitudes[0]\n\n      for (let i = 0; i < this.latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          this.latitudes[i],\n          this.longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      importFileRef.current.value = \"\" // this is needed for importing the same file that has been saved over\n\n      chartRef.current.data = this.createChartData()\n    })\n    reader.readAsText(file)\n  }\n\n  createChartData() {\n    const chartData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      chartData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return chartData\n  }\n\n  twoPointDistance(x1: number, y1: number, x2: number, y2: number) {\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n  }\n}\n\ninterface Props {\n  pathRecorder: PathRecorder\n}\n\nconst pathViewer = new PathViewer()\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nexport default function Component({ pathRecorder }: Props) {\n  const classes = useStyles()\n  const importFileRef: React.MutableRefObject<any> = useRef()\n\n  // XY Chart\n  const chartRef: React.MutableRefObject<any> = useRef()\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n    chart.paddingRight = 20\n\n    chart.data = pathViewer.createChartData()\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.3\n    xAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.3\n    yAxis.renderer.baseGrid.strokeWidth = 1\n\n    // Create series\n    let series1 = chart.series.push(new am4charts.LineSeries())\n    series1.dataFields.valueX = \"ax\"\n    series1.dataFields.valueY = \"ay\"\n    series1.dataFields.value = \"aValue\"\n    series1.strokeWidth = 2\n\n    let bullet1 = series1.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    //scrollbars\n    chart.scrollbarX = new am4core.Scrollbar()\n    chart.scrollbarY = new am4core.Scrollbar()\n\n    chartRef.current = chart\n\n    return () => {\n      chart.dispose()\n    }\n  }, [])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          pathViewer.importFromRecorder(pathRecorder.latitudes, pathRecorder.longitudes, chartRef)\n        }}\n      >\n        import from recorder\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        import from file\n        <input\n          type=\"file\"\n          ref={importFileRef}\n          onChange={() => pathViewer.importFromFile(importFileRef, chartRef)}\n          hidden\n        />\n      </Button>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { saveAs } from \"file-saver\"\nimport PathRecorder from \"../../path-recorder\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  networking: Networking\n  pathRecorder: PathRecorder\n}\n\nexport default function Component({ networking, pathRecorder }: Props) {\n  const classes = useStyles()\n\n  const sharedPath = networking.receivedSharedPath\n\n  function exportPath() {\n    let pathString = \"Global\\n\"\n    for (let i = 0; i < sharedPath.latitudes.length; i++) {\n      pathString = pathString.concat(\n        sharedPath.latitudes[i].toFixed(17).toString(),\n        \" \",\n        sharedPath.longitudes[i].toFixed(17).toString(),\n        \"\\n\"\n      )\n    }\n    let blob = new Blob([pathString], { type: \"text/plain;charset=utf-8\" })\n    if (pathRecorder.recordMode === 0) {\n      saveAs(blob, \"stride_path.txt\")\n    }\n    else if (pathRecorder.recordMode === 1) {\n      saveAs(blob, \"vehicle_path.txt\")\n    }\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Shared path from another device will appear here.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Time Received: {sharedPath.timestamp} <br />\n        Number of Points: {sharedPath.latitudes.length}\n      </Typography>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          exportPath()\n        }}\n      >\n        export To file\n      </Button>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorderTab from \"../components/path/PathRecoderTab\"\nimport PathViewingTab from \"../components/path/PathViewingTab\"\nimport SharedPathTab from \"../components/path/SharedPathTab\"\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path\")\n  }, [setTopBarTitle])\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"Record\" className={classes.tab} />\n          <Tab label=\"View\" className={classes.tab} />\n          <Tab label=\"Shared\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PathRecorderTab networking={networking} pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PathViewingTab pathRecorder={pathRecorder} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <SharedPathTab networking={networking} pathRecorder={pathRecorder}/>\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useRef } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  snackbar: {\n    opacity: 0.9,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const uploadPathRef: React.MutableRefObject<any> = useRef()\n  const uploadVehiclePathRef: React.MutableRefObject<any> = useRef()\n  const uploadScriptRef: React.MutableRefObject<any> = useRef()\n\n  const [wrongExtensionSnackbarOpen, setWrongExtensionSnackbarOpen] = useState(false)\n\n  function uploadPath() {\n    const file = uploadPathRef.current.files[0]\n    uploadPathRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"txt\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadPath(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n  function uploadVehiclePath() {\n    const file = uploadVehiclePathRef.current.files[0]\n    uploadVehiclePathRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"txt\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadVehiclePath(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  function uploadScript() {\n    const file = uploadScriptRef.current.files[0]\n    uploadScriptRef.current.value = \"\" // this is needed for uploading file with same filename but different content\n\n    if (file.name.split(\".\")[1] !== \"py\") {\n      setWrongExtensionSnackbarOpen(true)\n      return\n    }\n\n    const reader = new FileReader()\n    reader.addEventListener(\"load\", (event: any) => {\n      const fileContent = event.target.result\n      networking.senders.uploadScript(file.name, fileContent)\n    })\n    reader.readAsText(file)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\" className={classes.notes}>\n        Note that the robot only stores the most recently uploaded path and script files.\n      </Typography>\n\n      <Typography variant=\"body1\" className={classes.body}>\n        Path (.txt file): {networking.robotState.pathFollower.pathName} <br />\n        Vehicle Path (.txt file): {networking.robotState.pathFollower.vehiclePathName} <br />\n        Script (.py file): {networking.robotState.pathFollower.scriptName}\n      </Typography>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload path\n        <input\n          type=\"file\"\n          ref={uploadPathRef}\n          onChange={() => {\n            uploadPath()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload vehicle path\n        <input\n          type=\"file\"\n          ref={uploadVehiclePathRef}\n          onChange={() => {\n            uploadVehiclePath()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" component=\"label\">\n        upload script\n        <input\n          type=\"file\"\n          ref={uploadScriptRef}\n          onChange={() => {\n            uploadScript()\n          }}\n          hidden\n        />\n      </Button>\n\n      <Snackbar\n        className={classes.snackbar}\n        open={wrongExtensionSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setWrongExtensionSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          Incorrect file extension\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useRef, useState, useLayoutEffect } from \"react\"\nimport * as am4core from \"@amcharts/amcharts4/core\"\nimport * as am4charts from \"@amcharts/amcharts4/charts\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Networking from \"../../networking\"\nimport { EN_factors, LL2NE } from \"../../shared/utilities\"\nimport { GNSS_FIX_TYPE } from \"../../shared/constants\"\nimport { useEffect } from 'react';\n\n// Non-material-ui CSS, used to maintain the chart's aspect ratio\n// This trick works because the percentage of paddingTop refers to the width of the parent element\nconst chartContainer = {\n  // make sure the min function is the same for both width and paddingTop\n  width: \"calc(min(100%, 70vh))\",\n  paddingTop: \"calc((min(100%, 70vh)) - 0px)\",\n  position: \"relative\",\n} as React.CSSProperties\n\nconst chartStyle = {\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  position: \"absolute\",\n} as React.CSSProperties\n\nclass PathDisplay {\n  latitudes: number[]\n  longitudes: number[]\n  easts: number[] // array of East values for robot\n  norths: number[] // array of North values for robot\n  vehicle_easts: number[] //array of East values for vehicle\n  vehicle_norths: number[] //array of North values for vehicles\n  E_factor: number\n  N_factor: number\n  lat_ref: number // latitude reference\n  long_ref: number //longitude reference\n  robot_east: number\n  robot_north: number\n\n  constructor() {\n    this.latitudes = [0]\n    this.longitudes = [0]\n    this.easts = [0]\n    this.norths = [0]\n    this.vehicle_easts = [0]\n    this.vehicle_norths = [0]\n    this.E_factor = 0\n    this.N_factor = 0\n    this.lat_ref = 0\n    this.long_ref = 0\n    this.robot_east = 0\n    this.robot_north = 0\n  }\n\n  // Robot Path \n  plotPathSeries(\n    latitudes: number[],\n    longitudes: number[],\n    pathSeriesRef: React.MutableRefObject<any>,\n    xAxisRef: React.MutableRefObject<any>,\n    yAxisRef: React.MutableRefObject<any>,\n    forceRun: boolean\n  ) {\n    if (forceRun === true || (this.latitudes !== latitudes && pathSeriesRef.current !== undefined)) {\n      this.latitudes = latitudes\n      this.longitudes = longitudes\n\n      this.easts = []\n      this.norths = []\n\n      const [E_factor, N_factor] = EN_factors(latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = latitudes[0]\n      this.long_ref = longitudes[0]\n\n      for (let i = 0; i < latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          latitudes[i],\n          longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.easts.push(pos_east)\n        this.norths.push(pos_north)\n      }\n\n      const eastMin = Math.min(...this.easts)\n      const eastMax = Math.max(...this.easts)\n      const northMin = Math.min(...this.norths)\n      const northMax = Math.max(...this.norths)\n\n      const axisLength = Math.max(eastMax - eastMin, northMax - northMin)\n\n      xAxisRef.current.min = eastMin - 3\n      xAxisRef.current.max = eastMin + axisLength + 3\n      yAxisRef.current.min = northMin - 3\n      yAxisRef.current.max = northMin + axisLength + 3\n\n      pathSeriesRef.current.data = this.createPathSeriesData()\n    }\n  }\n\n  createPathSeriesData() {\n    const pathSeriesData = []\n    for (let i = 0; i < this.easts.length; i++) {\n      pathSeriesData.push({ ax: this.easts[i], ay: this.norths[i], aValue: i })\n    }\n    return pathSeriesData\n  }\n\n  // Robot position\n  plotRobotSeries(\n    latitude: number,\n    longitude: number,\n    headingRadian: number,\n    robotSeriesRef: React.MutableRefObject<any>\n  ) {\n    if (robotSeriesRef.current !== undefined) {\n      const [pos_north, pos_east] = LL2NE(\n        latitude,\n        longitude,\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      robotSeriesRef.current.addData(\n        { bx: pos_east, by: pos_north, angle: (headingRadian / Math.PI) * 180 },\n        1\n      )\n      \n      // For displaying the numerical values of robot location\n      this.robot_east = pos_east\n      this.robot_north = pos_north\n    }\n  }\n\n  // Vehicle Path\n  plotVehiclePathSeries(\n    latitudes: number[],\n    longitudes: number[],\n    robot_lat: number[],\n    robot_long: number[],\n    vehiclePathSeriesRef: React.MutableRefObject<any>,\n    xAxisRef: React.MutableRefObject<any>,\n    yAxisRef: React.MutableRefObject<any>,\n    forceRun: boolean\n  ) {\n    if (forceRun === true || (this.latitudes !== latitudes && vehiclePathSeriesRef.current !== undefined)) {\n      this.latitudes = latitudes\n      this.longitudes = longitudes\n\n      this.vehicle_easts = []\n      this.vehicle_norths = []\n\n      const [E_factor, N_factor] = EN_factors(latitudes[0])\n      this.E_factor = E_factor\n      this.N_factor = N_factor\n\n      this.lat_ref = robot_lat[0]\n      this.long_ref = robot_long[0]\n\n      for (let i = 0; i < latitudes.length; i++) {\n        const [pos_north, pos_east] = LL2NE(\n          latitudes[i],\n          longitudes[i],\n          this.lat_ref,\n          this.long_ref,\n          this.E_factor,\n          this.N_factor\n        )\n\n        this.vehicle_easts.push(pos_east)\n        this.vehicle_norths.push(pos_north)\n      }\n\n      const eastMin = Math.min(...this.vehicle_easts)\n      const eastMax = Math.max(...this.vehicle_easts)\n      const northMin = Math.min(...this.vehicle_norths)\n      const northMax = Math.max(...this.vehicle_norths)\n\n      const axisLength = Math.max(eastMax - eastMin, northMax - northMin)\n\n      xAxisRef.current.min = eastMin - 3\n      xAxisRef.current.max = eastMin + axisLength + 3\n      yAxisRef.current.min = northMin - 3\n      yAxisRef.current.max = northMin + axisLength + 3\n\n      vehiclePathSeriesRef.current.data = this.createVehiclePathSeriesData()\n    }\n  }\n\n  createVehiclePathSeriesData() {\n    const vehiclePathSeriesData = []\n    for (let i = 0; i < this.vehicle_easts.length; i++) {\n      vehiclePathSeriesData.push({ cx: this.vehicle_easts[i], cy: this.vehicle_norths[i], cValue: i })\n    }\n    return vehiclePathSeriesData\n  }\n\n  // Vehicle Location\n  plotVehiclePositionSeries(\n    latitude: number,\n    longitude: number,\n    headingDeg: number,\n    vehiclePositionSeriesRef: React.MutableRefObject<any>\n  ) {\n    if (vehiclePositionSeriesRef.current !== undefined) {\n      const [pos_north, pos_east] = LL2NE(\n        latitude,\n        longitude,\n        this.lat_ref,\n        this.long_ref,\n        this.E_factor,\n        this.N_factor\n      )\n\n      vehiclePositionSeriesRef.current.addData(\n        { dx: pos_east, dy: pos_north, veh_angle: headingDeg},\n        1\n      )\n    }\n  }\n}\n\nconst pathDisplay = new PathDisplay()\n\nconst useStyles = makeStyles((theme) => ({\n  notes: {\n    margin: theme.spacing(1),\n  },\n  body: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(1),\n    fontSize: 11,\n  },\n  messageBox: {\n    maxHeight: 10,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n  const [isVehiclePathVisible, setIsVehiclePathVisible] = useState(false)\n\n  const downloadTestData = () => {\n    const link = document.createElement(\"a\")\n    link.href = `http://195.0.0.${networking.guiState.id}:3001/test-data.csv`\n    link.click()\n  }\n\n  const pathSeriesRef: React.MutableRefObject<any> = useRef()\n  const robotSeriesRef: React.MutableRefObject<any> = useRef()\n  const vehiclePathSeriesRef: React.MutableRefObject<any> = useRef()\n  const vehiclePositionSeriesRef: React.MutableRefObject<any> = useRef()\n  const xAxisRef: React.MutableRefObject<any> = useRef()\n  const yAxisRef: React.MutableRefObject<any> = useRef()\n  const chartRef: React.MutableRefObject<any> = useRef();\n\n  const toggleVehiclePathVisibility = () => {\n    setIsVehiclePathVisible((prevState) => {\n      const newVisibility = !prevState;\n  \n      // Toggle vehicle path visibility\n      if (vehiclePathSeriesRef.current) {\n        vehiclePathSeriesRef.current.visible = newVisibility;\n      }\n  \n      // Get appropriate coordinates based on visibility\n      const allEasts = newVisibility\n        ? [...pathDisplay.easts, ...pathDisplay.vehicle_easts]\n        : [...pathDisplay.easts];\n  \n      const allNorths = newVisibility\n        ? [...pathDisplay.norths, ...pathDisplay.vehicle_norths]\n        : [...pathDisplay.norths];\n  \n      // Calculate zoom bounds\n      if (allEasts.length > 0 && allNorths.length > 0) {\n        const eastMin = Math.min(...allEasts);\n        const eastMax = Math.max(...allEasts);\n        const northMin = Math.min(...allNorths);\n        const northMax = Math.max(...allNorths);\n  \n        // Update axis ranges with a delay to ensure proper state update\n        setTimeout(() => {\n          if (xAxisRef.current && yAxisRef.current) {\n            xAxisRef.current.min = eastMin - 3;\n            xAxisRef.current.max = eastMax + 3;\n            yAxisRef.current.min = northMin - 3;\n            yAxisRef.current.max = northMax + 3;\n  \n            chartRef.current?.validateLayout();\n          }\n        }, 100);\n      }\n  \n      return newVisibility;\n    });\n  };\n  \n\n  //Handle the initial zoom state of the chart (Default to view of robot path only):\n  useEffect(() => {\n    const allEasts = pathDisplay.easts; // Only robot path easts initially\n    const allNorths = pathDisplay.norths; // Only robot path norths initially\n\n    if (allEasts.length > 0 && allNorths.length > 0) {\n      const eastMin = Math.min(...allEasts);\n      const eastMax = Math.max(...allEasts);\n      const northMin = Math.min(...allNorths);\n      const northMax = Math.max(...allNorths);\n\n      if (xAxisRef.current && yAxisRef.current) {\n        setTimeout(() => {\n          xAxisRef.current.min = eastMin - 3;\n          xAxisRef.current.max = eastMax + 3;\n          yAxisRef.current.min = northMin - 3;\n          yAxisRef.current.max = northMax + 3;\n\n          chartRef.current?.invalidateRawData();\n          chartRef.current?.validateData();\n          chartRef.current?.validateLayout();\n        }, 100);\n      }\n    }\n  }, []);\n\n  pathDisplay.plotRobotSeries(\n    networking.robotState.gps.latitude,\n    networking.robotState.gps.longitude,\n    networking.robotState.gps.heading,\n    robotSeriesRef\n  )\n\n  pathDisplay.plotVehiclePositionSeries(\n    networking.robotState.targetVehicle.latitude,\n    networking.robotState.targetVehicle.longitude,\n    networking.robotState.targetVehicle.heading,\n    vehiclePositionSeriesRef\n  )  \n\n  useLayoutEffect(() => {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n    chartRef.current = chart\n\n    chart.paddingRight = 20\n\n    // Create X axis\n    let xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n    xAxis.renderer.minGridDistance = 40\n    xAxis.title.text = \"East\"\n    xAxis.renderer.baseGrid.strokeOpacity = 0.5\n    xAxis.renderer.baseGrid.strokeWidth = 1\n    xAxis.strictMinMax = true\n\n    // Create y axis\n    let yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    yAxis.renderer.minGridDistance = 40\n    yAxis.title.text = \"North\"\n    yAxis.renderer.baseGrid.strokeOpacity = 0.5\n    yAxis.renderer.baseGrid.strokeWidth = 1\n    yAxis.strictMinMax = true\n\n    // Robot Path series\n    let pathSeries = chart.series.push(new am4charts.LineSeries())\n    pathSeries.dataFields.valueX = \"ax\"\n    pathSeries.dataFields.valueY = \"ay\"\n    pathSeries.dataFields.value = \"aValue\"\n    pathSeries.strokeWidth = 2\n\n    let bullet1 = pathSeries.bullets.push(new am4charts.CircleBullet())\n    bullet1.circle.radius = 3\n\n    // Robot Location series\n    let robotSeries = chart.series.push(new am4charts.LineSeries())\n    robotSeries.dataFields.valueX = \"bx\"\n    robotSeries.dataFields.valueY = \"by\"\n    robotSeries.strokeWidth = 2\n    robotSeries.stroke = am4core.color(\"red\")\n\n    robotSeries.data = [ // It must be initialized with two data points to prevent blinking\n      { bx: 0, by: 0, angle: 0 },\n      { bx: 0, by: 0, angle: 0 },\n    ]\n\n    let bullet2 = robotSeries.bullets.push(new am4charts.Bullet())\n    bullet2.propertyFields.rotation = \"angle\"\n\n    let arrow = bullet2.createChild(am4core.Triangle) // Add a triangle to act as an arrow for robot position\n    arrow.horizontalCenter = \"middle\"\n    arrow.verticalCenter = \"middle\"\n    arrow.direction = \"top\"\n    arrow.width = 10\n    arrow.height = 25\n    arrow.fill = am4core.color(\"#ffffff00\")\n    arrow.strokeWidth = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet1.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n\n    // Vehicle Path Series\n    let vehiclePathSeries = chart.series.push(new am4charts.LineSeries())\n    vehiclePathSeriesRef.current = vehiclePathSeries;\n    vehiclePathSeries.dataFields.valueX = \"cx\"\n    vehiclePathSeries.dataFields.valueY = \"cy\"\n    vehiclePathSeries.dataFields.value = \"cValue\"\n    vehiclePathSeries.strokeWidth = 2\n    vehiclePathSeries.fill = am4core.color(\"orange\")\n    vehiclePathSeries.stroke = am4core.color(\"orange\")\n    let bullet3 = vehiclePathSeries.bullets.push(new am4charts.CircleBullet())\n    bullet3.circle.radius = 3\n    vehiclePathSeries.hidden = !isVehiclePathVisible // Hide or show vehicle path based on state\n\n    // Vehicle Location Series\n    let vehiclePositionSeries = chart.series.push(new am4charts.LineSeries())\n    vehiclePositionSeries.dataFields.valueX = \"dx\"\n    vehiclePositionSeries.dataFields.valueY = \"dy\"\n    vehiclePositionSeries.strokeWidth = 2\n    vehiclePositionSeries.stroke = am4core.color(\"purple\")\n    \n    vehiclePositionSeries.data = [ // It must be initialized with two data points to prevent blinking\n      { dx: 0, dy: 0, veh_angle: 0 },\n      { dx: 0, dy: 0, veh_angle: 0 },\n    ]\n\n    let bullet4 = vehiclePositionSeries.bullets.push(new am4charts.Bullet())\n    bullet4.propertyFields.rotation = \"veh_angle\"\n\n    let vehicleArrow = bullet4.createChild(am4core.Triangle) //Triangle for Vehicle Position\n    vehicleArrow.horizontalCenter = \"middle\"\n    vehicleArrow.verticalCenter = \"middle\"\n    vehicleArrow.direction = \"top\"\n    vehicleArrow.width = 10\n    vehicleArrow.height = 25\n    vehicleArrow.fill = am4core.color(\"#ffffff00\")\n    vehicleArrow.strokeWidth = 3\n\n    chart.numberFormatter.numberFormat = \"#.##\"\n    bullet3.tooltipText = \"[bold]Index {value}[/] ({valueX}, {valueY})\"\n    vehicleArrow.visible = isVehiclePathVisible; // Hide or show vehicle location based on state\n\n    //Get current ref values\n    pathSeriesRef.current = pathSeries\n    robotSeriesRef.current = robotSeries\n    vehiclePathSeriesRef.current = vehiclePathSeries\n    vehiclePositionSeriesRef.current = vehiclePositionSeries\n    xAxisRef.current = xAxis\n    yAxisRef.current = yAxis\n\n    pathDisplay.plotPathSeries(\n      networking.pathToFollow.latitudes,\n      networking.pathToFollow.longitudes,\n      pathSeriesRef,\n      xAxisRef,\n      yAxisRef,\n      true\n    )\n\n    pathDisplay.plotVehiclePathSeries(\n      networking.vehiclePathToFollow.latitudes,\n      networking.vehiclePathToFollow.longitudes,\n      networking.pathToFollow.latitudes,\n      networking.pathToFollow.longitudes,\n      vehiclePathSeriesRef,\n      xAxisRef,\n      yAxisRef,\n      true\n    )\n\n    return () => {\n      chart.dispose()\n    }\n  }, [networking, isVehiclePathVisible])\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.startPathFollowing()\n        }}\n      >\n        start test\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          networking.senders.returnToStart()\n        }}\n      >\n        return to start position\n      </Button>\n\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => {\n          downloadTestData()\n        }}\n      >\n        download test data\n      </Button>\n\n      <Typography variant=\"body2\" className={classes.body}>\n        GPS status: {GNSS_FIX_TYPE[networking.robotState.gps.status]}\n        <br />\n        Robot Location: ({pathDisplay.robot_east.toFixed(2)}, {pathDisplay.robot_north.toFixed(2)})\n        <br />\n        Heading: {((networking.robotState.gps.heading / Math.PI) * 180).toFixed(0)} deg\n        <br />\n        Speed:{\" \"}\n        {Math.sqrt(\n          networking.robotState.gps.eastVelocity ** 2 + networking.robotState.gps.northVelocity ** 2\n        ).toFixed(2)}{\" \"}\n        m/s\n      </Typography>\n\n      {/* Checkbox for toggling vehicle path visibility */}\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={isVehiclePathVisible}\n          onChange={toggleVehiclePathVisibility}\n        />\n        Show Vehicle\n      </label>\n\n      <div style={chartContainer}>\n        <div id=\"chartdiv\" style={chartStyle} />\n      </div>\n\n      <Typography variant=\"h6\" style={{ marginTop: \"15px\" }}>\n        Test Log\n      </Typography>\n      <Box\n        mb={2}\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"250px\"\n        style={{\n          border: \"2px solid lightgrey\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\",\n          overflowX: \"scroll\",\n          padding: \"10px\",\n        }}\n      >\n        {networking.testLogMessages.map((msg) => (\n          <div key={msg}> {msg} </div>\n        ))}\n      </Box>\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport Typography from \"@material-ui/core/Typography\"\nimport AppBar from \"@material-ui/core/AppBar\"\n\nimport PathRecorder from \"../path-recorder\"\nimport Networking from \"../networking\"\nimport PrepareTab from \"../components/path_following/PrepareTab\"\nimport TestTab from \"../components/path_following/TestTab\"\n\ninterface Props {\n  networking: Networking\n  setTopBarTitle: React.Dispatch<React.SetStateAction<string>>\n  pathRecorder: PathRecorder\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tab: {\n    color: \"rgb(64,64,64)\",\n  },\n}))\n\nexport default function Page({ networking, setTopBarTitle, pathRecorder }: Props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  useEffect(() => {\n    setTopBarTitle(\"Path Following\")\n  }, [setTopBarTitle])\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n        >\n          <Tab label=\"prepare\" className={classes.tab} />\n          <Tab label=\"test\" className={classes.tab} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PrepareTab networking={networking} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TestTab networking={networking} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  TempInfoButton: {\n    paddingBottom: 1,\n    paddingTop: 0,\n    marginLeft: theme.spacing(1),\n    color: \"white\",\n  },\n  TempInfoCard: {\n    width: 400,\n  },\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [maxMotorTemp, setMaxMotorTemp] = useState(0)\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [maxRobotTemp, setMaxRobotTemp] = useState(0)\n\n  // handleMotorTemperature()\n  useEffect(() => {\n    const motor_temp_threshold = 185 //temp thresholds for motors/robot to open snackbar (needs repeated later for to specify popup)\n    const robot_temp_threshold = 140\n\n    const mcs = networking.robotState.motorControllers\n    const robot = networking.robotState\n    const max_t = Math.max(\n      mcs.leftBack.windingTemperature,\n      mcs.leftFront.windingTemperature,\n      mcs.rightBack.windingTemperature,\n      mcs.rightFront.windingTemperature\n    )\n    \n    const max_robot_t = Math.max(\n      robot.batteryTemperature,\n      robot.robotTemperature\n    )\n\n    setMaxMotorTemp(max_t)\n    setMaxRobotTemp(max_robot_t)\n\n    if (max_t > motor_temp_threshold || max_robot_t > robot_temp_threshold) {\n      setSnackbarOpen(true)\n      } else {\n      setSnackbarOpen(false)\n      }\n  }, [networking.robotState])\n\n  // Temp thresholds constants (repeat of useEffect constants from above)\n  const motor_threshold_temp = 185\n  const robot_threshold_temp = 140\n\n  // If statements for different snackbar popups/dialogue\n  if (maxMotorTemp > motor_threshold_temp && maxRobotTemp > robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n              •Both the motor winding temperature and robot/battery temperature are approaching temperature thresholds. <br/>\n              •Upon the robot/battery temperature reaching the temperature threshold, robot operation will be disabled. <br/>\n              •Upon the motor winding temperature reaching its threshold, STRIDE will enter descender mode if it is on a hill, \n              unless E-stopped, where it will hold until some more critical temperature threshold is reached. <br/>\n              •Avoid leaving the STRIDE E-stopped on a hill whenever possible. <br/>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n        \n        <Snackbar className={classes.snackbar} open={snackbarOpen}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Motor Temp: {maxMotorTemp} / 185F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n            <br/> Robot Temp: {maxRobotTemp} / 160F <br/>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n  else if (maxMotorTemp > motor_threshold_temp && maxRobotTemp <= robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n              •Upon the motor winding temperature reaching its threshold, STRIDE will enter descender mode if it is on a hill, \n              unless E-stopped, where it will hold until some more critical temperature threshold is reached. <br/>\n              •Avoid leaving the STRIDE E-stopped on a hill whenever possible. <br/> \n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n        \n        <Snackbar className={classes.snackbar} open={snackbarOpen} anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Motor Temp: {maxMotorTemp} / 185F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n\n  else if (maxMotorTemp <= motor_threshold_temp && maxRobotTemp > robot_threshold_temp) {\n    return (\n      <div>\n        <Modal\n          style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n        >\n          <Card className={classes.TempInfoCard} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"body1\">\n                Upon the robot/battery temperature reaching the temperature threshold, robot operation will be disabled. <br/>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Modal>\n\n        <Snackbar className={classes.snackbar} open={snackbarOpen} anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            Robot Temp: {maxRobotTemp} / 160F\n            <IconButton\n              className={classes.TempInfoButton}\n              size=\"small\"\n              onClick={() => {\n                setModalOpen(true)\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          </MuiAlert>\n        </Snackbar>\n      </div>\n    )\n  }\n\nelse {\n  return null\n}\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport Networking from \"../networking\"\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    opacity: 0.85,\n  },\n}))\n\ninterface Props {\n  networking: Networking\n}\n\nexport default function Component({ networking }: Props) {\n  const classes = useStyles()\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n  useEffect(() => {\n    if (networking.isNewTestDataReady === true) {\n      setSnackbarOpen(true)\n      networking.isNewTestDataReady = false\n    }\n  }, [setSnackbarOpen, networking, networking.isNewTestDataReady])\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.snackbar}\n        open={snackbarOpen}\n        autoHideDuration={5000}\n        onClose={() => {\n          setSnackbarOpen(false)\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n          Test Data Ready for Download\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Modal from \"@material-ui/core/Modal\"\n\nimport Networking from \"../networking\"\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nexport default function Component({ networking }: { networking: Networking }) {\n  const classes = useStyles()\n  const [modalStyle] = React.useState(getModalStyle)\n  const [open, setOpen] = useState(false)\n\n  // function reset() {\n  //   networking.senders.resetMicroController()\n  // }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h3>The micro-controller requires a reset. Please move robot to flat ground and press the reset button.</h3>\n    </div>\n  )\n\n  useEffect(() => {\n    setOpen(!networking.robotState.portentaHeartbeat)\n  },[networking.robotState.portentaHeartbeat])\n\n  return (\n    <div>\n      <Modal open={open}>{body}</Modal>\n    </div>\n  )\n}\n","import \"./App.css\"\nimport React, { useState, useEffect } from \"react\"\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport { DRAWER_WIDTH } from \"./shared/constants\"\n\nimport Networking from \"./networking\"\n\nimport SideDrawer from \"./components/SideDrawer\"\nimport TopBar from \"./components/TopBar\"\nimport InitialSetup from \"./pages/InitialSetup\"\nimport ManualControl from \"./pages/ManualControl\"\nimport RobotStatus from \"./pages/RobotStatus\"\nimport Path from \"./pages/Path\"\nimport PathFollowing from \"./pages/PathFollowing\"\nimport AutoDownhill from \"./components/AutoDownhill\"\nimport TestDataReadyPopUp from \"./components/TestDataReadyPopUp\"\nimport ResetMicroControllerModal from \"./components/ResetMicroControllerModal\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PathRecorder from \"./path-recorder\"\n\nlet networking = new Networking(\"\", false)\n\nconst pathRecorder = new PathRecorder() // initialized in App.tsx because components like TopBar needs its data\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar, // necessary for content to be below app bar\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n    },\n    padding: theme.spacing(3),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n\n  const [, setForceRerender] = useState({})\n  const [topBarTitle, setTopBarTitle] = useState(\"\")\n  const [mobileOpen, setMobileOpen] = useState(false) // open status of the side menu in mobile screen\n\n  function handleRobotConnect(id: string) {\n    if (id === \"useRecentId\") {\n      networking.socket.close()\n      networking = new Networking(networking.lastConnectedId, networking.isConnectedOnce)\n    } else {\n      networking.socket.close()\n      networking = new Networking(id, false)\n    }\n  }\n  function handleRobotDisconnect() {\n    networking.socket.close()\n  }\n\n  useEffect(() => {\n    const id1 = setInterval(() => {\n      setForceRerender({})\n      const latitude = networking.robotState.gps.latitude // robot latitude\n      const longitude = networking.robotState.gps.longitude // robot longitude\n      const vehicleLatitude = networking.robotState.targetVehicle.latitude // vehicle latitude\n      const vehicleLongitude = networking.robotState.targetVehicle.longitude // vehicle longitude\n      if (pathRecorder.recordMode === 0) { // record mode 0 = robot\n        // record robot path when requested\n        pathRecorder.recordWhenRequested(latitude, longitude)\n      }\n      else if (pathRecorder.recordMode === 1) { // record mode 1 = vehicle\n      // record vehicle path when requested\n        pathRecorder.recordWhenRequested(vehicleLatitude, vehicleLongitude)\n      }\n    }, 100)\n\n    return () => {\n      clearInterval(id1)\n    }\n  }, [])\n\n  // console.log(\"rendered\")\n\n  return (\n    <Router>\n      <CssBaseline />\n      <ResetMicroControllerModal networking={networking} />\n      <AutoDownhill networking={networking} />\n      <TestDataReadyPopUp networking={networking} />\n      <TopBar\n        networking={networking}\n        setMobileOpen={setMobileOpen}\n        topBarTitle={topBarTitle}\n        pathRecorder={pathRecorder}\n        handleRobotConnect={handleRobotConnect}\n      />\n      <SideDrawer networking={networking} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/initialsetup\" />\n          </Route>\n\n          <Route path=\"/initialsetup\">\n            <InitialSetup\n              networking={networking}\n              handleRobotConnect={handleRobotConnect}\n              handleRobotDisconnect={handleRobotDisconnect}\n              setTopBarTitle={setTopBarTitle}\n            />\n          </Route>\n\n          <Route path=\"/manualcontrol\">\n            <ManualControl\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n\n          <Route path=\"/robotstatus\">\n            <RobotStatus networking={networking} setTopBarTitle={setTopBarTitle} />\n          </Route>\n\n          <Route path=\"/path\">\n            <Path networking={networking} setTopBarTitle={setTopBarTitle} pathRecorder={pathRecorder} />\n          </Route>\n\n          <Route path=\"/pathfollowing\">\n            <PathFollowing\n              networking={networking}\n              setTopBarTitle={setTopBarTitle}\n              pathRecorder={pathRecorder}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  )\n}\n","// abbreviations:\n// refLat: reference latitude\n// refLong: reference longitude\n// EN: East North\n\nimport { EN_factors, LL2NE, NE2LL } from \"./shared/utilities\"\n\nexport default class PathRecorder {\n  isRecording: boolean\n  isRecordingLine: boolean\n  hasBeenRecordingLine: boolean\n  pointDistance: number\n  latitudes: number[]\n  longitudes: number[]\n  priorLatitude: number\n  priorLongitude: number\n  latRef: number\n  longRef: number\n  E_factor: number\n  N_factor: number\n  recorderId: number\n  numberOfPoints: number\n  recordMode: number\n\n  constructor() {\n    this.isRecording = false\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.pointDistance = 0.3 // meters\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.latRef = -1\n    this.longRef = -1\n    this.E_factor = 0\n    this.N_factor = 0\n    this.recorderId = 0\n    this.numberOfPoints = 0\n    this.recordMode = 0\n  }\n\n  requestRecording() {\n    this.isRecording = true\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.numberOfPoints = 0\n    this.recordMode = 0 // robot record mode = 0\n  }\n\n  requestVehicleRecording() {\n    this.isRecording = true\n    this.isRecordingLine = false\n    this.hasBeenRecordingLine = false\n    this.latitudes = []\n    this.longitudes = []\n    this.priorLatitude = -1\n    this.priorLongitude = -1\n    this.numberOfPoints = 0\n    this.recordMode = 1 // vehicle record mode = 1\n  }\n\n  stopRecording() {\n    this.isRecording = false\n    this.isRecordingLine = false\n\n    //DO NOT ADD THIS HERE: this.hasBeenRecordingLine = false\n  }\n\n  toggleLineRecording() {\n    this.isRecordingLine = !this.isRecordingLine\n  }\n\n  recordWhenRequested(latitude: number, longitude: number) {\n    if (this.isRecording) {\n      const haversineDistance = this.haversine(this.priorLatitude, latitude, this.priorLongitude, longitude)\n\n      if (this.priorLatitude === -1 || this.priorLongitude === -1) {\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.latRef = latitude\n        this.longRef = longitude\n\n        const EN = EN_factors(this.latRef)\n        this.E_factor = EN[0]\n        this.N_factor = EN[1]\n      } else if (this.isRecordingLine) {\n        this.hasBeenRecordingLine = true\n      } else if (this.hasBeenRecordingLine) {\n        this.hasBeenRecordingLine = false\n        const [northStart, eastStart] = LL2NE(\n          this.priorLatitude,\n          this.priorLongitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const [northEnd, eastEnd] = LL2NE(\n          latitude,\n          longitude,\n          this.latRef,\n          this.longRef,\n          this.E_factor,\n          this.N_factor\n        )\n        const lineDistance = ((northStart - northEnd) ** 2 + (eastStart - eastEnd) ** 2) ** 0.5\n        const divisions = Math.floor(lineDistance / this.pointDistance)\n\n        // good that the FOR loop won't run if divisions is < 1\n        for (let i = 1; i <= divisions; i++) {\n          const newNorth = northStart + (i / divisions) * (northEnd - northStart)\n          const newEast = eastStart + (i / divisions) * (eastEnd - eastStart)\n          const [newLatitude, newLongitude] = NE2LL(\n            newNorth,\n            newEast,\n            this.latRef,\n            this.longRef,\n            this.E_factor,\n            this.N_factor\n          )\n          this.latitudes.push(newLatitude)\n          this.longitudes.push(newLongitude)\n          this.numberOfPoints += 1\n\n          this.priorLatitude = newLatitude\n          this.priorLongitude = newLongitude\n        }\n      } else if (haversineDistance > this.pointDistance) {\n        this.latitudes.push(latitude)\n        this.longitudes.push(longitude)\n        this.numberOfPoints += 1\n\n        this.priorLatitude = latitude\n        this.priorLongitude = longitude\n      }\n    }\n  }\n\n  // Haversine Distance in meters between two latlong points\n  haversine(lat1: number, lat2: number, long1: number, long2: number) {\n    const latRadian1 = (lat1 / 180) * Math.PI\n    const latRadian2 = (lat2 / 180) * Math.PI\n    const longRadian1 = (long1 / 180) * Math.PI\n    const longRadian2 = (long2 / 180) * Math.PI\n\n    const R = 6371008 // Earth mean radisu in meters\n    const deltaLat = latRadian2 - latRadian1\n    const deltaLong = longRadian2 - longRadian1\n\n    // Small angle approximation is used\n    const distance =\n      R * Math.sqrt(deltaLat ** 2 + Math.cos(latRadian1) * Math.cos(latRadian2) * deltaLong ** 2)\n\n    return distance // in meters\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}